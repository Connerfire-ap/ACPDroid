Edge from virtualinvoke $r7.<androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)>($r8, $r0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)>
Edge from interfaceinvoke $r1.<androidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)>($r2) in <androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)> to <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1: void onContextAvailable(android.content.Context)>
Edge from specialinvoke $r2.<java.util.ArrayDeque: void <init>()>() in <androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)> to <java.util.ArrayDeque: void <init>()>
Edge from staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>($r4) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.tracing.Trace: void beginSection(java.lang.String)>
Edge from $z0 = virtualinvoke $r6.<android.app.Activity: boolean isChild()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <android.app.Activity: boolean isChild()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $f2 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFlRoot()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFlRoot()>
Edge from virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f3, $f2, $f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <androidx.appcompat.view.menu.MenuBuilder: void clear()> to <androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Window callback may not be null") in <androidx.appcompat.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)>
Edge from specialinvoke $r3.<androidx.appcompat.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>($r4, 0, 16908332, 0, 0, $r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper$1: void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper)> to <androidx.appcompat.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.widget.ResourcesWrapper: void <init>(android.content.res.Resources)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r19) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r4, $r5, $r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ") in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()>
Edge from $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)> to <java.lang.Boolean: void <clinit>()>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r4) in <androidx.fragment.app.Fragment: void performStart()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $d0 = staticinvoke <java.lang.Math: double cbrt(double)>($d0) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double cbrt(double)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()>
Edge from $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i0, $i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()> to <android.os.Build$VERSION: void <clinit>()>
Edge from r3 = <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE> in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r7) in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke r25.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: void <init>()>
Edge from $r10 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)>($r7) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r0.<androidx.navigation.NavGraph$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null) in <androidx.navigation.NavGraph: void <clinit>()> to <androidx.navigation.NavGraph$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.SparseArrayCompat: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r2, $r5, $r4, $r6) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $i0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
Edge from specialinvoke $r0.<androidx.navigation.Navigation: void <init>()>() in <androidx.navigation.Navigation: void <clinit>()> to <androidx.navigation.Navigation: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.TransformingSequence: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <android.graphics.drawable.LayerDrawable: void jumpToCurrentState()>
Edge from $r5 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)>($f0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.collections.EmptySet: void <init>()> to <java.lang.Object: void <init>()>
Edge from staticinvoke <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>($r7, $r1, $r2, $r3) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)> to <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r14) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$2: void run()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for Fragment ") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>
Edge from $z1 = virtualinvoke $r8.<androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>() in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>
Edge from $r10 = virtualinvoke $r8.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r3, $i1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onDestroy()>() in <androidx.fragment.app.FragmentActivity: void onDestroy()> to <android.app.Activity: void onDestroy()>
Edge from virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)>($z0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()> to <android.graphics.drawable.Drawable: int getMinimumHeight()>
Edge from $r7 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
Edge from $r4 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.appcompat.widget.VectorEnabledTintResources: java.lang.String getResourceName(int)>
Edge from $r1 = <java.lang.Integer: java.lang.Class TYPE> in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <java.lang.Integer: void <clinit>()>
Edge from specialinvoke $r0.<androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>($r6) in <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)> to <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)>
Edge from $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()> to <android.util.SparseArray: int size()>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>($r4) in <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r1, null) in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <kotlin.collections.EmptySet: boolean contains(java.lang.Object)>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: void <init>(android.graphics.drawable.AnimationDrawable,boolean)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r8.<androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>($r7, $r9) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($r1, $i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i4, $r1, $i2, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void <clinit>()>
Edge from virtualinvoke $r8.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r7) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>
Edge from specialinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void <init>()>() in <androidx.lifecycle.Lifecycle: void <init>()> to <java.util.concurrent.atomic.AtomicReference: void <init>()>
Edge from $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r7 = newarray (java.lang.String)[1] in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <java.lang.String: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)> to <android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>($r1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>($r1, $i2, 0) in <androidx.collection.SimpleArrayMap: int indexOfNull()> to <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>
Edge from $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <java.lang.Math: float abs(float)>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void dispatchOnAttachFragment(androidx.fragment.app.Fragment)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r14 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)>($r1, $i1, $i0) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.HashMap: java.util.Set keySet()>
Edge from $r2 = virtualinvoke $r1.<androidx.collection.MapCollections: java.util.Set getKeySet()>() in <androidx.collection.ArraySet: java.util.Iterator iterator()> to <androidx.collection.MapCollections: java.util.Set getKeySet()>
Edge from $r1 = <androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE> in <androidx.core.view.AccessibilityDelegateCompat: void <init>()> to <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("DETECT_FRAGMENT_TAG_USAGE", 3) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from $z0 = virtualinvoke $r0.<com.google.android.material.snackbar.BaseTransientBottomBar: boolean hasSnackbarStyleAttr()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: int getSnackbarBaseLayoutResId()> to <com.google.android.material.snackbar.BaseTransientBottomBar: boolean hasSnackbarStyleAttr()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r5) in <androidx.fragment.app.Fragment: void performPause()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>() in <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)> to <java.lang.ArrayIndexOutOfBoundsException: void <init>()>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("DETECT_FRAGMENT_REUSE", 2) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VectorDrawableCompat", "parser error", $r9) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>($i0, 0) in <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)> to <androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ComplexColorCompat", "Failed to inflate ComplexColor.", $r3) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0) in <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)>
Edge from virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)> to <android.graphics.Path: void moveTo(float,float)>
Edge from $i0 = virtualinvoke $r0.<com.google.android.material.snackbar.BaseTransientBottomBar: int getDuration()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: void show()> to <com.google.android.material.snackbar.Snackbar: int getDuration()>
Edge from $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r0, $i0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
Edge from $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getLayoutDirection", $r0) in <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
Edge from specialinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: int hashCode()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: void <init>()>
Edge from staticinvoke <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)>($r7) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.widget.ViewUtils: void <clinit>()>
Edge from $r2 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r6, $r7, $r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()> to <java.util.HashSet: java.util.Iterator iterator()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto RESUMED: ") in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void copyBounds(android.graphics.Rect)>($r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void stop()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/example/compatibilitytest/MyService;") in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
Edge from $r6 = interfaceinvoke $r5.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.executor.TaskExecutor: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r2 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>($r0) in <kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)> to <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $i1 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)> to <android.util.SparseArray: int indexOfKey(int)>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4) in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>() in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.util.HashMap: java.util.Set entrySet()>
Edge from $z0 = virtualinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity2$1: void <init>(com.example.compatibilitytest.MainActivity2)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>
Edge from $i1 = staticinvoke <java.lang.Math: int round(float)>($f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: int round(float)>
Edge from $f7 = staticinvoke <java.lang.Math: float signum(float)>($f7) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float signum(float)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>($r8, $i1, 0, 1, $r6) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>
Edge from virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:view_state", $r5) in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
Edge from $z0 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from $d4 = staticinvoke <java.lang.Math: double sin(double)>($d4) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r24 = virtualinvoke $r20.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r23, r31, r32) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>
Edge from $r2 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)>($f10, $f11, $f0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)>
Edge from $z0 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)>($r5, $i2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)>
Edge from $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888> in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Bitmap$Config: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()>() in <androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()>
Edge from virtualinvoke $r2.<androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)>($r0) in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()> to <androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>($r0, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from specialinvoke $r0.<androidx.activity.result.ActivityResultRegistry: void <init>()>() in <androidx.activity.ComponentActivity$2: void <init>(androidx.activity.ComponentActivity)> to <androidx.activity.result.ActivityResultRegistry: void <init>()>
Edge from $r7 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r6) in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>() in <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete()> to <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>($i0) in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from specialinvoke $r0.<java.util.ArrayList: void <init>()>() in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.util.ArrayList: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i4, $r1, $i2, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r8.<androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <init>()>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: void <init>()>
Edge from $r0 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;") in <androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)> to <android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
Edge from specialinvoke $r3.<com.google.android.material.snackbar.BaseTransientBottomBar$1: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()> to <com.google.android.material.snackbar.BaseTransientBottomBar$1: void <init>()>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManager: void dispatchDestroy()>() in <androidx.fragment.app.Fragment: void performDetach()> to <androidx.fragment.app.FragmentManager: void dispatchDestroy()>
Edge from $r3 = staticinvoke <com.google.android.material.snackbar.Snackbar: android.view.ViewGroup findSuitableParent(android.view.View)>($r2) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $r2 = virtualinvoke $r1.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, $i1) in <androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()> to <androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>() in <androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()> to <java.lang.Object: java.lang.Object clone()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window") in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r3 = virtualinvoke $r1.<androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)>($l3, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)> to <androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setStrokeWidth(float)>($f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setStrokeWidth(float)>
Edge from $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1) in <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r3.<androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)>($r0, $r2) in <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)> to <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar$2: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double cos(double)>
Edge from $d11 = staticinvoke <java.lang.Math: double abs(double)>($d11) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double abs(double)>
Edge from <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates> = $r0 in <androidx.appcompat.app.AppCompatDelegate: void <clinit>()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from staticinvoke <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)>
Edge from $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r0) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpecialEffectsController: ") in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r5 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>() in <androidx.fragment.app.FragmentManager$2: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void sync()>() in <androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.LifecycleRegistry: void sync()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>
Edge from $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.util.ArrayList: int size()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>
Edge from specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MyService: void onHandleIntent(android.content.Intent)>(null) in <dummyMainClass: com.example.compatibilitytest.MyService dummyMainMethod_com_example_compatibilitytest_MyService(android.content.Intent)> to <com.example.compatibilitytest.MyService: void onHandleIntent(android.content.Intent)>
Edge from $r9 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r3, $r2, $r1, $r8) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from $i4 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i4, $i1, $i0) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <android.graphics.Color: int rgb(int,int,int)>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>
Edge from specialinvoke $r5.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)>($r3, $r2) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.activity.result.ActivityResultRegistry$CallbackAndContract: void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>() in <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>
Edge from specialinvoke $r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar$4: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)> to <androidx.core.view.AccessibilityDelegateCompat: void <init>()>
Edge from $i0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "strokeAlpha", 11, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r3 = staticinvoke <androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)>($r1) in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r6 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>
Edge from $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r11 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r1, "tint") in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>() in <androidx.fragment.app.FragmentManager: java.util.List getFragments()> to <androidx.fragment.app.FragmentStore: java.util.List getFragments()>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManagerState: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)>($r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>()>
Edge from $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>() in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: boolean isEmpty()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArithmeticException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r1 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r1, $i2) in <androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)> to <android.util.StateSet: int[] trimStateSet(int[],int)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, null, $r2) in <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)> to <androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void reverse()>
Edge from virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r5) in <androidx.fragment.app.Fragment: void performPause()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke $r12.<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])>($r11) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])>
Edge from $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r11 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getXml(int)>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
Edge from specialinvoke $r5.<com.example.compatibilitytest.MainActivity$2: void <init>(com.example.compatibilitytest.MainActivity)>($r0) in <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity$2: void <init>(com.example.compatibilitytest.MainActivity)>
Edge from virtualinvoke $r3.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $z0 = specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()>() in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()>
Edge from virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void run()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void invalidateOptionsMenu()>() in <androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()> to <androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()>
Edge from specialinvoke $r4.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentContainer: void <init>()>() in <androidx.fragment.app.Fragment$4: void <init>(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentContainer: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>($r11) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>
Edge from virtualinvoke $r2.<com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)>
Edge from <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = null in <java.lang.String: void <clinit>()> to <java.lang.String: void <clinit>()>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.result.ActivityResultLauncher: void <init>()> to <java.lang.Object: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)> to <androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)>
Edge from specialinvoke $r0.<android.app.Activity: void <init>()>() in <androidx.core.app.ComponentActivity: void <init>()> to <android.app.Activity: void <init>()>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManagerState: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from $r6 = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.resources.R$styleable: void <clinit>()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from <androidx.collection.SparseArrayCompat: java.lang.Object DELETED> = $r0 in <androidx.collection.SparseArrayCompat: void <clinit>()> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from virtualinvoke $r5.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r17) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>
Edge from specialinvoke $r0.<androidx.appcompat.app.ActionBar: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <androidx.appcompat.app.ActionBar: void <init>()>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()>
Edge from $r5 = virtualinvoke $r1.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r7, $r0, "interpolator", 0, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setStrokeMiter(float)>($f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setStrokeMiter(float)>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r1) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r5.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, $r6) in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <android.util.SparseArray: void append(int,java.lang.Object)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)>($r4) in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)>
Edge from $r0 = <androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache> in <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<com.google.android.material.snackbar.BaseTransientBottomBar: void show()>() in <com.google.android.material.snackbar.Snackbar: void show()> to <com.google.android.material.snackbar.BaseTransientBottomBar: void show()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)> to <java.lang.System: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, $r4, $r6, null) in <androidx.collection.LruCache: void trimToSize(int)> to <androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found") in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(4) in <androidx.fragment.app.FragmentManager: void dispatchStop()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from virtualinvoke $r1.<androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)>($r0) in <androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()> to <androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.collections.EmptyIterator: java.lang.Object next()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
Edge from $f1 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i1) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <androidx.core.content.res.CamUtils: float linearized(int)>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permissions were requested for ") in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>() in <androidx.appcompat.widget.ThemeUtils: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
Edge from specialinvoke $r2.<androidx.appcompat.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)>($r0, $r3) in <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])> to <androidx.appcompat.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AvdcInflateDelegate", "Exception while inflating <animated-vector>", $r7) in <androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "scaleX", 3, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r12 = new android.content.res.ColorStateList in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.content.res.ColorStateList: void <clinit>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "activity") in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performDetach()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.Fragment: void performDetach()>
Edge from $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from virtualinvoke $r5.<java.util.ArrayDeque: java.lang.Object pop()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayDeque: java.lang.Object pop()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MyService: void me3()>() in <com.example.compatibilitytest.MyService: void me2()> to <com.example.compatibilitytest.MyService: void me3()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $d0 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double max(double,double)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i2 = virtualinvoke $r1.<java.lang.String: int length()>() in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.lang.String: int length()>
Edge from $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from specialinvoke $r8.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void <init>()>() in <com.example.compatibilitytest.MainActivity: void <init>()> to <androidx.appcompat.app.AppCompatActivity: void <init>()>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r2, $r3, $r4, $r5) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $r0 = new androidx.fragment.app.strictmode.FragmentStrictMode in <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()> to <java.lang.Enum: int ordinal()>
Edge from $r14 = virtualinvoke $r13.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r9 = interfaceinvoke $r14.<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r12, $r13, $r15) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r5 = new androidx.collection.SparseArrayCompat in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from specialinvoke $r0.<androidx.core.app.ComponentActivity: void <init>()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.core.app.ComponentActivity: void <init>()>
Edge from virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>($r1) in <androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>
Edge from specialinvoke $r2.<android.util.SparseArray: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> to <android.util.SparseArray: void <init>()>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve setLayoutDirection(int) method", $r5) in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r4.<androidx.core.content.res.CamColor: void <init>(float,float,float,float,float,float,float,float,float)>($f0, $f1, $f7, $f8, $f2, $f3, $f4, $f5, $f6) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: void <init>(float,float,float,float,float,float,float,float,float)>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>($r1) in <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from $r6 = virtualinvoke $r17.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()>
Edge from $i0 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: int size()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()> to <androidx.collection.SparseArrayCompat: int size()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentController: boolean execPendingActions()>() in <androidx.fragment.app.FragmentActivity: void onResume()> to <androidx.fragment.app.FragmentController: boolean execPendingActions()>
Edge from $r3 = interfaceinvoke $r9.<androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: android.os.Bundle saveState()>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r2, $r1, "strokeLineJoin", 9, -1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $z0 = <androidx.fragment.app.FragmentManager: boolean DEBUG> in <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r1 = <androidx.collection.ContainerHelpers: long[] EMPTY_LONGS> in <androidx.collection.LongSparseArray: void <init>(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from virtualinvoke $r3.<android.graphics.Rect: void offsetTo(int,int)>(0, 0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Rect: void offsetTo(int,int)>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: void onDestroy()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $f1 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i1) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <androidx.core.content.res.CamUtils: float linearized(int)>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
Edge from i0 = <androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode> in <androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <java.util.ArrayList: int size()>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getAnimation(int)>
Edge from $r3 = virtualinvoke $r0.<androidx.collection.LruCache: java.lang.Object create(java.lang.Object)>($r1) in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <androidx.collection.LruCache: java.lang.Object create(java.lang.Object)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has called complete.") in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()> to <android.graphics.drawable.LayerDrawable: void jumpToCurrentState()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ") in <androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: void <init>()>
Edge from $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)>($r4) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)>
Edge from specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>() in <androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()> to <java.util.NoSuchElementException: void <init>()>
Edge from $r3 = <androidx.navigation.Navigation: androidx.navigation.Navigation INSTANCE> in <androidx.navigation.Navigation$findViewNavController$2: androidx.navigation.NavController invoke(android.view.View)> to <androidx.navigation.Navigation: void <clinit>()>
Edge from specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not allowed.") in <androidx.startup.InitializationProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: int size()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid animated-selector tag ") in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r12 = staticinvoke <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()>() in <androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()>
Edge from virtualinvoke $r14.<androidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)>($r11) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)>
Edge from specialinvoke $r5.<androidx.fragment.app.FragmentViewLifecycleOwner: void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore)>($r0, $r6) in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.fragment.app.FragmentViewLifecycleOwner: void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore)>
Edge from virtualinvoke $r3.<android.content.Context: void setTheme(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: void setTheme(int)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r7.<androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)>($r8) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()>() in <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: android.os.Bundle saveState()> to <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()>
Edge from virtualinvoke $r8.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r10) in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>
Edge from $r5 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>
Edge from $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <java.lang.Math: float abs(float)>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getXml(int)>
Edge from specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Context can\'t be null when inflating animators") in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $r1 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()>
Edge from $r4 = staticinvoke <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>($r3) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with view ") in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.ToolbarActionBar: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r0, $i0) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from specialinvoke $r8.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r11) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
Edge from $r4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "propertyName", 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on a background thread") in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <java.lang.Object: java.lang.Class getClass()>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation)>($r1, $r2) in <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void run()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation)>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r0) in <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The path is null, which is created from ") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)>($r1) in <androidx.appcompat.view.menu.MenuBuilder: void clear()> to <androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStop()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStop()>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.fragment.app.Fragment: android.content.res.Resources getResources()> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>
Edge from $r5 = <androidx.collection.LongSparseArray: java.lang.Object DELETED> in <androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)> to <androidx.collection.LongSparseArray: void <clinit>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void <clinit>()>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i1, $i0) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>
Edge from $r5 = virtualinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>(1) in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>
Edge from $i0 = virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpecialEffectsController: Enqueuing show operation for fragment ") in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = virtualinvoke $r0.<android.app.Activity: android.os.Looper getMainLooper()>() in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <android.view.ContextThemeWrapper: android.os.Looper getMainLooper()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r2 = staticinvoke <androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0) in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r4 = virtualinvoke $r1.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("KEY_COMPONENT_ACTIVITY_LAUNCHED_KEYS") in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
Edge from staticinvoke <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>($r3) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($r4, null, $r5, $i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>
Edge from $r6 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r10) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke $r6.<androidx.collection.LongSparseArray: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <androidx.collection.LongSparseArray: void <init>()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()>
Edge from specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r1, $r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <android.content.res.ColorStateList: void <init>(int[][],int[])>
Edge from virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r15 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint$Style: void <clinit>()>
Edge from specialinvoke $r8.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.Fragment: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>() in <androidx.fragment.app.FragmentManager: void noteStateNotSaved()> to <androidx.fragment.app.FragmentStore: java.util.List getFragments()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>
Edge from $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)> to <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>
Edge from $r4 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>($r7, $r4) in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>
Edge from virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>($r1) in <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)> to <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>
Edge from specialinvoke $r13.<androidx.fragment.app.FragmentManager$4: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentManager$4: void <init>(androidx.fragment.app.FragmentManager)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "it") in <androidx.navigation.Navigation$findViewNavController$2: androidx.navigation.NavController invoke(android.view.View)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES> = $r0 in <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <clinit>()> to <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.savedstate.Recreator: void <init>(androidx.savedstate.SavedStateRegistryOwner)> to <java.lang.Object: void <init>()>
Edge from $r6 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.content.res.ColorStateList)>($r5) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.content.res.ColorStateList)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)>($r0) in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)> to <androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)>
Edge from interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r10) in <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()> to <java.util.HashSet: boolean add(java.lang.Object)>
Edge from $z0 = virtualinvoke $r2.<android.graphics.PathMeasure: boolean nextContour()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <android.graphics.PathMeasure: boolean nextContour()>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r2, $r1, "fillType", 2, 0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $r5 = <androidx.collection.SparseArrayCompat: java.lang.Object DELETED> in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performDestroyView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from $r4 = virtualinvoke $r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>($r3, $r2) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>($r1) in <androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()>() in <androidx.appcompat.app.TwilightManager: boolean isNight()> to <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()>
Edge from $z0 = virtualinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: android.view.LayoutInflater getLayoutInflater()>() in <androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()> to <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r4.<androidx.fragment.app.FragmentStore: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentStore: void <init>()>
Edge from $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(4, $r3) in <androidx.arch.core.executor.DefaultTaskExecutor: void <init>()> to <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.Fragment: android.view.View getFocusedView()>() in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.Fragment: android.view.View getFocusedView()>
Edge from $f3 = staticinvoke <java.lang.Math: float abs(float)>($f1) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>($i0) in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>($r1, $r8, $r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
Edge from $r5 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <androidx.appcompat.app.TwilightManager: boolean isStateValid()> to <java.lang.System: void <clinit>()>
Edge from specialinvoke $r7.<androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>($r6, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r2.<androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>(0) in <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>
Edge from $r1 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.fragment.app.FragmentActivity: void markFragmentsCreated()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.ui.AppBarConfiguration: void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("androidx.lifecycle.BundlableSavedStateRegistry.key", $r2) in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
Edge from $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <java.lang.Integer: void <clinit>()>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i0, $r0) in <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>
Edge from $r2 = <androidx.navigation.Navigation: androidx.navigation.Navigation INSTANCE> in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <androidx.navigation.Navigation: void <clinit>()>
Edge from specialinvoke $r12.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r13, $r1, $r10) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.TwilightCalculator: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.collections.EmptyMap: void <init>()> to <java.lang.Object: void <init>()>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r0, "value", 0, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>() in <androidx.navigation.NavDestination: void <clinit>()> to <java.util.LinkedHashMap: void <init>()>
Edge from $r6 = specialinvoke $r5.<androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)>($r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r10 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r3, $r5) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
Edge from <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> = $r13 in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.Collections: java.util.Map emptyMap()>
Edge from $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from $r2 = new android.content.res.Configuration in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Configuration: void <clinit>()>
Edge from $d0 = staticinvoke <java.lang.Math: double exp(double)>($d0) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double exp(double)>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r5 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r1) in <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r5, null, $r4) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 2) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from $r1 = virtualinvoke $r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from $f2 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i0) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <androidx.core.content.res.CamUtils: float linearized(int)>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>
Edge from specialinvoke $r2.<android.os.Bundle: void <init>()>() in <com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)> to <android.os.Bundle: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)>(1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>($r2, $r1, $r3, "fillColor", 1, 0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from $z0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()> to <androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED> in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.Integer: void <clinit>()>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()> to <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()>
Edge from <androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR> = $r0 in <androidx.fragment.app.BackStackRecordState: void <clinit>()> to <androidx.fragment.app.BackStackRecordState: void <clinit>()>
Edge from $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke r28.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
Edge from $r12 = new androidx.activity.ImmLeaksCleaner in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ImmLeaksCleaner: void <clinit>()>
Edge from specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not perform this action after onSaveInstanceState") in <androidx.fragment.app.FragmentManager: void checkStateLoss()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r5 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)>($r4, $r2) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)>
Edge from $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r7.<androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no target state") in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlX1 attribute") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <android.view.InflateException: void <init>(java.lang.String)>
Edge from $f0 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getN()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getN()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.ToolbarActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
Edge from specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>() in <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
Edge from $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r10) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>($r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>
Edge from $r1 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)> to <android.graphics.Paint$Join: void <clinit>()>
Edge from specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
Edge from specialinvoke $r6.<com.example.compatibilitytest.MainActivity3$2: void <init>(com.example.compatibilitytest.MainActivity3)>($r0) in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity3$2: void <init>(com.example.compatibilitytest.MainActivity3)>
Edge from specialinvoke r12.<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
Edge from $i0 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.Math: float abs(float)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity$1: void <init>(com.example.compatibilitytest.MainActivity)> to <java.lang.Object: void <init>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.tracing.Trace: void endSection()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r2 = staticinvoke <androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)>($r1) in <androidx.startup.InitializationProvider: boolean onCreate()> to <androidx.startup.AppInitializer: void <clinit>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.") in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void create()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$policy") in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bundle with restored state for the component \"androidx.savedstate.Restarter\" must contain list of strings by the key \"classes_to_restore\"") in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, $r2) in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()>() in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: void <init>()>
Edge from $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()>
Edge from virtualinvoke $r1.<android.app.Activity: void recreate()>() in <androidx.core.app.ActivityCompat$2: void run()> to <android.app.Activity: void recreate()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke getLayoutDirection() via reflection", $r8) in <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Exception: java.lang.Throwable getCause()>() in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.Throwable: java.lang.Throwable getCause()>
Edge from $i1 = staticinvoke <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>($d0, $d1, $d2) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>
Edge from $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r1.<com.example.compatibilitytest.MainActivity3$1: void <init>(com.example.compatibilitytest.MainActivity3,android.content.Intent)>($r0, $r3) in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity3$1: void <init>(com.example.compatibilitytest.MainActivity3,android.content.Intent)>
Edge from staticinvoke <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)>($r0, $r6, $r9) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.navigation.ui.NavigationUI: void <clinit>()>
Edge from $r2 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0) in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r1, $z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>
Edge from $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>() in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.util.ArrayList: int size()>
Edge from virtualinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r2, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onResume()>
Edge from specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>(null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>
Edge from $r2 = new android.content.Intent in <com.example.compatibilitytest.MainActivity$1: void onClick(android.view.View)> to <android.content.Intent: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $f3 = staticinvoke <androidx.core.content.res.CamUtils: float lerp(float,float,float)>(0.525F, 0.59F, 1.9999999F) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <androidx.core.content.res.CamUtils: float lerp(float,float,float)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r1, "pathData") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r0, $r2, $r1) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.collection.LongSparseArray: void <init>(int)>(10) in <androidx.collection.LongSparseArray: void <init>()> to <androidx.collection.LongSparseArray: void <init>(int)>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r4.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()> to <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void saveViewState()>() in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <androidx.fragment.app.FragmentStateManager: void saveViewState()>
Edge from $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r6.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>()>
Edge from $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <android.util.Xml: void <clinit>()>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>($r1, $i0) in <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $r5 = virtualinvoke $r3.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from $r5 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>() in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
Edge from $r11 = virtualinvoke $r5.<java.util.ArrayDeque: java.lang.Object peek()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayDeque: java.lang.Object peek()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getLevel()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int getLevel()>
Edge from specialinvoke $r16.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void <init>()>
Edge from $r2 = specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>($r1) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>
Edge from specialinvoke $r2.<androidx.lifecycle.ViewModelStore: void <init>()>() in <androidx.activity.ComponentActivity: void ensureViewModelStore()> to <androidx.lifecycle.ViewModelStore: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r5.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>
Edge from $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void stop()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r0.<androidx.collection.LruCache: void <init>(int)>(6) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: void <init>(int)> to <androidx.collection.LruCache: void <init>(int)>
Edge from $r7 = specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)>($r6) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.util.concurrent.CopyOnWriteArrayList: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)>
Edge from specialinvoke $r7.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r8) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
Edge from specialinvoke $r3.<java.util.WeakHashMap: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)> to <java.util.WeakHashMap: void <init>()>
Edge from virtualinvoke $r4.<android.animation.AnimatorSet: void end()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()> to <android.animation.AnimatorSet: void end()>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: java.lang.Object get(java.lang.Object)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)> to <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>
Edge from $r24 = virtualinvoke $r20.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r22, r33, r34) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>
Edge from $r1 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>() in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>
Edge from $i2 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.collection.LongSparseArray: void append(long,java.lang.Object)>($l4, $r3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <androidx.collection.LongSparseArray: void append(long,java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastS()>() in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.os.BuildCompat: boolean isAtLeastS()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ") in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot invoke ") in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>($i0, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)> to <androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>
Edge from $r3 = virtualinvoke $r1.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>() in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r8 = virtualinvoke $r11.<java.util.ArrayDeque: java.lang.Object pollFirst()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.ArrayDeque: java.lang.Object pollFirst()>
Edge from $r4 = staticinvoke <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)>($r2) in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)>
Edge from specialinvoke $r0.<androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)>($i0, $r1) in <androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)> to <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.fragment.app.Fragment$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r14) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$2: void run()>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can consumeRestoredStateForKey only after super.onCreate of corresponding component") in <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r1 = <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>
Edge from specialinvoke $r12.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)>($r13, $r1, $r16, $r17, $r8) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<vector> tag requires width > 0") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r5.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: void clear()>
Edge from virtualinvoke $r6.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r6.<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence)>($r0) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence)>
Edge from $r8 = interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9) in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <kotlin.collections.EmptyIterator: java.lang.Object next()>
Edge from $r6 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: void onPause()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke r18.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ViewModel: void onCleared()>() in <androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)> to <androidx.fragment.app.FragmentManagerViewModel: void onCleared()>
Edge from specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Transient bottom bar must have non-null callback") in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)>($r11) in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)>
Edge from virtualinvoke $r3.<androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)> to <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
Edge from $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $f4 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getC()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getC()>
Edge from specialinvoke $r0.<androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void <init>(android.app.Activity)>($r4) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void <init>(android.app.Activity)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)> to <java.lang.Object: void <init>()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlX1", 0, 0.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $i1 = virtualinvoke $r6.<androidx.collection.SimpleArrayMap: int size()>() in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int size()>
Edge from $r7 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r4) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setVariablePadding(boolean)>($z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)>
Edge from staticinvoke <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>($r1) in <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>
Edge from $i0 = virtualinvoke $r3.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r2) in <androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.VectorEnabledTintResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
Edge from $r3 = virtualinvoke $r2.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.activity.ComponentActivity$7: void onContextAvailable(android.content.Context)> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from $r3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "pathData", 4) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from virtualinvoke $r0.<android.app.Activity: void recreate()>() in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <android.app.Activity: void recreate()>
Edge from $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onAttach()") in <androidx.fragment.app.Fragment: void performAttach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int getCapacity()>() in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()>
Edge from specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>
Edge from virtualinvoke $r13.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from virtualinvoke $r0.<androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)>($r13, $r3) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)>
Edge from specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)> to <android.app.Activity: void onCreate(android.os.Bundle)>
Edge from specialinvoke $r1.<kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)>($r0) in <kotlin.sequences.TransformingSequence: java.util.Iterator iterator()> to <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)>
Edge from specialinvoke $r3.<java.util.HashMap: void <init>()>() in <androidx.startup.AppInitializer: void <init>(android.content.Context)> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void moveTo(float,float)>($f4, $f5) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void moveTo(float,float)>
Edge from specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>() in <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()> to <java.util.NoSuchElementException: void <init>()>
Edge from $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3) in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.Float: float parseFloat(java.lang.String)>
Edge from $r6 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] extractStateSet(android.util.AttributeSet)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)>
Edge from $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r1 = <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions DEFAULT> in <androidx.core.content.res.CamColor: int viewedInSrgb()> to <androidx.core.content.res.ViewingConditions: void <clinit>()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r4.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.ArrayList: int size()>
Edge from <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> = $r0 in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $i1 = virtualinvoke $r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>($r1, $i1, $i0) in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>
Edge from virtualinvoke $r3.<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>
Edge from $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>() in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)> to <java.util.ArrayList: int size()>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])> to <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>
Edge from $i0 = virtualinvoke $r1.<java.lang.String: int length()>() in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.lang.String: int length()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r5, $i3, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 3) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int max(int,int)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void sync()>() in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: void sync()>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", "Failed to inflate ColorStateList, leaving it to the framework", $r4) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r2 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>
Edge from staticinvoke <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>($r7, $r1, $r2, $r3) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)> to <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>
Edge from $r5 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>($i0) in <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)> to <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>
Edge from specialinvoke $r3.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)>($r0, $r1) in <androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)> to <androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6) in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.os.CancellationSignal: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r5 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate") in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: int size()>
Edge from $z0 = staticinvoke <com.google.android.material.snackbar.Snackbar: boolean hasSnackbarContentStyleAttrs(android.content.Context)>($r1) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: boolean hasSnackbarContentStyleAttrs(android.content.Context)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$8: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.Matrix: boolean postRotate(float,float,float)>($f1, 0.0F, 0.0F) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()> to <android.graphics.Matrix: boolean postRotate(float,float,float)>
Edge from $r1 = <androidx.collection.ContainerHelpers: int[] EMPTY_INTS> in <androidx.collection.SimpleArrayMap: void <init>()> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from specialinvoke $r6.<android.graphics.Rect: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.Rect: void <init>()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()> to <java.util.ArrayList: void <init>()>
Edge from $r8 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)>($r1, $r2, $r3, $r7, $i0, $r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>
Edge from $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from <androidx.lifecycle.LiveData: java.lang.Object NOT_SET> = $r0 in <androidx.lifecycle.LiveData: void <clinit>()> to <androidx.lifecycle.LiveData: void <clinit>()>
Edge from $i1 = staticinvoke <androidx.core.content.res.CamUtils: int intFromLStar(float)>($f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: int intFromLStar(float)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>($r7) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>
Edge from specialinvoke $r0.<androidx.arch.core.internal.SafeIterableMap$ListIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>($r1, $r2) in <androidx.arch.core.internal.SafeIterableMap$DescendingIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)> to <androidx.arch.core.internal.SafeIterableMap$ListIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>() in <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)>($r2) in <androidx.appcompat.widget.AppCompatDrawableManager: void preload()> to <androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)>
Edge from specialinvoke $r2.<androidx.appcompat.widget.AppCompatDrawableManager$1: void <init>()>() in <androidx.appcompat.widget.AppCompatDrawableManager: void preload()> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void <init>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()> to <android.os.Build$VERSION: void <clinit>()>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)> to <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>
Edge from $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(108) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>
Edge from specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r2) in <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)>($r1, $z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: void <init>(android.graphics.drawable.AnimationDrawable,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()>
Edge from $f2 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)>($f2, $f3, $f4, $f5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)>
Edge from $r5 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>() in <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.fragment.app.FragmentController: void noteStateNotSaved()>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from $r1 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4) in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $r1 = virtualinvoke $r0.<android.app.Activity: android.content.ComponentName getComponentName()>() in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)> to <android.app.Activity: android.content.ComponentName getComponentName()>
Edge from specialinvoke $r8.<androidx.appcompat.app.ToolbarActionBar$2: void <init>(androidx.appcompat.app.ToolbarActionBar)>($r0) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.app.ToolbarActionBar$2: void <init>(androidx.appcompat.app.ToolbarActionBar)>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: void <init>()>
Edge from $i4 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)>($i3, $i2) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>($r1) in <kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128) in <androidx.fragment.app.LogWriter: void <init>(java.lang.String)> to <java.lang.StringBuilder: void <init>(int)>
Edge from $r3 = interfaceinvoke $r4.<androidx.appcompat.widget.DecorToolbar: android.view.Menu getMenu()>() in <androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()> to <androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.Fragment: void performAttach()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $l4 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>($i0, $i2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>
Edge from $r10 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>($r1, $r1, $r2, 0) in <androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)> to <androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>
Edge from virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r14) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $r5 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)>($r2, $r4) in <androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)> to <kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 1.1111111111111112) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from specialinvoke $r0.<androidx.collection.ArraySet: void <init>()>() in <androidx.appcompat.app.AppCompatDelegate: void <clinit>()> to <androidx.collection.ArraySet: void <init>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element") in <kotlin.collections.EmptySet: boolean contains(java.lang.Void)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: int size()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from staticinvoke <androidx.tracing.TraceApi18Impl: void endSection()>() in <androidx.tracing.Trace: void endSection()> to <androidx.tracing.TraceApi18Impl: void endSection()>
Edge from specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
Edge from virtualinvoke $r2.<androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)>
Edge from specialinvoke $r4.<android.util.TypedValue: void <init>()>() in <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)> to <android.util.TypedValue: void <init>()>
Edge from virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r17) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: boolean addAll(java.util.Collection)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()>
Edge from $r1 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r1, $i2) in <androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)> to <android.util.StateSet: void <clinit>()>
Edge from $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)>($r0, 1) in <androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)> to <androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)>
Edge from $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 0.73) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r7) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: boolean addAll(java.util.Collection)>
Edge from specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<java.util.WeakHashMap: void <init>()>() in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void <init>()> to <java.util.WeakHashMap: void <init>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
Edge from $f0 = virtualinvoke $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>($r1, $r3) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)> to <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>
Edge from $r3 = virtualinvoke $r4.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r13.<android.animation.AnimatorSet: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.animation.AnimatorSet: void <init>()>
Edge from specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>() in <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)> to <java.util.ConcurrentModificationException: void <init>()>
Edge from $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)> to <java.lang.String: int hashCode()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r3, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r2.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>() in <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)> to <androidx.core.view.AccessibilityDelegateCompat: void <init>()>
Edge from $r4 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>($r4, $r3) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>
Edge from $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>($r4, $r1) in <androidx.fragment.app.FragmentStateManager: void saveState()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>
Edge from virtualinvoke $r2.<android.graphics.Paint: void setFilterBitmap(boolean)>(1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)> to <android.graphics.Paint: void setFilterBitmap(boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)> to <java.lang.Object: void <init>()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.") in <androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke r15.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)>($r12) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)>
Edge from $i2 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>($i1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)> to <java.lang.Object: void <init>()>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>("REMOVED", 0) in <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>
Edge from $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i4, $i5, $i6, $i0) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int argb(int,int,int,int)>
Edge from $r3 = virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addChild(android.graphics.drawable.Drawable)>($r3) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>
Edge from $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r6, $r2, $r1, $r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke $r1.<androidx.appcompat.view.ActionBarPolicy: void <init>(android.content.Context)>($r0) in <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)> to <androidx.appcompat.view.ActionBarPolicy: void <init>(android.content.Context)>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4) in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>() in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()>
Edge from $r1 = staticinvoke <androidx.viewbinding.ViewBindings: android.view.View findChildViewById(android.view.View,int)>($r0, 2131231188) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)> to <androidx.viewbinding.ViewBindings: android.view.View findChildViewById(android.view.View,int)>
Edge from $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r2) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i2) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)>(r25) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.activity.ComponentActivity$6: android.os.Bundle saveState()> to <android.os.Bundle: void <init>()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onPostResume()>() in <androidx.fragment.app.FragmentActivity: void onPostResume()> to <android.app.Activity: void onPostResume()>
Edge from virtualinvoke $r11.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r3 = new androidx.interpolator.view.animation.FastOutLinearInInterpolator in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()>
Edge from $i0 = virtualinvoke $r1.<androidx.arch.core.internal.FastSafeIterableMap: int size()>() in <androidx.lifecycle.LifecycleRegistry: boolean isSynced()> to <androidx.arch.core.internal.SafeIterableMap: int size()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>($r0, $f0, $f1, $f3, $f2, $f6, $f7, $f8, $z0, $z1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>
Edge from staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
Edge from specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getAnimation(int)> to <androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "The Activity\'s LayoutInflater already has a Factory installed so we can not install AppCompat\'s") in <androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()> to <android.util.Log: int i(java.lang.String,java.lang.String)>
Edge from $d2 = staticinvoke <java.lang.Math: double sin(double)>($d3) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from $r1 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: android.content.Context getActionBarThemedContext()> to <androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>
Edge from $z0 = interfaceinvoke $r3.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, null, $r1) in <androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()> to <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
Edge from staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)>($r0) in <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()> to <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "checkNotNull(activity.dr\u2026 }.actionBarThemedContext") in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>
Edge from $r5 = virtualinvoke r14.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transformer") in <kotlin.sequences.TransformingSequence: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r0 = new androidx.navigation.NavGraph$Companion$findStartDestination$1 in <androidx.navigation.NavGraph$Companion$findStartDestination$1: void <clinit>()> to <androidx.navigation.NavGraph$Companion$findStartDestination$1: void <clinit>()>
Edge from virtualinvoke $r9.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>
Edge from $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean isStateful()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <android.content.res.ColorStateList: boolean isStateful()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void quadTo(float,float,float,float)>($f0, $f1, $f3, $f2) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void quadTo(float,float,float,float)>
Edge from $r9 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path$FillType: void <clinit>()>
Edge from specialinvoke $r1.<androidx.collection.SparseArrayCompat: void <init>()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()> to <androidx.collection.SparseArrayCompat: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $r5 = virtualinvoke $r4.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>("androidx:appcompat") in <androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)> to <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>
Edge from $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.Object: java.lang.Class getClass()>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)>($r3) in <androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)> to <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class name exists") in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)>($r5, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)>
Edge from $r0 = new androidx.lifecycle.Lifecycle$State in <androidx.lifecycle.Lifecycle$State: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>($r1, $r8, $r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentStore: java.util.List getFragments()>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>($r2, $i1, $l0) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $r9 = <androidx.appcompat.R$styleable: int[] ActionBar> in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.R$styleable: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>($r1) in <androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)> to <androidx.lifecycle.LiveData: void setValue(java.lang.Object)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.collections.EmptyIterator: boolean hasNext()>
Edge from $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, class "Landroidx/fragment/app/strictmode/Violation;") in <androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)> to <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$violation") in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r4) in <androidx.fragment.app.Fragment: void performResume()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>($z0) in <androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)> to <androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>
Edge from $z1 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "type", $i0, 0) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r3) in <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from $r2 = new android.os.Bundle in <androidx.fragment.app.FragmentStateManager: void saveState()> to <android.os.Bundle: void <clinit>()>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
Edge from $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable> in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from interfaceinvoke $r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r6) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.lang.Object)>
Edge from $r8 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Policy violation in ", $r5) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>
Edge from $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>($r3) in <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)> to <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>
Edge from $r5 = virtualinvoke $r1.<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>("KEY_COMPONENT_ACTIVITY_RANDOM_OBJECT") in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
Edge from specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <java.util.LinkedHashMap: void <init>()>
Edge from <com.google.android.material.snackbar.BaseTransientBottomBar: boolean USE_OFFSET_API> = $z0 in <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>(null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>
Edge from specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
Edge from specialinvoke $r17.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>
Edge from specialinvoke $r1.<androidx.fragment.app.Fragment$AnimationInfo: void <init>()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()> to <androidx.fragment.app.Fragment$AnimationInfo: void <init>()>
Edge from $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d2) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NullPointerException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r8.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r10) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $r9 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r3 = virtualinvoke $r1.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("KEY_COMPONENT_ACTIVITY_REGISTERED_KEYS") in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
Edge from specialinvoke $r0.<kotlin.collections.EmptySet: void <init>()>() in <kotlin.collections.EmptySet: void <clinit>()> to <kotlin.collections.EmptySet: void <init>()>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r14) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.os.Handler: boolean post(java.lang.Runnable)>
Edge from virtualinvoke $r15.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r16) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0) in <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)>($r3, $r1, $r2) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)>
Edge from $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r2, $r3, $r1) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment getFragment()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r9.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
Edge from specialinvoke $r2.<androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)>($r0) in <androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()> to <androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)>
Edge from $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED> in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r9) in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>() in <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: void <init>()> to <androidx.activity.result.contract.ActivityResultContract: void <init>()>
Edge from $r2 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from virtualinvoke $r1.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(null) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "Ignoring addRetainedFragment as the state is already saved") in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $z0 = virtualinvoke $r5.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r6) in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>
Edge from $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r3, $r4, $r5, $r1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $r1 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES> in <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r5) in <androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)> to <java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
Edge from virtualinvoke $r12.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "navGraph") in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from staticinvoke <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>("setValue") in <androidx.lifecycle.LiveData: void setValue(java.lang.Object)> to <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)>
Edge from interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void run()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>
Edge from $z0 = specialinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1) in <androidx.fragment.app.Fragment: boolean equals(java.lang.Object)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>($r1) in <androidx.fragment.app.Fragment: void onAttach(android.content.Context)> to <androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>
Edge from $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r15 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> to <android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float)>(-1.0F, 1.0F) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void scale(float,float)>
Edge from specialinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>($r0, null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r3, null, $r2, $r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)> to <android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)>($i1, $z0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)>
Edge from $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "handler == null") in <androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)> to <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r8 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <java.lang.Integer: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)>($i0, $r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void create()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rQuadTo(float,float,float,float)>($f3, $f2, $f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rQuadTo(float,float,float,float)>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN> in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <clinit>()> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.fragment.app.Fragment: void performPause()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r4 = staticinvoke <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>
Edge from $i1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getCurrentIndex()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()>
Edge from $r3 = virtualinvoke $r2.<androidx.collection.ArraySet: java.util.Iterator iterator()>() in <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)> to <androidx.collection.ArraySet: java.util.Iterator iterator()>
Edge from $r11 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot have more than 2 params") in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r12.<androidx.lifecycle.ClassesInfoCache$MethodReference: void <init>(int,java.lang.reflect.Method)>($b3, $r14) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache$MethodReference: void <init>(int,java.lang.reflect.Method)>
Edge from $r1 = virtualinvoke $r0.<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()>() in <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()>
Edge from $l1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>
Edge from $r3 = staticinvoke <androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()>() in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i2) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onStop()>() in <androidx.fragment.app.Fragment: void performStop()> to <androidx.fragment.app.Fragment: void onStop()>
Edge from $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)>
Edge from $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) in <androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)> to <androidx.appcompat.widget.VectorEnabledTintResources: int getDimensionPixelSize(int)>
Edge from $f7 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getC()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getC()>
Edge from $d13 = staticinvoke <java.lang.Math: double sin(double)>($d7) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double sin(double)>
Edge from $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>() in <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void start()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r3) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r4) in <androidx.fragment.app.Fragment: void performResume()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ") in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i0) in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r0 = <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_WRONG_FRAGMENT_CONTAINER> in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()>
Edge from $z0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()>
Edge from specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Transient bottom bar must have non-null parent") in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.jvm.internal.Lambda: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from $r4 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>($r9, 1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r6, $i0, $r2) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2) in <androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent Sender result delivered for unknown Fragment ") in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = <androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.FragmentStateManager$2: void <clinit>()>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PathParser", " Points are coincident") in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from $z0 = virtualinvoke $r11.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r12) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>
Edge from $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $r0 = new androidx.navigation.Navigation$findViewNavController$2 in <androidx.navigation.Navigation$findViewNavController$2: void <clinit>()> to <androidx.navigation.Navigation$findViewNavController$2: void <clinit>()>
Edge from specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r4) in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from $r3 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from specialinvoke $r4.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
Edge from staticinvoke <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)>
Edge from $r4 = interfaceinvoke $r3.<androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.content.Context getActionBarThemedContext()>() in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: android.content.Context getActionBarThemedContext()>
Edge from $i1 = virtualinvoke $r3.<android.os.Bundle: int size()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <android.os.BaseBundle: int size()>
Edge from specialinvoke $r5.<com.example.compatibilitytest.MainActivity4$2: void <init>(com.example.compatibilitytest.MainActivity4)>($r0) in <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity4$2: void <init>(com.example.compatibilitytest.MainActivity4)>
Edge from $r1 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r4 = staticinvoke <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)>($r2) in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)>
Edge from $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.collection.SparseArrayCompat: void gc()>() in <androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)> to <androidx.collection.SparseArrayCompat: void gc()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)> to <androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
Edge from specialinvoke $r7.<androidx.fragment.app.SpecialEffectsController$Operation$1: void <init>(androidx.fragment.app.SpecialEffectsController$Operation)>($r0) in <androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)> to <androidx.fragment.app.SpecialEffectsController$Operation$1: void <init>(androidx.fragment.app.SpecialEffectsController$Operation)>
Edge from $r1 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)>($f7, $f1, $f0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStart()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStart()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "configuration") in <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onActivityCreated()") in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r12.<java.util.ArrayDeque: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.ArrayDeque: void <init>()>
Edge from $r1 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>() in <androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()> to <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>
Edge from $r8 = staticinvoke <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)>
Edge from $r6 = staticinvoke <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>($r5) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>
Edge from $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.4166666666666667) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <java.lang.Math: double pow(double,double)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: void <init>(android.content.res.Resources)>($r2) in <androidx.appcompat.widget.VectorEnabledTintResources: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.ResourcesWrapper: void <init>(android.content.res.Resources)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: void onStart()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r0, $i0) in <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from specialinvoke r25.<androidx.fragment.app.FragmentManager$6: void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r3) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager$6: void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>
Edge from $r3 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>() in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>
Edge from $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String)>("S", $r0) in <androidx.core.os.BuildCompat: boolean isAtLeastS()> to <androidx.core.os.BuildCompat: boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String)>
Edge from $r7 = virtualinvoke $r9.<androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)>($r0) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r3 = virtualinvoke $r3.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r2) in <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)> to <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
Edge from $r0 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
Edge from $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)>($i0, $r1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void show()> to <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)>
Edge from $r4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "pathData", 1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from specialinvoke $r1.<androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.FragmentStateManager: void saveState()> to <androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)>
Edge from $f0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getJ()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: float getJ()>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
Edge from virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>($r1) in <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>
Edge from interfaceinvoke $r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r6) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$8: void onActivityResult(java.lang.Object)>
Edge from $r2 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r0 = staticinvoke <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)> to <androidx.core.content.ContextCompat: void <clinit>()>
Edge from $f0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getJStar()>() in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <androidx.core.content.res.CamColor: float getJStar()>
Edge from $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.fragment.app.Fragment: void performDestroy()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED") in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void addAction(java.lang.String)>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)> to <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i1) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from specialinvoke $r3.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()> to <android.os.Bundle: void <init>()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i2, -1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>
Edge from $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve value from Resources#mResourcesImpl", $r6) in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r2.<androidx.arch.core.internal.SafeIterableMap$Entry: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)> to <androidx.arch.core.internal.SafeIterableMap$Entry: void <init>(java.lang.Object,java.lang.Object)>
Edge from $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float yFromLStar(float)>(50.0F) in <androidx.core.content.res.ViewingConditions: void <clinit>()> to <androidx.core.content.res.CamUtils: float yFromLStar(float)>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()>
Edge from $r9 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SavedStateProvider with the given key is already registered") in <androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r5 = new android.content.res.ColorStateList in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <android.content.res.ColorStateList: void <clinit>()>
Edge from specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: void <init>()>
Edge from $r17 = virtualinvoke $r16.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>("android:support:fragments") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>
Edge from $r7 = virtualinvoke $r0.<androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r2, $r3, $r1) in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Edge from $i0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <android.graphics.drawable.Drawable: int getChangingConfigurations()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])>($r1, $r2, $c1, $c0, $r4) in <androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)> to <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void <init>()>() in <androidx.fragment.app.FragmentManagerImpl: void <init>()> to <androidx.fragment.app.FragmentManager: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchStop()>() in <androidx.fragment.app.FragmentController: void dispatchStop()> to <androidx.fragment.app.FragmentManager: void dispatchStop()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentStore: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from virtualinvoke $r0.<android.app.Activity: void recreate()>() in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <android.app.Activity: void recreate()>
Edge from specialinvoke $r3.<android.os.Bundle: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <android.os.Bundle: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()>
Edge from virtualinvoke $r4.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.ToolbarActionBar: void setWindowTitle(java.lang.CharSequence)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable") in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<androidx.core.graphics.PathParser$ExtractFloatResult: void <init>()>() in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <androidx.core.graphics.PathParser$ExtractFloatResult: void <init>()>
Edge from specialinvoke $r1.<kotlin.sequences.GeneratorSequence$iterator$1: void <init>(kotlin.sequences.GeneratorSequence)>($r0) in <kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()> to <kotlin.sequences.GeneratorSequence$iterator$1: void <init>(kotlin.sequences.GeneratorSequence)>
Edge from $f1 = virtualinvoke $r1.<androidx.core.content.res.CamColor: float getJStar()>() in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <androidx.core.content.res.CamColor: float getJStar()>
Edge from virtualinvoke $r12.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <android.os.SystemClock: long uptimeMillis()>
Edge from $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>() in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <java.util.HashMap: java.util.Collection values()>
Edge from $r14 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r4 = staticinvoke <kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence)>($r1) in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence)>
Edge from specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: void <init>(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$1: void <init>(java.lang.Thread$UncaughtExceptionHandler)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($r1) in <androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()> to <androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", $r6) in <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)> to <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom ACTIVITY_CREATED: ") in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r4) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])> to <android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r9, $r10) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r3 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r2) in <androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean isStateSaved()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isStateSaved()>
Edge from specialinvoke r29.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: void <init>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r12) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManagerState$1: void <init>()>() in <androidx.fragment.app.FragmentManagerState: void <clinit>()> to <androidx.fragment.app.FragmentManagerState$1: void <init>()>
Edge from staticinvoke <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>($r3, $r5) in <androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> to <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r4, $i4, $i3) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>($r2, $r1, $r3, "strokeColor", 3, 0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)>($r1) in <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)> to <kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: boolean getBoolean(int)> to <androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)>
Edge from $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)> to <java.lang.Long: java.lang.Long valueOf(long)>
Edge from specialinvoke $r10.<androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)>($r0) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)>
Edge from virtualinvoke $r7.<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)>($r10) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable") in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)>($r8) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>($i1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>
Edge from $r1 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)>($i0) in <androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)>
Edge from virtualinvoke $r1.<android.os.Bundle: void remove(java.lang.String)>($r2) in <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)> to <android.os.Bundle: void remove(java.lang.String)>
Edge from $z0 = virtualinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $r9 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r1, $i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
Edge from $r1 = new android.graphics.Rect in <androidx.appcompat.widget.DrawableUtils: void <clinit>()> to <android.graphics.Rect: void <clinit>()>
Edge from $i7 = staticinvoke <android.graphics.Color: int green(int)>($i1) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int green(int)>
Edge from $r0 = <androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock> in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>() in <androidx.appcompat.widget.ResourcesWrapper: void <init>(android.content.res.Resources)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.util.DisplayMetrics getDisplayMetrics()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>($r5, $i0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>
Edge from $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()>
Edge from virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f3, $f2, $f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.42) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from specialinvoke r32.<androidx.fragment.app.FragmentManager$8: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager$8: void <init>(androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7) in <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $r2 = virtualinvoke $r1.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>("KEY_COMPONENT_ACTIVITY_REGISTERED_RCS") in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
Edge from $r5 = virtualinvoke $r0.<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>($r3) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>
Edge from specialinvoke $r1.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()> to <android.graphics.Matrix: void <init>()>
Edge from $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i0, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)> to <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
Edge from $r7 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()>
Edge from $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from specialinvoke $r5.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performDestroy()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity result delivered for unknown Fragment ") in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5) in <androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
Edge from $r16 = interfaceinvoke $r15.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void <init>(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void <init>(int)>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <java.lang.StringBuilder: void <init>()>
Edge from $r12 = virtualinvoke $r2.<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment: android.content.res.Resources getResources()>
Edge from $r14 = virtualinvoke $r13.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.ContextCompat: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()>
Edge from specialinvoke $r6.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>($r0, $r4, $r1) in <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)> to <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>
Edge from specialinvoke $r2.<kotlin.sequences.TransformingSequence: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r1, $r0) in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.sequences.TransformingSequence: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
Edge from $r5 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>($i0) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>
Edge from $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke $r6.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r1.<androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>($r0, null, 0) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.graphics.Shader)> to <androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>
Edge from specialinvoke $r13.<androidx.fragment.app.FragmentManagerState: void <init>()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManagerState: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$4: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r3.<androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>($z1) in <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()> to <androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
Edge from virtualinvoke $r6.<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int)>($i0) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.BaseTransientBottomBar: com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int)>
Edge from specialinvoke $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$1: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer)>($r0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer$1: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartIntentSenderForResult") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>() in <androidx.fragment.app.FragmentManager: boolean checkForMenus()> to <androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from $r8 = new android.content.res.Configuration in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <android.content.res.Configuration: void <clinit>()>
Edge from $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r1.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
Edge from virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r0) in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $r4 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>() in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)>($z0) in <androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()> to <androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)>
Edge from $r3 = virtualinvoke $r3.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:view_registry_state") in <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)> to <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
Edge from $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)>($r2, $r3, $r4, "tint", 1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i1) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No view found for id 0x") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable") in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r9) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Bitmap: void <clinit>()>
Edge from virtualinvoke $r3.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r7) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <android.graphics.Matrix: void set(android.graphics.Matrix)>
Edge from $r8 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: void moveToExpectedState()> to <java.util.HashMap: java.util.Collection values()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "allowedViolations") in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.LiveData$1: void <init>(androidx.lifecycle.LiveData)> to <java.lang.Object: void <init>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)> to <java.lang.Integer: void <clinit>()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class") in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r11.<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>($r8, 0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>
Edge from specialinvoke $r5.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>
Edge from $r3 = virtualinvoke $r2.<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>() in <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)> to <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "Ignoring removeRetainedFragment as the state is already saved") in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom STARTED: ") in <androidx.fragment.app.FragmentStateManager: void stop()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.tracing.Trace: boolean isEnabledFallback()> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that does not belong to this FragmentManager!") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r2.<androidx.appcompat.widget.TintTypedArray: int getColor(int,int)>(0, 0) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: int getColor(int,int)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from $r8 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r3) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r0 = staticinvoke <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>($r1) in <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: void burpActive()> to <java.util.HashMap: java.util.Collection values()>
Edge from $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r1) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)>
Edge from $f2 = staticinvoke <java.lang.Math: float signum(float)>($f2) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float signum(float)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)> to <java.lang.Object: java.lang.Class getClass()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.util.ArrayList: void <init>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>($i0, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($r10) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>
Edge from $r1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from <androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion> = $r0 in <androidx.navigation.NavGraph: void <clinit>()> to <androidx.navigation.NavGraph: void <clinit>()>
Edge from specialinvoke $r2.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r1, 0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'color\' attribute and a \'offset\' attribute!") in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.AssetManager getAssets()>() in <androidx.appcompat.widget.ResourcesWrapper: void <init>(android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
Edge from $f3 = virtualinvoke $r11.<android.graphics.PathMeasure: float getLength()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.PathMeasure: float getLength()>
Edge from virtualinvoke $r3.<androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)>($r7) in <androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)> to <androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)>
Edge from virtualinvoke $r5.<java.util.ArrayDeque: void push(java.lang.Object)>($r9) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayDeque: void push(java.lang.Object)>
Edge from specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN> in <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r3, 0, $r2) in <com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)> to <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>
Edge from specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>() in <kotlin.collections.EmptyIterator: java.lang.Void next()> to <java.util.NoSuchElementException: void <init>()>
Edge from $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchStart()>() in <androidx.fragment.app.FragmentController: void dispatchStart()> to <androidx.fragment.app.FragmentManager: void dispatchStart()>
Edge from specialinvoke $r0.<androidx.lifecycle.LiveData: void <init>()>() in <androidx.lifecycle.MutableLiveData: void <init>()> to <androidx.lifecycle.LiveData: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)>($r0, $r1) in <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)> to <androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)>
Edge from $r14 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r0 = <java.lang.Long: java.lang.Class TYPE> in <androidx.tracing.Trace: boolean isEnabledFallback()> to <java.lang.Long: void <clinit>()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)>($r0) in <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)> to <androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)>
Edge from virtualinvoke $r0.<androidx.fragment.app.SpecialEffectsController$Operation: void complete()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void cancel()> to <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onPause()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onPause()>
Edge from virtualinvoke $r6.<android.animation.ObjectAnimator: void setEvaluator(android.animation.TypeEvaluator)>($r9) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <android.animation.ObjectAnimator: void setEvaluator(android.animation.TypeEvaluator)>
Edge from virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity2: void setSupportActionBar(androidx.appcompat.widget.Toolbar)>($r5) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)>
Edge from $r8 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>($r7, null) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>
Edge from $d2 = staticinvoke <java.lang.Math: double cos(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double cos(double)>
Edge from $z0 = specialinvoke $r0.<com.google.android.material.snackbar.SnackbarManager: boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)>($r3, 4) in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager: boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)>
Edge from specialinvoke $r14.<androidx.core.app.ActivityRecreator$2: void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)>($r9, $r0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$2: void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)>
Edge from specialinvoke $r1.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r6) in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performResume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r12, $r13, $r3, $r4, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1) in <androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VdcInflateDelegate", "Exception while inflating <vector>", $r7) in <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r6) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
Edge from specialinvoke $r10.<androidx.activity.ComponentActivity$4: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$4: void <init>(androidx.activity.ComponentActivity)>
Edge from $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)> to <android.graphics.Path: void moveTo(float,float)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding back stack #") in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from <androidx.appcompat.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod> = $r3 in <androidx.appcompat.widget.ViewUtils: void <clinit>()> to <androidx.appcompat.widget.ViewUtils: void <clinit>()>
Edge from <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor> = $r0 in <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()> to <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, -1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from specialinvoke $r17.<androidx.startup.StartupException: void <init>(java.lang.Throwable)>($r16) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.startup.StartupException: void <init>(java.lang.Throwable)>
Edge from $r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()>() in <androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()>
Edge from interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3) in <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)> to <kotlin.sequences.EmptySequence: java.util.Iterator iterator()>
Edge from $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r6 = virtualinvoke $r0.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r5) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()> to <kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchStart()>() in <androidx.fragment.app.Fragment: void performStart()> to <androidx.fragment.app.FragmentManager: void dispatchStart()>
Edge from $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.Object: int hashCode()>
Edge from <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion Companion> = $r0 in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>($r1) in <androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, $f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($r7) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>
Edge from $i0 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStateManager: void addViewToContainer()> to <androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)>
Edge from r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r2 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()> to <androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()>
Edge from virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)> to <android.graphics.Paint: void setAlpha(int)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ViewModelStore: void <init>()> to <java.lang.Object: void <init>()>
Edge from $f2 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getN()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getN()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r9) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void create()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke r20.<androidx.startup.StartupException: void <init>(java.lang.Throwable)>($r15) in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <androidx.startup.StartupException: void <init>(java.lang.Throwable)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void pause()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from staticinvoke <androidx.tracing.Trace: void endSection()>() in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <androidx.tracing.Trace: void endSection()>
Edge from specialinvoke $r2.<androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>($i0, $r1) in <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)> to <androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>
Edge from $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getAnimation(int)>
Edge from specialinvoke $r5.<androidx.fragment.app.FragmentStore: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentStore: void <init>()>
Edge from $r5 = virtualinvoke $r0.<androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawableCanonical(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)> to <androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableCanonical(int)>
Edge from specialinvoke $r4.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r9) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.graphics.Rect: void <init>(android.graphics.Rect)>
Edge from $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Boolean invoke(java.lang.Object)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is not a FragmentContainerView") in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>($r3) in <androidx.fragment.app.FragmentActivity: void init()> to <androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>
Edge from $r6 = virtualinvoke $r8.<java.lang.ref.WeakReference: java.lang.Object get()>() in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)> to <android.graphics.Color: int alpha(int)>
Edge from staticinvoke <androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)>($r7, $r5) in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)>
Edge from virtualinvoke $r0.<androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r3, $r4) in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r3.<androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)>($r4) in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)>
Edge from specialinvoke $r0.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_CREATE", 0) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r1, $i1, $i2, $i0, $i3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r1, $r13) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
Edge from $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.collection.LruCache: void trimToSize(int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r7 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()>
Edge from $r10 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>($i4) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>
Edge from specialinvoke $r1.<androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>("VISIBLE", 1) in <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>
Edge from $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from specialinvoke $r1.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r5) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
Edge from $i1 = <androidx.collection.ArraySet: int sTwiceBaseCacheSize> in <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from specialinvoke $r5.<androidx.activity.ComponentActivity$1: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$1: void <init>(androidx.activity.ComponentActivity)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void detach()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void detach()>
Edge from $r1 = virtualinvoke $r0.<androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>($i0, null) in <androidx.collection.SparseArrayCompat: java.lang.Object get(int)> to <androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean isStateSaved()>() in <androidx.fragment.app.FragmentManager: void checkStateLoss()> to <androidx.fragment.app.FragmentManager: boolean isStateSaved()>
Edge from $r1 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>() in <androidx.lifecycle.LifecycleRegistry: void popParentState()> to <java.util.ArrayList: int size()>
Edge from $r2 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>($r0, $r1) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>
Edge from $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean isAutoMirrored()>() in <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>
Edge from $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN> in <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $d3 = staticinvoke <java.lang.Math: double sin(double)>(0.4092797040939331) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <java.lang.Math: double hypot(double,double)>
Edge from virtualinvoke $r0.<androidx.collection.LongSparseArray: void put(long,java.lang.Object)>($l1, $r1) in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <androidx.collection.LongSparseArray: void put(long,java.lang.Object)>
Edge from r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT> in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)> to <android.graphics.Shader$TileMode: void <clinit>()>
Edge from staticinvoke <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>("setValue") in <androidx.lifecycle.LiveData: void setValue(java.lang.Object)> to <androidx.lifecycle.LiveData: void <clinit>()>
Edge from specialinvoke r11.<android.util.TypedValue: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <android.util.TypedValue: void <init>()>
Edge from $r7 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.StringBuilder: void <init>()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void resume()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>($r9, 1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>
Edge from specialinvoke $r7.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <android.graphics.Matrix: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentContainer: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from virtualinvoke $r13.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating retained Fragments: Removed ") in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r8.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r7, 1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)>
Edge from $r1 = virtualinvoke $r0.<androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()>() in <androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()> to <androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()>
Edge from specialinvoke $r12.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f4, $f5, $f6, $r5, $r9, $r10) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $l3 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>($i2, $i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>
Edge from $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>() in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: java.lang.Object invoke()>
Edge from $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.util.ArrayList: int size()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0) in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onDestroy()") in <androidx.fragment.app.Fragment: void performDestroy()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<com.example.compatibilitytest.MainActivity4$2: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <com.example.compatibilitytest.MainActivity4$2: void onClick(android.view.View)>
Edge from <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator> = $r0 in <androidx.appcompat.app.WindowDecorActionBar: void <clinit>()> to <androidx.appcompat.app.WindowDecorActionBar: void <clinit>()>
Edge from virtualinvoke $r10.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setCallback(android.graphics.drawable.Drawable$Callback)>($r11) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "strokeMiterLimit", 10, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManagerViewModel$1: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()> to <androidx.fragment.app.FragmentManagerViewModel$1: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void lambda$init$1$androidx-fragment-app-FragmentActivity(android.content.Context)>($r1) in <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1: void onContextAvailable(android.content.Context)> to <androidx.fragment.app.FragmentActivity: void lambda$init$1$androidx-fragment-app-FragmentActivity(android.content.Context)>
Edge from $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r11.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)>
Edge from specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()>
Edge from $r6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r1 = <androidx.core.content.res.CamUtils: float[][] XYZ_TO_CAM16RGB> in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiated fragment ") in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <android.os.Trace: void endSection()>() in <androidx.tracing.TraceApi18Impl: void endSection()> to <android.os.Trace: void endSection()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires \'fromId\' & \'toId\' attributes") in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.Lifecycling: void <clinit>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1) in <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performStop()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.arch.core.internal.FastSafeIterableMap: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: boolean execPendingActions()>() in <androidx.fragment.app.FragmentActivity: void onStart()> to <androidx.fragment.app.FragmentController: boolean execPendingActions()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $i1 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: int growSize(int)>($i0) in <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)> to <androidx.core.content.res.GrowingArrayUtils: int growSize(int)>
Edge from specialinvoke $r0.<androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)>($i1, $r9) in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r1, $r3) in <androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)> to <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManagerState: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r5.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: void clear()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from $z0 = virtualinvoke $r6.<androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void run()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r1, $r2) in <androidx.appcompat.widget.VectorEnabledTintResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> to <androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)>
Edge from $z0 = virtualinvoke $r2.<androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>() in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>
Edge from specialinvoke $r4.<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>("RESUMED", 4) in <androidx.lifecycle.Lifecycle$State: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>
Edge from specialinvoke $r1.<java.util.WeakHashMap: void <init>()>() in <androidx.arch.core.internal.SafeIterableMap: void <init>()> to <java.util.WeakHashMap: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)>($f0) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)>
Edge from $r6 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)>($r3) in <androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)>
Edge from <androidx.appcompat.R$styleable: int[] ActionBar> = $r0 in <androidx.appcompat.R$styleable: void <clinit>()> to <androidx.appcompat.R$styleable: void <clinit>()>
Edge from $z0 = specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()>() in <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r1 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE> in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>() in <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)> to <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void start()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r6, $i0, $r2) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from $r3 = staticinvoke <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)>($r2) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)> to <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)>
Edge from $r3 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3) in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <androidx.navigation.Navigation$findViewNavController$1: java.lang.Object invoke(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()>
Edge from $l1 = staticinvoke <java.lang.Math: long round(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: long round(double)>
Edge from specialinvoke r7.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)>($r4, $z0, $z1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)>
Edge from $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>() in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
Edge from virtualinvoke $r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r8, $r3) in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
Edge from staticinvoke <androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)>($r2, $r0) in <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()> to <androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.fragment.app.Fragment$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r8 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET> in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)> to <androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>
Edge from virtualinvoke $r8.<androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>
Edge from $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3) in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.Float: void <clinit>()>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r0) in <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r3 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>
Edge from z0 = <androidx.appcompat.widget.VectorEnabledTintResources: boolean sCompatVectorFromResourcesEnabled> in <androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()> to <androidx.appcompat.widget.VectorEnabledTintResources: void <clinit>()>
Edge from $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>() in <androidx.core.app.ActivityRecreator: void <clinit>()> to <android.os.Looper: android.os.Looper getMainLooper()>
Edge from staticinvoke <androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)>($r0, $i3, $r2) in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)>
Edge from $r3 = <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy defaultPolicy> in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void translate(float,float)>
Edge from specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2) in <androidx.fragment.app.FragmentStore: java.util.ArrayList getAllSavedState()> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from $f6 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getNc()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getNc()>
Edge from specialinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: void <init>()>() in <androidx.activity.ComponentActivity: void <init>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>()>
Edge from $z2 = virtualinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)>
Edge from specialinvoke $r5.<android.util.SparseArray: void <init>()>() in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <android.util.SparseArray: void <init>()>
Edge from $i1 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>($r5, $i0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>
Edge from specialinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)>($r0, $r1) in <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)>
Edge from $r2 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>() in <androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()> to <androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $z0 = specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()>() in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()>
Edge from virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r5) in <androidx.fragment.app.Fragment: void performStop()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)> to <androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
Edge from virtualinvoke $r7.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r9) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void setFillType(android.graphics.Path$FillType)>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)> to <java.lang.Integer: void <clinit>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r5, 0, $i2) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <android.graphics.Color: int red(int)>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>($r7, $r5) in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom RESUMED: ") in <androidx.fragment.app.FragmentStateManager: void pause()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void onPostCreate(android.os.Bundle)>($r1) in <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)> to <android.app.Activity: void onPostCreate(android.os.Bundle)>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>() in <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()> to <androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>
Edge from specialinvoke $r1.<androidx.collection.SimpleArrayMap: void <init>()>() in <androidx.core.app.ComponentActivity: void <init>()> to <androidx.collection.SimpleArrayMap: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)>($r3) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r1 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
Edge from $r3 = virtualinvoke $r0.<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>($r1) in <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> to <androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>
Edge from interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>
Edge from specialinvoke $r6.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_ANY", 6) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed fragment from active set ") in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment getFragment()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>() in <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)> to <androidx.collection.MapCollections$ArrayIterator: boolean hasNext()>
Edge from <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> = $r0 in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)>($r6, $r15) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)>
Edge from $i0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()>
Edge from specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>() in <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)> to <java.lang.IllegalArgumentException: void <init>()>
Edge from $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from $r6 = <androidx.appcompat.R$styleable: int[] AppCompatTheme> in <androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()> to <androidx.appcompat.R$styleable: void <clinit>()>
Edge from $z1 = virtualinvoke $r2.<androidx.fragment.app.Fragment: boolean isInBackStack()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.Fragment: boolean isInBackStack()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void detach()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isTagEnabled") in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>($r2, $r1) in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>
Edge from $r3 = virtualinvoke $r1.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:menu:actionviewstates") in <androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> to <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
Edge from staticinvoke <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>($r2, $r3, $i2) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": could not find Fragment constructor") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r8 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r4, $r7) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $r7 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r7) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)> to <java.lang.String: java.lang.String concat(java.lang.String)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float yFromInt(int)>($i0) in <androidx.core.content.res.CamUtils: float lStarFromInt(int)> to <androidx.core.content.res.CamUtils: float yFromInt(int)>
Edge from $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, $f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>
Edge from $r1 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <clinit>()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r2) in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)> to <java.lang.String: java.lang.String valueOf(java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>($r5) in <androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()> to <androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1) in <androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r1.<android.graphics.Matrix: void reset()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()> to <android.graphics.Matrix: void reset()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Context cannot be null") in <androidx.startup.StartupException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setColor(int)>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)> to <androidx.appcompat.widget.VectorEnabledTintResources: java.lang.String getResourceName(int)>
Edge from $r2 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>($i1) in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()> to <androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4) in <androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke $r15.<com.google.android.material.snackbar.BaseTransientBottomBar$4: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>($r0) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.snackbar.BaseTransientBottomBar$4: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
Edge from specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r9) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from interfaceinvoke $r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r6) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.lang.Object)>
Edge from $d11 = staticinvoke <java.lang.Math: double ceil(double)>($d11) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double ceil(double)>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>
Edge from $i0 = staticinvoke <java.lang.Math: int round(float)>(40.8F) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <java.lang.Math: int round(float)>
Edge from $r3 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()> to <kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $r5 = <androidx.collection.LongSparseArray: java.lang.Object DELETED> in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <androidx.collection.LongSparseArray: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void initDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void <init>()> to <androidx.appcompat.app.AppCompatActivity: void initDelegate()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("drawable", $r4) in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>
Edge from $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY> in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)>($f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
Edge from specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r3 = new androidx.core.graphics.drawable.WrappedDrawableApi14 in <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <clinit>()>
Edge from specialinvoke $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>
Edge from $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()> to <java.lang.Boolean: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()>() in <androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$0$androidx-fragment-app-FragmentManager()> to <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.73) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (or a descendant).") in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)> to <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r6, $r0, "value", 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)>($r3, $r11) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)>
Edge from $i0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()> to <androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()> to <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
Edge from $r9 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r0, $r1, $r2, $r3, $r6, $i1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from virtualinvoke $r7.<android.graphics.Path: void reset()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void reset()>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>()> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from virtualinvoke $r12.<androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>($i0) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>
Edge from specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0) in <androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>() in <androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()> to <androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>
Edge from $r5 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>($r3, $r0, $r1, $r2, $r4, null, 0, 1.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> to <android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
Edge from $z1 = interfaceinvoke $r5.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)>($r1, $i0, $r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void allocArrays(int)>($i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <androidx.collection.SimpleArrayMap: void allocArrays(int)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>() in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: void cleanupExec()>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setEnterFadeDuration(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)>
Edge from $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LifecycleRegistry: boolean isSynced()> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r6 = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.resources.R$styleable: void <clinit>()>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r10) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.os.Handler: boolean post(java.lang.Runnable)>
Edge from $r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>($f0, $f1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>
Edge from specialinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r0) in <androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()> to <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>
Edge from virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performAttach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: void recycle()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: void recycle()>
Edge from $f3 = virtualinvoke $r7.<android.graphics.PathMeasure: float getLength()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.graphics.PathMeasure: float getLength()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, 0.4166666666666667) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <java.lang.Math: double pow(double,double)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve ResourcesImpl#mDrawableCache field", $r7) in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.Collections: void <clinit>()>
Edge from $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WrappedDrawableApi21", "Failed to retrieve Drawable#isProjected() method", $r4) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.Integer: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: void setDither(boolean)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void popParentState()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry: void popParentState()>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onStart()>() in <androidx.fragment.app.FragmentActivity: void onStart()> to <android.app.Activity: void onStart()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, $f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>
Edge from specialinvoke $r6.<android.graphics.Path: void <init>(android.graphics.Path)>($r7) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <android.graphics.Path: void <init>(android.graphics.Path)>
Edge from $r4 = new androidx.collection.SparseArrayCompat in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void setContentView(int)>($i0) in <androidx.appcompat.app.AppCompatActivity: void setContentView(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($r1, $i0) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>($r3) in <androidx.appcompat.app.AppCompatActivity: void initDelegate()> to <androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])> to <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>
Edge from specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5) in <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r5.<android.util.SparseArray: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <android.util.SparseArray: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>
Edge from $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>() in <com.google.android.material.snackbar.SnackbarManager: void <init>()> to <android.os.Looper: android.os.Looper getMainLooper()>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState getSavedState(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r2 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)>($f1, $f3, $f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "configuration") in <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>() in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <android.os.Looper: android.os.Looper myLooper()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "scaleY", 4, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)>($r0, $i0) in <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)> to <androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)> to <android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void initState()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.Fragment: void initState()>
Edge from $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.Integer: java.lang.String toHexString(int)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context") in <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r5.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)> to <android.os.Bundle: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onResume()>
Edge from $r3 = interfaceinvoke $r2.<androidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()> to <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()>
Edge from specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <java.util.ArrayList: void <init>()>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.GeneratorSequence$iterator$1: void <init>(kotlin.sequences.GeneratorSequence)> to <java.lang.Object: void <init>()>
Edge from $r1 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>($f0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)> to <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r3.<androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean)>($r5, 0) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean)>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()>
Edge from $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: int getBackStackEntryCount()> to <java.util.ArrayList: int size()>
Edge from $r3 = interfaceinvoke $r2.<androidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4) in <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r9.<androidx.activity.ComponentActivity$3: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$3: void <init>(androidx.activity.ComponentActivity)>
Edge from $r4 = staticinvoke <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>($r0, $r2) in <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)> to <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6) in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from $r1 = <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES> in <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <init>()> to <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>($r1) in <androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onDestroy()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onDestroy()>
Edge from $r2 = virtualinvoke $r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>(class "Landroidx/loader/app/LoaderManagerImpl$LoaderViewModel;") in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)> to <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>
Edge from $r1 = <androidx.collection.ContainerHelpers: int[] EMPTY_INTS> in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStart()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStart()>
Edge from $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r7) in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r4 = <java.lang.Boolean: java.lang.Class TYPE> in <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)> to <java.lang.Boolean: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void onStop()>() in <androidx.appcompat.app.AppCompatActivity: void onStop()> to <androidx.appcompat.app.AppCompatDelegateImpl: void onStop()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)> to <java.lang.Object: void <init>()>
Edge from $r6 = new android.graphics.Rect in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.Rect: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>
Edge from $i3 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>
Edge from $z0 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean isStateAtLeast(int)>(1) in <androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: boolean isStateAtLeast(int)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void popParentState()>() in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: void popParentState()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)>($r2) in <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)> to <androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)>
Edge from $z0 = virtualinvoke $r1.<com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)>($r2) in <com.google.android.material.snackbar.SnackbarManager: boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)>
Edge from interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void run()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.collections.EmptyIterator: java.lang.Object next()>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionModeOverlay: ") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.util.ArrayList: int size()>
Edge from specialinvoke $r4.<android.graphics.Path: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <android.graphics.Path: void <init>()>
Edge from $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.AssetManager getAssets()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r2) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $r13 = staticinvoke <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()>
Edge from $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setLayoutDirection", $r0) in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
Edge from $z0 = virtualinvoke $r3.<androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>() in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>
Edge from $r0 = interfaceinvoke $r4.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>() in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()>
Edge from specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1) in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r5 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)>($r4, $r2) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.FragmentFactory: void <clinit>()>
Edge from specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $i1 = virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity4$2: void <init>(com.example.compatibilitytest.MainActivity4)> to <java.lang.Object: void <init>()>
Edge from $i1 = specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()>
Edge from $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $i1 = staticinvoke <java.lang.Math: int round(float)>($f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: int round(float)>
Edge from <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0 in <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $r1 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r0, $i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)> to <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchResume()>() in <androidx.fragment.app.Fragment: void performResume()> to <androidx.fragment.app.FragmentManager: void dispatchResume()>
Edge from $r8 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("==INS==", "service start") in <com.example.compatibilitytest.MyService: void onHandleIntent(android.content.Intent)> to <android.util.Log: int i(java.lang.String,java.lang.String)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity3$1: void <init>(com.example.compatibilitytest.MainActivity3,android.content.Intent)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r3.<com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)>($i0, $r2) in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)>
Edge from specialinvoke $r0.<kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()>() in <kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()> to <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i1 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>
Edge from $f3 = staticinvoke <java.lang.Math: float abs(float)>($f5) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from $i0 = staticinvoke <kotlin.collections.CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)>($r1, $r0) in <kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)> to <kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)>
Edge from $r7 = virtualinvoke r14.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot initialize %s. Cycle detected.", $r8) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Edge from specialinvoke r21.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.util.ArrayList: void <init>()>
Edge from specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r18) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: boolean addAll(java.util.Collection)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $z0 = staticinvoke <androidx.tracing.Trace: boolean isEnabledFallback()>() in <androidx.tracing.Trace: boolean isEnabled()> to <androidx.tracing.Trace: boolean isEnabledFallback()>
Edge from $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, $i1) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)> to <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>
Edge from specialinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>($r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>
Edge from $r9 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>($i0) in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <androidx.appcompat.widget.VectorEnabledTintResources: boolean getBoolean(int)>
Edge from $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r13) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.ViewingConditions: void <init>(float,float,float,float,float,float,float[],float,float,float)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid gradient color tag ") in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)> to <java.util.concurrent.CopyOnWriteArrayList: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>() in <androidx.fragment.app.FragmentController: void noteStateNotSaved()> to <androidx.fragment.app.FragmentManager: void noteStateNotSaved()>
Edge from $r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r3, 0, $r2) in <com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)> to <android.os.Message: void <clinit>()>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r12.<android.graphics.drawable.LayerDrawable: void setId(int,int)>(0, 16908288) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void setId(int,int)>
Edge from $r1 = new android.content.IntentFilter in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void <clinit>()>
Edge from $r2 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>($r0) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: void <clinit>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Boolean invoke(java.lang.Object)> to <java.lang.Boolean: void <clinit>()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from $r6 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)>($i0, $r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from staticinvoke <java.lang.Math: int max(int,int)>($i2, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <java.lang.Math: int max(int,int)>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.") in <androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)> to <android.util.Log: int i(java.lang.String,java.lang.String)>
Edge from $r3 = staticinvoke <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding inflate(android.view.LayoutInflater)>($r2) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding inflate(android.view.LayoutInflater)>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
Edge from virtualinvoke $r11.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>($f2, $f4, $r7, 1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.app.TwilightManager: boolean isStateValid()>() in <androidx.appcompat.app.TwilightManager: boolean isNight()> to <androidx.appcompat.app.TwilightManager: boolean isStateValid()>
Edge from $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)>("gps") in <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()> to <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlX1") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()>() in <androidx.fragment.app.FragmentManager: void moveToState(int,boolean)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "fragment") in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r4, $i4, $i3) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r0 = new androidx.navigation.Navigation in <androidx.navigation.Navigation: void <clinit>()> to <androidx.navigation.Navigation: void <clinit>()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from $d15 = staticinvoke <java.lang.Math: double sqrt(double)>($d16) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double sqrt(double)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i0, $i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchDestroy()>() in <androidx.fragment.app.Fragment: void performDestroy()> to <androidx.fragment.app.FragmentManager: void dispatchDestroy()>
Edge from specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>
Edge from $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("config_showMenuShortcutsWhenKeyboardPresent", "bool", "android") in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <androidx.appcompat.widget.VectorEnabledTintResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()>
Edge from $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d15) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto ATTACHED: ") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void setFocusedView(android.view.View)>($r11) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment: void setFocusedView(android.view.View)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$4: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r7.<android.view.InflateException: void <init>(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <android.view.InflateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)>($r7) in <androidx.fragment.app.FragmentStore: void moveToExpectedState()> to <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()>
Edge from $r3 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>($i0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.ColorStateList getColorStateList(int)>
Edge from $r5 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;") in <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)> to <android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
Edge from $f8 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getAw()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getAw()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class name exists, is public, and has an empty constructor that is public") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mServedView") in <androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from virtualinvoke $r9.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from specialinvoke $r1.<kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)>($r0) in <kotlin.sequences.FilteringSequence: java.util.Iterator iterator()> to <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onStop()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>
Edge from $z1 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
Edge from $r3 = interfaceinvoke $r9.<androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0: android.os.Bundle saveState()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void start()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to call ") in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r7 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)>($i0, $r7) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)>
Edge from $r1 = <androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION> in <androidx.fragment.app.Fragment$AnimationInfo: void <init>()> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r1) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $i4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "tileMode", $i4, 0) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from specialinvoke r34.<androidx.fragment.app.FragmentManager$9: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager$9: void <init>(androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()>
Edge from $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i0, 0, 255) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>
Edge from $z0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>
Edge from r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android:support:fragments", $r2) in <androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$0$androidx-fragment-app-FragmentManager()> to <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
Edge from $i1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r3, $r2, "duration", 1, 300) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from virtualinvoke $r10.<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>
Edge from $r6 = <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE> in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestFocus: Restoring focused view ") in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r7.<com.google.android.material.snackbar.Snackbar$1: void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener)>($r0, $r1) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)> to <com.google.android.material.snackbar.Snackbar$1: void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener)>
Edge from $z0 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>() in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>() in <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()> to <androidx.appcompat.widget.VectorEnabledTintResources: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r8.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($r1, $r7, $r4, 0) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>
Edge from interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r2) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashSet: boolean remove(java.lang.Object)>
Edge from virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r16) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.activity.result.ActivityResult$1: void <init>()>() in <androidx.activity.result.ActivityResult: void <clinit>()> to <androidx.activity.result.ActivityResult$1: void <init>()>
Edge from $r4 = virtualinvoke $r1.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from $f0 = virtualinvoke $r2.<android.graphics.PathMeasure: float getLength()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <android.graphics.PathMeasure: float getLength()>
Edge from virtualinvoke $r0.<androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>($r1, $i0, $z0) in <androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()> to <androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>($r12) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1) in <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStart()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStart()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i0) in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $r18 = virtualinvoke $r9.<androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
Edge from $r0 = new android.os.Message in <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)> to <android.os.Message: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()>
Edge from $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; inflation may have unexpected results.") in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)>($i1, $i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r2 = staticinvoke <androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity)>($r3) in <androidx.activity.ComponentActivity$6: android.os.Bundle saveState()> to <androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)>($r13) in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)>
Edge from specialinvoke $r3.<androidx.collection.SimpleArrayMap: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)> to <androidx.collection.SimpleArrayMap: void <init>()>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r3, $i1, $r2) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartActivityForResult") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performDetach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("KEY_COMPONENT_ACTIVITY_REGISTERED_KEYS", $r2) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
Edge from $r1 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r1, $r6, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r3, "pathData") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r7.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)> to <android.os.Bundle: void <init>()>
Edge from $r3 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>() in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from $r7 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)>($r7, $i1, $i3, $z0, $i2) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r4) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>
Edge from specialinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)>($r0, $r3) in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)>
Edge from $l3 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>($i2, $i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getInt(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getInt(int,int)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error in parsing \"") in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r9 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>()>
Edge from $r0 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()>() in <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from specialinvoke $r6.<androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>($r5, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>
Edge from specialinvoke $r2.<java.util.HashSet: void <init>()>() in <androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)> to <java.util.HashSet: void <init>()>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)>($r2, $r7) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)>
Edge from specialinvoke r14.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r7.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performStart()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>
Edge from $r6 = <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE> in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()>
Edge from $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot initialize %s. Cycle detected.", $r8) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.lang.String: void <clinit>()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r0, $r2, $r1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, $i1) in <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)> to <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$2: void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r4.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($i0, "appcompat_skip_skip") in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>
Edge from $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r1.<androidx.collection.MapCollections$ArrayIterator: void <init>(androidx.collection.MapCollections,int)>($r2, 0) in <androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()> to <androidx.collection.MapCollections$ArrayIterator: void <init>(androidx.collection.MapCollections,int)>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()>
Edge from $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r6) in <androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)> to <java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
Edge from specialinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>
Edge from virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performAttach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.Fragment$5: void <init>(androidx.fragment.app.Fragment)> to <java.lang.Object: void <init>()>
Edge from $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.Integer: void <clinit>()>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0) in <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from $r2 = virtualinvoke $r3.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r5) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r0, $r3, $r2, $r5) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar$1: void <init>(androidx.appcompat.app.ToolbarActionBar)> to <java.lang.Object: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $i4 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)>($i2, $i3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)>
Edge from $r3 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r0) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double cos(double)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($r1) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>
Edge from staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)>($r4) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)>
Edge from $i3 = staticinvoke <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>($r2, $i2, $i0) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z1 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a view") in <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)>($r0) in <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()> to <androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)>
Edge from specialinvoke r14.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)>($r9, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)>
Edge from $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)> to <androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r3.<androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>(1) in <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()> to <androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>
Edge from $f8 = staticinvoke <androidx.core.content.res.CamUtils: float lStarFromInt(int)>($i1) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $i2 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: int growSize(int)>($i0) in <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)> to <androidx.core.content.res.GrowingArrayUtils: int growSize(int)>
Edge from $z1 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)>($r9, $r3, $f0, $r5, $r6) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)>
Edge from $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke r0.<java.lang.IndexOutOfBoundsException: void <init>()>() in <java.lang.ArrayIndexOutOfBoundsException: void <init>()> to <java.lang.IndexOutOfBoundsException: void <init>()>
Edge from $f6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "gradientRadius", $i5, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3) in <androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.fragment.app.Fragment: void performStart()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1) in <androidx.fragment.app.Fragment: void performResume()> to <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>
Edge from specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown object in the tree!") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r7 = virtualinvoke $r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r6) in <androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f0, $f1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void lineTo(float,float)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>
Edge from $r11 = staticinvoke <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)>($r13) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i0, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)> to <android.graphics.Bitmap: void <clinit>()>
Edge from $r0 = <androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY> in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void <init>(android.view.ViewGroup)> to <java.util.ArrayList: void <init>()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isInstance(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.MapCollections$ArrayIterator: void <init>(androidx.collection.MapCollections,int)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r14) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()> to <java.lang.Enum: int ordinal()>
Edge from specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)>($r2, $r3, "autoMirrored", 5, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.view.ViewCompat$Api21Impl$1: void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean endsWith(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r12.<androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>(1) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>
Edge from specialinvoke r16.<android.view.animation.BounceInterpolator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.BounceInterpolator: void <init>()>
Edge from specialinvoke $r0.<androidx.navigation.ui.AppBarConfiguration: void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener)>($r1, $r2, $r3) in <androidx.navigation.ui.AppBarConfiguration: void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener,kotlin.jvm.internal.DefaultConstructorMarker)> to <androidx.navigation.ui.AppBarConfiguration: void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)>($r2) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(java.lang.Object)> to <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void <init>(java.lang.String,androidx.fragment.app.strictmode.Violation)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)> to <java.lang.Object: java.lang.Class getClass()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onPause()>() in <androidx.fragment.app.Fragment: void performPause()> to <androidx.fragment.app.Fragment: void onPause()>
Edge from $d5 = staticinvoke <java.lang.Math: double sin(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from specialinvoke $r0.<androidx.arch.core.internal.SafeIterableMap: void <init>()>() in <androidx.arch.core.internal.FastSafeIterableMap: void <init>()> to <androidx.arch.core.internal.SafeIterableMap: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>($r9, 1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>
Edge from interfaceinvoke $r1.<androidx.core.os.CancellationSignal$OnCancelListener: void onCancel()>() in <androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)> to <androidx.fragment.app.SpecialEffectsController$Operation$1: void onCancel()>
Edge from virtualinvoke $r3.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r2, 1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>("markState") in <androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>
Edge from specialinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>($r0, $r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegate: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)>
Edge from $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>($d0, $d1, $d2) in <androidx.core.content.res.CamUtils: int intFromLStar(float)> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from specialinvoke $r0.<android.view.View$AccessibilityDelegate: void <init>()>() in <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void <init>(androidx.core.view.AccessibilityDelegateCompat)> to <android.view.View$AccessibilityDelegate: void <init>()>
Edge from specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1) in <androidx.appcompat.widget.VectorEnabledTintResources: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from $i0 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r7 = virtualinvoke $r6.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from $r5 = virtualinvoke $r4.<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from <androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES> = $r0 in <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <clinit>()> to <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>($r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()> to <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>
Edge from $r8 = staticinvoke <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void <init>()>() in <androidx.fragment.app.FragmentActivity: void <init>()> to <androidx.activity.ComponentActivity: void <init>()>
Edge from $f1 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFl()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFl()>
Edge from specialinvoke $r3.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>($r0, $r1) in <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>
Edge from staticinvoke <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)>($r2, $i0, $r3) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)>
Edge from $r9 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $z0 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: boolean isTheme(android.content.Context,int[])>($r0, $r1) in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <com.google.android.material.internal.ThemeEnforcement: void <clinit>()>
Edge from $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4) in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <androidx.navigation.Navigation$findViewNavController$2: java.lang.Object invoke(java.lang.Object)>
Edge from $r5 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(109) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>
Edge from specialinvoke $r4.<androidx.core.os.CancellationSignal: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.core.os.CancellationSignal: void <init>()>
Edge from $r1 = virtualinvoke $r0.<android.app.Activity: android.view.View requireViewById(int)>(2131231032) in <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)> to <android.app.Activity: android.view.View requireViewById(int)>
Edge from specialinvoke $r11.<androidx.fragment.app.SpecialEffectsController$2: void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)>($r0, $r8) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$2: void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)>
Edge from specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onGetLayoutInflater() cannot be executed until the Fragment is attached to the FragmentManager.") in <androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>($r5) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $r8 = virtualinvoke $r7.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("classes_to_restore") in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
Edge from $r1 = specialinvoke $r0.<android.content.ContextWrapper: android.content.res.Resources getResources()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
Edge from specialinvoke $r1.<androidx.appcompat.app.AppCompatActivity$1: void <init>(androidx.appcompat.app.AppCompatActivity)>($r0) in <androidx.appcompat.app.AppCompatActivity: void initDelegate()> to <androidx.appcompat.app.AppCompatActivity$1: void <init>(androidx.appcompat.app.AppCompatActivity)>
Edge from $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.SparseArrayCompat: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $r1 = new androidx.collection.SparseArrayCompat in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r2 = virtualinvoke $r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>(class "Landroidx/fragment/app/FragmentManagerViewModel;") in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)> to <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)> to <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>
Edge from virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r1.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>()>
Edge from $r15 = virtualinvoke $r14.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from specialinvoke $r10.<androidx.fragment.app.FragmentManager$2: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentManager$2: void <init>(androidx.fragment.app.FragmentManager)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()>
Edge from virtualinvoke $r9.<androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>($r10) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>
Edge from $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>($r11) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke $r15.<androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>($r0, $r11) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()>
Edge from $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
Edge from $r2 = specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>($r1) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>
Edge from $r1 = virtualinvoke $r0.<androidx.fragment.app.Fragment: android.content.Context requireContext()>() in <androidx.fragment.app.Fragment: android.content.res.Resources getResources()> to <androidx.fragment.app.Fragment: android.content.Context requireContext()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r4 = specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)>
Edge from $f3 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getNc()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getNc()>
Edge from $z0 = virtualinvoke $r0.<androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r4) in <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Object,java.lang.Object)> to <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)>
Edge from $i6 = staticinvoke <android.graphics.Color: int green(int)>($i0) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int green(int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>($r1) in <androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)> to <androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
Edge from $r6 = new androidx.fragment.app.Fragment in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchPause()>() in <androidx.fragment.app.FragmentController: void dispatchPause()> to <androidx.fragment.app.FragmentManager: void dispatchPause()>
Edge from virtualinvoke $r13.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>
Edge from $r2 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)>($r3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(108) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>
Edge from specialinvoke $r1.<androidx.arch.core.internal.SafeIterableMap: void <init>()>() in <androidx.savedstate.SavedStateRegistry: void <init>()> to <androidx.arch.core.internal.SafeIterableMap: void <init>()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Can\'t morph from ") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>($i1) in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()> to <androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>
Edge from $z0 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: boolean isTheme(android.content.Context,int[])>($r0, $r1) in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <com.google.android.material.internal.ThemeEnforcement: boolean isTheme(android.content.Context,int[])>
Edge from $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r11.<androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>($r2, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void <init>()> to <java.lang.Object: void <init>()>
Edge from $i0 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(2147418112) in <androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()> to <java.util.Random: int nextInt(int)>
Edge from $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.Math: float abs(float)>
Edge from specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: void <init>(int,java.lang.Class,int,int)>($i0, $r1, 8, 28) in <androidx.core.view.ViewCompat$2: void <init>(int,java.lang.Class,int,int)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: void <init>(int,java.lang.Class,int,int)>
Edge from specialinvoke $r1.<androidx.collection.MapCollections$KeySet: void <init>(androidx.collection.MapCollections)>($r0) in <androidx.collection.MapCollections: java.util.Set getKeySet()> to <androidx.collection.MapCollections$KeySet: void <init>(androidx.collection.MapCollections)>
Edge from $i2 = staticinvoke <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>($i2) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>
Edge from specialinvoke $r0.<androidx.collection.SparseArrayCompat: void gc()>() in <androidx.collection.SparseArrayCompat: int size()> to <androidx.collection.SparseArrayCompat: void gc()>
Edge from virtualinvoke $r8.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>($r5) in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)> to <java.lang.Object: void <init>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <android.graphics.drawable.Drawable: int getMinimumHeight()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.app.ActivityRecreator$2: void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)> to <java.lang.Object: void <init>()>
Edge from interfaceinvoke $r1.<android.graphics.drawable.Animatable: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "sequence") in <kotlin.sequences.TransformingSequence: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>() in <androidx.fragment.app.Fragment: void performResume()> to <androidx.fragment.app.FragmentManager: void noteStateNotSaved()>
Edge from $r5 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>
Edge from $r9 = virtualinvoke $r8.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
Edge from $r1 = staticinvoke <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)>($r0, $f0, 50.0F, 2.0F, 0) in <androidx.core.content.res.ViewingConditions: void <clinit>()> to <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>
Edge from $r7 = virtualinvoke $r6.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)>
Edge from $r4 = virtualinvoke $r2.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>($r3, $i0, 1) in <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>
Edge from $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d20) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double sqrt(double)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": calling Fragment constructor caused an exception") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r10 = interfaceinvoke $r9.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from virtualinvoke $r2.<androidx.appcompat.widget.TintTypedArray: void recycle()>() in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: void recycle()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()>
Edge from $i0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>() in <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()> to <androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from $i0 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>($r4) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.Lifecycling: void <clinit>()>
Edge from $r11 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r3, "alpha", 4, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r6 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
Edge from virtualinvoke $r4.<android.app.Activity: void recreate()>() in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.app.Activity: void recreate()>
Edge from $i1 = staticinvoke <android.os.Binder: int getCallingUid()>() in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <android.os.Binder: int getCallingUid()>
Edge from virtualinvoke $r7.<androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:menu:actionviewstates", $r2) in <androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> to <android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r3, "viewportWidth", 7, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from specialinvoke $r8.<androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>($r7, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>
Edge from $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(0.29, $d1) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>() in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: void cleanupExec()>
Edge from $r4 = virtualinvoke $r1.<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>($r3) in <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)> to <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>
Edge from $r2 = staticinvoke <kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)>($r1) in <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)> to <kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i2, $i3) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from $r8 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performStop()>() in <androidx.fragment.app.FragmentStateManager: void stop()> to <androidx.fragment.app.Fragment: void performStop()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(7) in <androidx.fragment.app.FragmentManager: void dispatchResume()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wasn\'t found") in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r1) in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>
Edge from $r20 = interfaceinvoke $r19.<androidx.activity.result.ActivityResultRegistryOwner: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i3, $r3, $i4, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from $d16 = staticinvoke <java.lang.Math: double sin(double)>($d5) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double sin(double)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "strokeWidth", 4, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentFactory: void <init>()>() in <androidx.fragment.app.FragmentManager$2: void <init>(androidx.fragment.app.FragmentManager)> to <androidx.fragment.app.FragmentFactory: void <init>()>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)>($r0, $f0) in <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)> to <androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)>
Edge from virtualinvoke $r2.<androidx.appcompat.widget.TintTypedArray: void recycle()>() in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: void recycle()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not attached to a context.") in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r11.<com.example.compatibilitytest.MainActivity2$1: void <init>(com.example.compatibilitytest.MainActivity2)>($r0) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity2$1: void <init>(com.example.compatibilitytest.MainActivity2)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4, $r5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r7, r22) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke r28.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from $r4 = new androidx.collection.LongSparseArray in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)> to <androidx.collection.LongSparseArray: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>($r0, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)> to <androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>
Edge from specialinvoke $r4.<androidx.fragment.app.Fragment$1: void <init>(androidx.fragment.app.Fragment)>($r0) in <androidx.fragment.app.Fragment: void <init>()> to <androidx.fragment.app.Fragment$1: void <init>(androidx.fragment.app.Fragment)>
Edge from $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from specialinvoke $r0.<androidx.collection.LongSparseArray: void gc()>() in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <androidx.collection.LongSparseArray: void gc()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void resume()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void resume()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom CREATE_VIEW: ") in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>($r2, $r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()> to <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()> to <java.util.ArrayList: void <init>()>
Edge from $r3 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3) in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <androidx.navigation.Navigation$findViewNavController$2: java.lang.Object invoke(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r17) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: boolean addAll(java.util.Collection)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>() in <androidx.fragment.app.FragmentManager: void moveToState(int,boolean)> to <androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>($r8) in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.Fragment: void onAttach(android.content.Context)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onResume()") in <androidx.fragment.app.Fragment: void performResume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.collection.LruCache: void trimToSize(int)>($i0) in <androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.LruCache: void trimToSize(int)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The style on this component requires your app theme to be ") in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>($d0, $d1, $d2) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r8.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r9) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)> to <java.lang.Integer: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()>() in <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()> to <androidx.appcompat.widget.VectorEnabledTintResources: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>($i3, $r10) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = virtualinvoke $r5.<androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()>() in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()>
Edge from $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = interfaceinvoke $r9.<androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()>
Edge from $f2 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i0) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <androidx.core.content.res.CamUtils: float linearized(int)>
Edge from interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP> in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)> to <android.graphics.Shader$TileMode: void <clinit>()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()>
Edge from <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> = $r0 in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performStart()>() in <androidx.fragment.app.FragmentStateManager: void start()> to <androidx.fragment.app.Fragment: void performStart()>
Edge from <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0 in <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onResume()>() in <androidx.fragment.app.FragmentActivity: void onResume()> to <android.app.Activity: void onResume()>
Edge from $r1 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "callbacks == null") in <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)> to <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ComponentActivity$4: void <init>(androidx.activity.ComponentActivity)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<com.google.android.material.snackbar.SnackbarManager$1: void <init>(com.google.android.material.snackbar.SnackbarManager)>($r0) in <com.google.android.material.snackbar.SnackbarManager: void <init>()> to <com.google.android.material.snackbar.SnackbarManager$1: void <init>(com.google.android.material.snackbar.SnackbarManager)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchDestroy()>() in <androidx.fragment.app.FragmentController: void dispatchDestroy()> to <androidx.fragment.app.FragmentManager: void dispatchDestroy()>
Edge from $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)> to <java.lang.Long: void <clinit>()>
Edge from r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performDestroyView()>() in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <androidx.fragment.app.Fragment: void performDestroyView()>
Edge from specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>($r3) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <android.view.InflateException: void <init>(java.lang.String)>
Edge from $r5 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(20) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: void <init>(int)>
Edge from $r1 = virtualinvoke $r5.<androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)>($r6) in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)>
Edge from $r1 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void <init>()>() in <com.example.compatibilitytest.MainActivity3: void <init>()> to <androidx.appcompat.app.AppCompatActivity: void <init>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>($r5, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)>($r1) in <androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)> to <androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)>
Edge from virtualinvoke $r5.<androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>($r1) in <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>
Edge from $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()> to <android.graphics.drawable.Drawable: int getMinimumHeight()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r6 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry newest()>() in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()>
Edge from $f6 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getNcb()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getNcb()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" via reflection") in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)>($l2, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)> to <androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.380952380952381) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $r8 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r3, $r4, $r5, $r1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke $r0.<androidx.fragment.app.Fragment: void initLifecycle()>() in <androidx.fragment.app.Fragment: void initState()> to <androidx.fragment.app.Fragment: void initLifecycle()>
Edge from $r9 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>($r3) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>($r1) in <androidx.fragment.app.FragmentViewLifecycleOwner: void performRestore(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()>
Edge from $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from $r1 = virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()> to <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from specialinvoke $r0.<androidx.activity.OnBackPressedCallback: void <init>(boolean)>(0) in <androidx.fragment.app.FragmentManager$1: void <init>(androidx.fragment.app.FragmentManager,boolean)> to <androidx.activity.OnBackPressedCallback: void <init>(boolean)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, $d1) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()>
Edge from $r3 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchCreate()>() in <androidx.fragment.app.FragmentController: void dispatchCreate()> to <androidx.fragment.app.FragmentManager: void dispatchCreate()>
Edge from virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i1, 0) in <androidx.collection.ArraySet: int indexOfNull()> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.Fragment: void restoreViewState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.ColorStateList getColorStateList(int)> to <androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)>
Edge from specialinvoke $r5.<androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>($r6, $r4) in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()>() in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performPause()> to <java.lang.StringBuilder: void <init>()>
Edge from $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.Integer: java.lang.String toHexString(int)>
Edge from $r1 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)>($r1) in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i1, $i2) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r21) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setExitFadeDuration(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)>
Edge from $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mAccessibilityDelegate") in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($r1) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)>
Edge from virtualinvoke $r6.<androidx.lifecycle.ViewModelStore: void clear()>() in <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.ViewModelStore: void clear()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: void <init>()>
Edge from $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r4, $r1) in <androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
Edge from $f2 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getChroma()>() in <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)> to <androidx.core.content.res.CamColor: float getChroma()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void saveViewState()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void saveViewState()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r13.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r15) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
Edge from specialinvoke $r6.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED") in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void addAction(java.lang.String)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from $l1 = staticinvoke <java.lang.Math: long round(double)>($d0) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: long round(double)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i2, $i3) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r14 = virtualinvoke $r13.<android.animation.Animator: android.animation.Animator clone()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <android.animation.AnimatorSet: android.animation.Animator clone()>
Edge from specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.SimpleArrayMap: int hashCode()>
Edge from $r2 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>($r0, $r1) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentFactory: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.Canvas: int save()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Canvas: int save()>
Edge from virtualinvoke $r4.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
Edge from $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()> to <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$2: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from $r2 = virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.fragment.app.FragmentActivity: void init()> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i0 = <androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized> in <androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ImmLeaksCleaner: void <clinit>()>
Edge from specialinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onStop()") in <androidx.fragment.app.Fragment: void performStop()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i5 = staticinvoke <android.graphics.Color: int red(int)>($i0) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int red(int)>
Edge from virtualinvoke $r8.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r11) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $z0 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4) in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)> to <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>
Edge from $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>() in <androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(1) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>
Edge from specialinvoke r17.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r1, $r5, $r0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)>($r2) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(java.lang.Object)> to <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)>
Edge from $r10 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r5, $r3, $r2, $r9) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r2, $i0, $r1) in <androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found") in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()> to <android.text.TextUtils: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Restarter must be created only during owner\'s initialization stage") in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r1 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r1, $r2, $r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i2 = staticinvoke <java.lang.Math: int min(int,int)>(2048, $i2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <java.lang.Math: int min(int,int)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke $r0.<androidx.collection.SparseArrayCompat: void gc()>() in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <androidx.collection.SparseArrayCompat: void gc()>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r7 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE> in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.FragmentStateManager: void createView()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>($i0, $r0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>
Edge from $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>() in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.String: boolean isEmpty()>
Edge from $r5 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>() in <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2131231032) in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>($r2, $i0, $l1) in <androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $z0 = virtualinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean shouldUpdate(java.lang.Object,java.lang.Object)>($r3, $r2) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Object,java.lang.Object)>
Edge from $f5 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getFl()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFl()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $z0 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext> in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $r0 = staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values()>
Edge from specialinvoke $r3.<androidx.core.content.res.ViewingConditions: void <init>(float,float,float,float,float,float,float[],float,float,float)>($f1, $f5, $f8, $f8, $f3, 1.0F, $r2, $f0, $f6, $f4) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <androidx.core.content.res.ViewingConditions: void <init>(float,float,float,float,float,float,float[],float,float,float)>
Edge from $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isVisible()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean isVisible()>
Edge from $z0 = virtualinvoke $r5.<androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)>($r0) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealByteArraySize(int)>($i0) in <androidx.collection.ContainerHelpers: int idealIntArraySize(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)> to <androidx.appcompat.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)>
Edge from $z1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i0, $i3, $i1, $i2, $i4) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.SimpleArrayMap: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r4 = virtualinvoke $r2.<androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawableCanonical(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)> to <androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableCanonical(int)>
Edge from $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()>
Edge from $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($r5) in <androidx.fragment.app.FragmentManager: boolean checkForMenus()> to <androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>
Edge from $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sin(double)>
Edge from $r6 = virtualinvoke $r13.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: java.lang.String getPathName()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()>
Edge from $r1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r0) in <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)>
Edge from $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED> in <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()>() in <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()> to <androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()>
Edge from specialinvoke $r8.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()> to <android.graphics.Matrix: boolean postTranslate(float,float)>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()> to <java.util.HashMap: java.util.Collection values()>
Edge from $r5 = <androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.fragment.app.FragmentStateManager$2: void <clinit>()>
Edge from specialinvoke $r7.<androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>($r6, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<vector> tag requires viewportWidth > 0") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke r16.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r2, r17) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IndexOutOfBoundsException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()>
Edge from $i4 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)>($i3, $i2) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)>
Edge from virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()>() in <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <java.lang.Math: float min(float,float)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void stop()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: void <init>(android.content.res.ColorStateList,android.content.res.Configuration)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)>($r4) in <androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)> to <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)>
Edge from $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from $r4 = <java.lang.Boolean: java.lang.Class TYPE> in <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)> to <java.lang.Boolean: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>() in <androidx.core.content.res.ResourcesCompat: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentManager: void invalidateMenuForFragment(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: void invalidateMenuForFragment(androidx.fragment.app.Fragment)>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1 INSTANCE> in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)> to <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <clinit>()>
Edge from specialinvoke $r0.<androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])>($r1) in <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <init>()> to <androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()>() in <androidx.appcompat.widget.VectorEnabledTintResources: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r4.<androidx.collection.SimpleArrayMap: void <init>()>() in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <androidx.collection.SimpleArrayMap: void <init>()>
Edge from virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2) in <androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>() in <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)> to <androidx.core.app.ActivityRecreator: void <clinit>()>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from <androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId> = $r0 in <androidx.core.view.ViewCompat: void <clinit>()> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i0, $i1) in <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onDestroy()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onDestroy()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve value from ResourcesImpl#mDrawableCache", $r8) in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onStop()>() in <androidx.fragment.app.FragmentActivity: void onStop()> to <android.app.Activity: void onStop()>
Edge from $r10 = staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r4, $r5, $r1, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>
Edge from virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2) in <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()> to <java.lang.ThreadLocal: void set(java.lang.Object)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:view_registry_state", $r6) in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r5.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r2, $r3, $r4) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unsupported complex color tag ") in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ComponentActivity$7: void <init>(androidx.activity.ComponentActivity)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>
Edge from <androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION> = $r0 in <androidx.fragment.app.Fragment: void <clinit>()> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)>($r2) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.lang.Object)> to <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void restoreToCount(int)>
Edge from virtualinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>
Edge from virtualinvoke $r2.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: void clear()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class asSubclass(java.lang.Class)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)>(0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from specialinvoke $r2.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void saveState()> to <android.os.Bundle: void <init>()>
Edge from staticinvoke <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)>($r0, $r6, $r9) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in parsing ") in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r8.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r9) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void setFillType(android.graphics.Path$FillType)>
Edge from $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "propertyXName", 2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from <androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE> = $r0 in <androidx.appcompat.widget.ThemeUtils: void <clinit>()> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from specialinvoke $r1.<androidx.startup.InitializationProvider: void <init>()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <androidx.startup.InitializationProvider: void <init>()>
Edge from $z1 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performStart()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $f6 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFlRoot()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFlRoot()>
Edge from $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) in <androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from virtualinvoke $r1.<com.example.compatibilitytest.MainActivity3$2: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <com.example.compatibilitytest.MainActivity3$2: void onClick(android.view.View)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.LongSparseArray: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.collection.ArraySet: void <init>(int)>(0) in <androidx.collection.ArraySet: void <init>()> to <androidx.collection.ArraySet: void <init>(int)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()> to <androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()>
Edge from $z0 = virtualinvoke $r3.<androidx.collection.SimpleArrayMap: boolean isEmpty()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SimpleArrayMap: boolean isEmpty()>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from staticinvoke <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>($r2, $r3, $i2) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)> to <java.lang.Object: void <init>()>
Edge from $r2 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r6, $r7, $r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: void setRepeatMode(int)>($i3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: void setRepeatMode(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.AppCompatDrawableManager: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.OnBackPressedCallback: void <init>(boolean)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK") in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void addAction(java.lang.String)>
Edge from virtualinvoke $r5.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r2) in <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)> to <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
Edge from $i0 = staticinvoke <androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)>($r1, $i0) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r0.<androidx.collection.SparseArrayCompat: void gc()>() in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <androidx.collection.SparseArrayCompat: void gc()>
Edge from $r2 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>() in <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)> to <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getDefaultColor()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])> to <android.content.res.ColorStateList: int getDefaultColor()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $z0 = virtualinvoke $r4.<androidx.activity.ComponentActivity: boolean isChangingConfigurations()>() in <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <android.app.Activity: boolean isChangingConfigurations()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>() in <androidx.fragment.app.FragmentActivity: void onStart()> to <androidx.fragment.app.FragmentController: void noteStateNotSaved()>
Edge from $r2 = virtualinvoke $r5.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from specialinvoke $r6.<androidx.lifecycle.MutableLiveData: void <init>()>() in <androidx.fragment.app.Fragment: void <init>()> to <androidx.lifecycle.MutableLiveData: void <init>()>
Edge from virtualinvoke $r6.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r8) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>(int)>($i0) in <androidx.collection.ArrayMap: void <init>(int)> to <androidx.collection.SimpleArrayMap: void <init>(int)>
Edge from $i3 = staticinvoke <android.graphics.Color: int alpha(int)>($i0) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int alpha(int)>
Edge from specialinvoke $r0.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.Lifecycling: void <clinit>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toHexString(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r9.<android.animation.ArgbEvaluator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <android.animation.ArgbEvaluator: void <init>()>
Edge from $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void noteStateNotSaved()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentController: void dispatchCreate()>() in <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentController: void dispatchCreate()>
Edge from $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()> to <android.graphics.drawable.Drawable: int getChangingConfigurations()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1) in <androidx.fragment.app.Fragment: void performStart()> to <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>($r1) in <androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.Collections: void <clinit>()>
Edge from $r1 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofObject(float)>($f0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)> to <android.animation.Keyframe: android.animation.Keyframe ofObject(float)>
Edge from $i1 = staticinvoke <android.os.Process: int myUid()>() in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <android.os.Process: int myUid()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ") in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f5 = staticinvoke <java.lang.Math: float signum(float)>($f5) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float signum(float)>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>($r1, $r2) in <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void run()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>
Edge from $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)> to <java.lang.Integer: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state") in <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)> to <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from specialinvoke r14.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>() in <androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()> to <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>(null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>
Edge from $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>() in <androidx.collection.ArraySet: java.util.Iterator iterator()> to <androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($i4) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>
Edge from virtualinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()> to <androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()>
Edge from $i2 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)>($i2, $f0, $f1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.Collections: java.util.List singletonList(java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r6 = virtualinvoke $r6.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/graphics/drawable/Drawable;") in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>
Edge from $r10 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT> in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Shader$TileMode: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateSelf()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from specialinvoke $r0.<androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>(null, null, $i0) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)> to <androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()>
Edge from $r2 = new androidx.activity.result.ActivityResult in <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)> to <androidx.activity.result.ActivityResult: void <clinit>()>
Edge from $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
Edge from <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> = $r0 in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <java.lang.StringBuilder: void <init>()>
Edge from $f1 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFl()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFl()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "activity") in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void setFocusedView(android.view.View)>(null) in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.Fragment: void setFocusedView(android.view.View)>
Edge from specialinvoke $r1.<com.example.compatibilitytest.MainActivity3$2: void <init>(com.example.compatibilitytest.MainActivity3)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <com.example.compatibilitytest.MainActivity3$2: void <init>(com.example.compatibilitytest.MainActivity3)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
Edge from specialinvoke $r2.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>
Edge from specialinvoke r14.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r8) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
Edge from $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from virtualinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)>($r1, r8, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)>
Edge from specialinvoke $r0.<androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()>() in <androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)> to <androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()>
Edge from $l1 = staticinvoke <java.lang.Math: long round(double)>($d4) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: long round(double)>
Edge from interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()>() in <androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback: boolean onPreparePanel(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)>($r1) in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)>
Edge from specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($r7) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setAlpha(int)>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>($r2, $i1, $l0) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>
Edge from $r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>($f0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>
Edge from specialinvoke $r2.<android.util.TypedValue: void <init>()>() in <androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()> to <android.util.TypedValue: void <init>()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onStart()") in <androidx.fragment.app.Fragment: void performStart()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 0.4166666666666667) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <java.lang.Math: double pow(double,double)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.util.ArrayList: void <init>(int)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.activity.ComponentActivity: void <init>()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mH") in <androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from $r18 = virtualinvoke $r17.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android:support:fragments") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>
Edge from $r4 = virtualinvoke $r1.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void pause()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void pause()>
Edge from <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> = $r13 in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void start()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void start()>
Edge from $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentState$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "it") in <androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r3 = staticinvoke <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>($r4, $r1, null) in <androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from $r6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.Integer: void <clinit>()>
Edge from specialinvoke $r1.<androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)>("ADDING", 1) in <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>() in <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $r12 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r2, $r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mDrawableCache") in <androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <androidx.collection.SimpleArrayMap: void <init>()>
Edge from $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "_") in <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)> to <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onCreate()") in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<android.util.TypedValue: void <init>()>() in <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()> to <android.util.TypedValue: void <init>()>
Edge from $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r2, $i1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from staticinvoke <androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)>($r0) in <androidx.tracing.Trace: void beginSection(java.lang.String)> to <androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)>
Edge from $r1 = <kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE> in <kotlin.collections.EmptyMap: java.util.Set getEntries()> to <kotlin.collections.EmptySet: void <clinit>()>
Edge from $i1 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
Edge from virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android:target_req_state", $i0) in <androidx.fragment.app.FragmentStateManager: void saveState()> to <android.os.Bundle: void putInt(java.lang.String,int)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0) in <androidx.fragment.app.FragmentManager: void dispatchActivityCreated()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from $r1 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float[] getRgbD()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float[] getRgbD()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r10 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r2, $r3, $r1) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r1 = virtualinvoke $r0.<kotlin.collections.EmptyIterator: java.lang.Void next()>() in <kotlin.collections.EmptyIterator: java.lang.Object next()> to <kotlin.collections.EmptyIterator: java.lang.Void next()>
Edge from $r7 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>
Edge from <androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed> = 1 in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r0 = new androidx.navigation.Navigation$findViewNavController$1 in <androidx.navigation.Navigation$findViewNavController$1: void <clinit>()> to <androidx.navigation.Navigation$findViewNavController$1: void <clinit>()>
Edge from $r2 = virtualinvoke $r5.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from specialinvoke $r11.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f4, $f5, $r5, $r9) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.SweepGradient: void <init>(float,float,int[],float[])>
Edge from $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()> to <java.lang.Object: java.lang.Class getClass()>
Edge from $z1 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>() in <androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
Edge from $r1 = staticinvoke <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>($r0) in <androidx.fragment.app.Fragment: void initLifecycle()> to <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>
Edge from specialinvoke $r1.<android.view.animation.DecelerateInterpolator: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <androidx.collection.LruCache: void trimToSize(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = specialinvoke $r0.<android.content.ContextWrapper: android.content.res.Resources getResources()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)>(null, null, null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)>
Edge from specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Local and anonymous classes can not be ViewModels") in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int hashCode()>
Edge from specialinvoke $r1.<android.content.IntentFilter: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void <init>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from <java.lang.Long: java.lang.Class TYPE> = null in <java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()>
Edge from $r1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)>($r0, $r2, $r3, $i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $r2 = specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>($r1) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performDestroy()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r2.<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>("CREATED", 2) in <androidx.lifecycle.Lifecycle$State: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>($r1, $r2) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>
Edge from $r3 = <androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavGraph$Companion$findStartDestination$1 INSTANCE> in <androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)> to <androidx.navigation.NavGraph$Companion$findStartDestination$1: void <clinit>()>
Edge from specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r1, $r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <android.content.res.ColorStateList: void <init>(int[][],int[])>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onDestroy()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onDestroy()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>(10) in <androidx.collection.LongSparseArray: void <init>(int)> to <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>
Edge from staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r3, $r5, $f0, $r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
Edge from virtualinvoke $r11.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>($r13) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ComponentActivity$3: void <init>(androidx.activity.ComponentActivity)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r14, 0, $i1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r3, $i2, $i3) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $z1 = virtualinvoke $r3.<androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()>() in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r6) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i0) in <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)> to <android.graphics.Color: int alpha(int)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void clearColorFilter()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])> to <android.graphics.drawable.Drawable: void clearColorFilter()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.savedstate.SavedStateRegistry$1: void <init>(androidx.savedstate.SavedStateRegistry)> to <java.lang.Object: void <init>()>
Edge from $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$1: void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>
Edge from specialinvoke $r1.<android.graphics.Path: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)> to <android.graphics.Path: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void rQuadTo(float,float,float,float)>($f2, $f3, $f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rQuadTo(float,float,float,float)>
Edge from $r5 = <androidx.collection.SparseArrayCompat: java.lang.Object DELETED> in <androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke $r1.<androidx.navigation.ui.AppBarConfiguration: void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener,kotlin.jvm.internal.DefaultConstructorMarker)>($r2, $r3, $r4, null) in <androidx.navigation.ui.AppBarConfiguration$Builder: androidx.navigation.ui.AppBarConfiguration build()> to <androidx.navigation.ui.AppBarConfiguration: void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener,kotlin.jvm.internal.DefaultConstructorMarker)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("propertyValuesHolder") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r1 = <androidx.collection.ArraySet: java.lang.Object[] sBaseCache> in <androidx.collection.ArraySet: void allocArrays(int)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<androidx.fragment.app.FragmentManager: boolean isDestroyed()>() in <androidx.fragment.app.Fragment: void performDetach()> to <androidx.fragment.app.FragmentManager: boolean isDestroyed()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $r2 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>() in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <com.google.android.material.snackbar.Snackbar: int getDuration()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>($r4) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onDestroy()>() in <androidx.fragment.app.Fragment: void performDestroy()> to <androidx.fragment.app.Fragment: void onDestroy()>
Edge from $z0 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext> in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("PENALTY_LOG", 0) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from $r1 = virtualinvoke $r0.<androidx.navigation.Navigation$findViewNavController$2: androidx.navigation.NavController invoke(android.view.View)>($r3) in <androidx.navigation.Navigation$findViewNavController$2: java.lang.Object invoke(java.lang.Object)> to <androidx.navigation.Navigation$findViewNavController$2: androidx.navigation.NavController invoke(android.view.View)>
Edge from specialinvoke $r0.<androidx.collection.ArraySet: void allocArrays(int)>($i3) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <androidx.collection.ArraySet: void allocArrays(int)>
Edge from virtualinvoke $r6.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>() in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void noteStateNotSaved()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r7, r22) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
Edge from specialinvoke $r3.<androidx.savedstate.SavedStateRegistry$1: void <init>(androidx.savedstate.SavedStateRegistry)>($r0) in <androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)> to <androidx.savedstate.SavedStateRegistry$1: void <init>(androidx.savedstate.SavedStateRegistry)>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r1, $r14) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(5) in <androidx.fragment.app.FragmentManager: void dispatchStart()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from specialinvoke $r0.<java.io.Writer: void <init>()>() in <androidx.fragment.app.LogWriter: void <init>(java.lang.String)> to <java.io.Writer: void <init>()>
Edge from specialinvoke $r0.<kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <init>()>() in <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <clinit>()> to <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <init>()>
Edge from $r3 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i3) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)> to <android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>() in <androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()> to <android.os.Looper: android.os.Looper getMainLooper()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>
Edge from $r2 = staticinvoke <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)>($r0, $r1) in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)> to <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)>
Edge from $r1 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>() in <androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()> to <java.lang.Object: java.lang.Object clone()>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>
Edge from $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <java.util.HashSet: java.util.Iterator iterator()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CSLCompat", "Failed to inflate ColorStateList.", $r4) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>
Edge from $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.fragment.app.Fragment: void performStop()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r7.<androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)>($r6) in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)>
Edge from virtualinvoke $r0.<androidx.startup.InitializationProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(null, "", $r1) in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <androidx.startup.InitializationProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
Edge from $r3 = staticinvoke <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>($r2) in <androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>
Edge from $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 0, $r3) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
Edge from virtualinvoke $r8.<com.example.compatibilitytest.MainActivity4$1: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <com.example.compatibilitytest.MainActivity4$1: void onClick(android.view.View)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>
Edge from specialinvoke $r10.<androidx.appcompat.widget.ToolbarWidgetWrapper$1: void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper)>($r0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper$1: void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper)>
Edge from specialinvoke $r3.<androidx.core.app.ActivityCompat$2: void <init>(android.app.Activity)>($r0) in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <androidx.core.app.ActivityCompat$2: void <init>(android.app.Activity)>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r3.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r1, $r2) in <androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> to <androidx.appcompat.widget.VectorEnabledTintResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r5.<androidx.lifecycle.ViewModelStore: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)> to <androidx.lifecycle.ViewModelStore: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)>($i0, $r1, null) in <androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)>
Edge from specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("<gradient> tag requires \'gradientRadius\' attribute with radial type") in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity: android.view.View findViewById(int)>(2131230928) in <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.Integer: java.lang.String toHexString(int)>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()> to <java.util.HashMap: java.util.Collection values()>
Edge from $r0 = new kotlin.sequences.EmptySequence in <kotlin.sequences.EmptySequence: void <clinit>()> to <kotlin.sequences.EmptySequence: void <clinit>()>
Edge from specialinvoke $r4.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>($r3, $r0, $r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: void <init>(android.view.ViewGroup)>($r1) in <androidx.fragment.app.DefaultSpecialEffectsController: void <init>(android.view.ViewGroup)> to <androidx.fragment.app.SpecialEffectsController: void <init>(android.view.ViewGroup)>
Edge from $r2 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0) in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)>
Edge from virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegate: void onCreate(android.os.Bundle)>($r5) in <androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)> to <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r14) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 5) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $d20 = staticinvoke <java.lang.Math: double sin(double)>($d3) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double sin(double)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <android.graphics.drawable.Drawable: int getMinimumWidth()>
Edge from $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r10 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)>($r7) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $i1 = specialinvoke $r0.<androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()>() in <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()> to <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()>
Edge from $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>() in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.Class: java.lang.String getName()>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r14) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.os.Handler: boolean post(java.lang.Runnable)>
Edge from $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.Math: float abs(float)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r4, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r9 = virtualinvoke $r7.<androidx.navigation.ui.AppBarConfiguration$Builder: androidx.navigation.ui.AppBarConfiguration build()>() in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.navigation.ui.AppBarConfiguration$Builder: androidx.navigation.ui.AppBarConfiguration build()>
Edge from $f3 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getZ()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getZ()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.TwilightManager$TwilightState: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r1 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>() in <com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from specialinvoke $r1.<androidx.arch.core.executor.DefaultTaskExecutor: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor: void <init>()> to <androidx.arch.core.executor.DefaultTaskExecutor: void <init>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create fragment ") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = virtualinvoke $r3.<android.app.Activity: android.view.Window getWindow()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()> to <android.app.Activity: android.view.Window getWindow()>
Edge from $f0 = staticinvoke <java.lang.Math: float signum(float)>($f0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float signum(float)>
Edge from specialinvoke $r0.<androidx.arch.core.executor.TaskExecutor: void <init>()>() in <androidx.arch.core.executor.DefaultTaskExecutor: void <init>()> to <androidx.arch.core.executor.TaskExecutor: void <init>()>
Edge from specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r0, 2) in <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)> to <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR> in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)> to <android.graphics.Shader$TileMode: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from $r1 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>() in <androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>
Edge from specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $d0 = staticinvoke <java.lang.Math: double log(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double log(double)>
Edge from $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", $r4, $r5) in <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)> to <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $z0 = staticinvoke <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>($r4, $r1) in <androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)> to <androidx.core.view.ViewConfigurationCompat: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>
Edge from specialinvoke $r6.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <android.os.Bundle: void <init>()>
Edge from $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)> to <java.lang.Long: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1: void <init>(androidx.fragment.app.FragmentActivity)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("KEY_COMPONENT_ACTIVITY_PENDING_RESULT", $r7) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
Edge from specialinvoke $r0.<android.content.ContextWrapper: void <init>(android.content.Context)>($r1) in <androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)> to <android.content.ContextWrapper: void <init>(android.content.Context)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.FragmentActivity)> to <java.lang.Object: void <init>()>
Edge from $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <java.lang.Boolean: void <clinit>()>
Edge from $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onViewStateRestored()") in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET") in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void addAction(java.lang.String)>
Edge from $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r10) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.util.ArrayList: boolean isEmpty()>
Edge from $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r8 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from virtualinvoke $r7.<com.example.compatibilitytest.MainActivity$1: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <com.example.compatibilitytest.MainActivity$1: void onClick(android.view.View)>
Edge from $r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()>
Edge from $r10 = <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING> in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from <com.google.android.material.internal.ThemeEnforcement: int[] APPCOMPAT_CHECK_ATTRS> = $r0 in <com.google.android.material.internal.ThemeEnforcement: void <clinit>()> to <com.google.android.material.internal.ThemeEnforcement: void <clinit>()>
Edge from $r5 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i1, $r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>($r0, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>
Edge from $r12 = virtualinvoke $r10.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)>(null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)>
Edge from specialinvoke $r0.<android.os.Handler: void <init>(android.os.Looper)>($r1) in <androidx.core.app.ActivityRecreator: void <clinit>()> to <android.os.Handler: void <init>(android.os.Looper)>
Edge from virtualinvoke $r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r0 = newarray (androidx.fragment.app.strictmode.FragmentStrictMode$Flag)[8] in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void translate(float,float)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r4.<kotlin.sequences.GeneratorSequence: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)>($r6, $r0) in <kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)> to <kotlin.sequences.GeneratorSequence: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)>
Edge from $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from virtualinvoke $r12.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>
Edge from specialinvoke $r10.<androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)>($r9) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path cannot loop back on itself, x :") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke r14.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>($i0, $r0) in <androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)> to <java.lang.Object: void <init>()>
Edge from $f8 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getNbb()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getNbb()>
Edge from virtualinvoke $r0.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r2) in <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
Edge from $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <java.lang.Math: double hypot(double,double)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $r1 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $r1 = <com.google.android.material.snackbar.Snackbar: int[] SNACKBAR_CONTENT_STYLE_ATTRS> in <com.google.android.material.snackbar.Snackbar: boolean hasSnackbarContentStyleAttrs(android.content.Context)> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "it") in <androidx.navigation.Navigation$findViewNavController$1: android.view.View invoke(android.view.View)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
Edge from $r8 = virtualinvoke $r7.<android.content.Context: java.lang.ClassLoader getClassLoader()>() in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)> to <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
Edge from $r4 = <androidx.core.content.ContextCompat: java.lang.Object sLock> in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.core.content.ContextCompat: void <clinit>()>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", android:windowIsFloating: ") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r4.<androidx.appcompat.app.ActionBar: void onDestroy()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.ToolbarActionBar: void onDestroy()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>
Edge from $r2 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> to <androidx.core.app.ActivityRecreator$1: void run()>
Edge from virtualinvoke $r2.<java.util.ArrayList: void clear()>() in <androidx.appcompat.view.menu.MenuBuilder: void clear()> to <java.util.ArrayList: void clear()>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r4) in <androidx.fragment.app.Fragment: void performDestroy()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r13 = new android.graphics.Rect in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <android.graphics.Rect: void <clinit>()>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity3$2: void <init>(com.example.compatibilitytest.MainActivity3)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "container") in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>()>() in <androidx.fragment.app.FragmentFactory: void <clinit>()> to <androidx.collection.SimpleArrayMap: void <init>()>
Edge from specialinvoke r33.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: void <init>()>
Edge from $r1 = staticinvoke <androidx.navigation.Navigation: androidx.navigation.NavController access$getViewNavController(androidx.navigation.Navigation,android.view.View)>($r3, $r2) in <androidx.navigation.Navigation$findViewNavController$2: androidx.navigation.NavController invoke(android.view.View)> to <androidx.navigation.Navigation: androidx.navigation.NavController access$getViewNavController(androidx.navigation.Navigation,android.view.View)>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)>($r2, $r7) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)>($r3, $r2) in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)>
Edge from $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from $r10 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
Edge from $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set entrySet()>() in <androidx.collection.LruCache: void trimToSize(int)> to <java.util.LinkedHashMap: java.util.Set entrySet()>
Edge from virtualinvoke $r1.<androidx.fragment.app.SpecialEffectsController$Operation: void cancel()>() in <androidx.fragment.app.SpecialEffectsController$Operation$1: void onCancel()> to <androidx.fragment.app.SpecialEffectsController$Operation: void cancel()>
Edge from staticinvoke <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MyService: void me1()>() in <com.example.compatibilitytest.MyService: void onHandleIntent(android.content.Intent)> to <com.example.compatibilitytest.MyService: void me1()>
Edge from specialinvoke $r0.<android.os.Message: void <init>()>() in <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)> to <android.os.Message: void <init>()>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r3, $i1, $r2) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0) in <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void onStart()>() in <androidx.appcompat.app.AppCompatActivity: void onStart()> to <androidx.fragment.app.FragmentActivity: void onStart()>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>()>() in <androidx.collection.ArrayMap: void <init>()> to <androidx.collection.SimpleArrayMap: void <init>()>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: float parseFloat(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $i1 = staticinvoke <android.graphics.Color: int alpha(int)>($i0) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)> to <android.graphics.Color: int alpha(int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r10.<androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)>($r0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve attribute at index ") in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.collection.ArraySet: void allocArrays(int)>(0) in <androidx.collection.ArraySet: void <init>(int)> to <androidx.collection.ArraySet: void allocArrays(int)>
Edge from specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2) in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void ensureInflatedView()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)>
Edge from $r15 = virtualinvoke $r14.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from $i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)> to <java.util.ArrayList: int indexOf(java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.ArraySet: int indexOf(java.lang.Object,int)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from $r16 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r9 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r2, $r1, $r4, $r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release()>
Edge from $r13 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, -1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r5) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from specialinvoke $r10.<androidx.core.app.ActivityRecreator$1: void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)>($r0, $r7) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$1: void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(1) in <androidx.fragment.app.FragmentManager: void dispatchCreate()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewConfigurationCompat: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r2 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()> to <java.util.HashMap: java.util.Collection values()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onResumeFragments()>() in <androidx.fragment.app.FragmentActivity: void onPostResume()> to <androidx.fragment.app.FragmentActivity: void onResumeFragments()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("computeExpectedState() of ") in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z1 = staticinvoke <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($r6, $r7) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>
Edge from $r1 = virtualinvoke $r0.<androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination)>($r1) in <androidx.navigation.NavGraph$Companion$findStartDestination$1: java.lang.Object invoke(java.lang.Object)> to <androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination)>
Edge from $i1 = specialinvoke $r0.<androidx.collection.ArraySet: int indexOf(java.lang.Object,int)>($r1, $i0) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <androidx.collection.ArraySet: int indexOf(java.lang.Object,int)>
Edge from specialinvoke $r6.<android.animation.ValueAnimator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: void <init>()>
Edge from specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1) in <com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<java.util.HashSet: void <init>()>() in <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()> to <java.util.HashSet: void <init>()>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>() in <androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)> to <androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <kotlin.collections.EmptyIterator: java.lang.Object next()>
Edge from virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>($r2) in <com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)> to <android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)>($r2, $i0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)>
Edge from r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already attached") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, "This is button4", 0) in <com.example.compatibilitytest.MainActivity4$1: void onClick(android.view.View)> to <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
Edge from specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameter type. second arg must be an event") in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Sequence is empty.") in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <java.util.NoSuchElementException: void <init>(java.lang.String)>
Edge from specialinvoke $r9.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r11) in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x") in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double toRadians(double)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionBarOverlay: ") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestPermissions") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r3, 0, $i0) in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from <androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR> = $r0 in <androidx.activity.result.ActivityResult: void <clinit>()> to <androidx.activity.result.ActivityResult: void <clinit>()>
Edge from specialinvoke $r1.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Window feature must be requested before adding content") in <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()> to <android.util.AndroidRuntimeException: void <init>(java.lang.String)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealByteArraySize(int)>($i0) in <androidx.collection.ContainerHelpers: int idealLongArraySize(int)> to <androidx.collection.ContainerHelpers: int idealByteArraySize(int)>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)>($i0, $r1) in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.Object parseResult(int,android.content.Intent)> to <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r1.<androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()> to <androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>($r2, $r1) in <androidx.fragment.app.FragmentActivity: void markFragmentsCreated()> to <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>
Edge from virtualinvoke $r2.<android.os.Bundle: void putAll(android.os.Bundle)>($r3) in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <android.os.Bundle: void putAll(android.os.Bundle)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r9, 0, $i1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.System: void <clinit>()>
Edge from $r9 = interfaceinvoke $r14.<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r12, $r13, $r15) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void resume()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be called on the main thread") in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0) in <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)> to <java.util.ArrayList: void <init>(int)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void dispatchActivityCreated()>() in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void dispatchActivityCreated()>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)>($r1) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r9, $r14) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
Edge from $r5 = newarray (androidx.fragment.app.BackStackRecordState)[$i0] in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.BackStackRecordState: void <clinit>()>
Edge from $f5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "centerY", $i0, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.EmptySequence: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6) in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration") in <androidx.core.view.ViewConfigurationCompat: void <clinit>()> to <android.util.Log: int i(java.lang.String,java.lang.String)>
Edge from $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>() in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()> to <java.lang.Object: java.lang.Object clone()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from $f8 = staticinvoke <androidx.core.content.res.CamUtils: float lStarFromInt(int)>($i1) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamUtils: float lStarFromInt(int)>
Edge from $r5 = <androidx.core.R$styleable: int[] GradientColor> in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.R$styleable: void <clinit>()>
Edge from specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r5.<androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)>($r4) in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)>
Edge from $r10 = virtualinvoke $r2.<androidx.activity.result.ActivityResult: android.content.Intent getData()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.activity.result.ActivityResult: android.content.Intent getData()>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r3.<androidx.activity.result.ActivityResultLauncher: void unregister()>() in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.activity.result.ActivityResultRegistry$3: void unregister()>
Edge from virtualinvoke $r3.<android.util.SparseArray: void removeAt(int)>($i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)> to <android.util.SparseArray: void removeAt(int)>
Edge from specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <java.util.ArrayList: void <init>(int)>
Edge from $r6 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>() in <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from specialinvoke $r5.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>($r6, $r7, $r2) in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
Edge from $i3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r3, $r2, "valueType", 7, 4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from interfaceinvoke $r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r6) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$8: void onActivityResult(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void popParentState()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry: void popParentState()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>($r2, $i0, $l1) in <androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>
Edge from $r11 = virtualinvoke $r10.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>
Edge from virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2) in <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()> to <java.lang.Boolean: void <clinit>()>
Edge from $r0 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.widget.AppCompatDrawableManager: void preload()> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <java.lang.Object: java.lang.Class getClass()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>($r6, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r22.<androidx.fragment.app.LogWriter: void <init>(java.lang.String)>("FragmentManager") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.LogWriter: void <init>(java.lang.String)>
Edge from $i2 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>($r2, $i1) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not be null") in <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = virtualinvoke $r1.<androidx.core.content.res.CamColor: int viewedInSrgb()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: int viewedInSrgb()>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>() in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void noteStateNotSaved()>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from $r1 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float[] getRgbD()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float[] getRgbD()>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void allocArrays(int)>($i0) in <androidx.collection.SimpleArrayMap: void <init>(int)> to <androidx.collection.SimpleArrayMap: void allocArrays(int)>
Edge from $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)> to <android.util.SparseArray: java.lang.Object valueAt(int)>
Edge from specialinvoke $r0.<androidx.appcompat.app.ActionBar: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <androidx.appcompat.app.ActionBar: void <init>()>
Edge from $r1 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $r5 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.Matrix: void <clinit>()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)>
Edge from $r8 = staticinvoke <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>($r0) in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performAttach()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.Fragment: void performAttach()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean isAutoMirrored()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()> to <androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>
Edge from specialinvoke $r6.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r3, $r4, $r5) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>
Edge from $r14 = virtualinvoke $r13.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $z0 = virtualinvoke $r1.<android.os.Bundle: boolean isEmpty()>() in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: boolean isEmpty()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "interpolator") in <androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r1 = virtualinvoke $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()>
Edge from $r15 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r10) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>
Edge from $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)> to <android.content.BroadcastReceiver: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>
Edge from specialinvoke $r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)>($r1) in <androidx.core.view.AccessibilityDelegateCompat: void <init>()> to <androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>() in <androidx.fragment.app.Fragment: void performStart()> to <androidx.fragment.app.FragmentManager: void noteStateNotSaved()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Second arg is supported only for ON_ANY value") in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.startup.InitializationProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(null, null) in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <androidx.startup.InitializationProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r8, $r3, "propertyName", 3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from $r4 = virtualinvoke $r2.<androidx.navigation.ui.AppBarConfiguration: androidx.customview.widget.Openable getOpenableLayout()>() in <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)> to <androidx.navigation.ui.AppBarConfiguration: androidx.customview.widget.Openable getOpenableLayout()>
Edge from staticinvoke <androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i1, $i0) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.Fragment$1: void <init>(androidx.fragment.app.Fragment)> to <java.lang.Object: void <init>()>
Edge from $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)> to <androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>
Edge from specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.lang.StringBuilder: void <init>()>
Edge from <androidx.collection.ArraySet: int[] INT> = $r0 in <androidx.collection.ArraySet: void <clinit>()> to <androidx.collection.ArraySet: void <clinit>()>
Edge from $r3 = new androidx.appcompat.app.WindowDecorActionBar in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.WindowDecorActionBar: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)>
Edge from specialinvoke $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Points are too far apart ") in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r2) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0) in <androidx.core.os.BuildCompat: boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from staticinvoke <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)>($r0, $r1, "Theme.AppCompat") in <com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)> to <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)>
Edge from $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <android.graphics.Color: int blue(int)>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentStore: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentStore: void <init>()> to <java.util.HashMap: void <init>()>
Edge from $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.navigation.NavGraph$Companion: void <init>()>() in <androidx.navigation.NavGraph$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)> to <androidx.navigation.NavGraph$Companion: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r3 = interfaceinvoke $r9.<androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.activity.ComponentActivity$6: android.os.Bundle saveState()>
Edge from $f8 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getC()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getC()>
Edge from specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No suitable parent found from the given view. Please provide a valid view.") in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float[] getRgbD()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float[] getRgbD()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$Operation$1: void <init>(androidx.fragment.app.SpecialEffectsController$Operation)> to <java.lang.Object: void <init>()>
Edge from $r4 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r0) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from $r4 = staticinvoke <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)>($r2) in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)>
Edge from $r0 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mMainThread") in <androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from specialinvoke $r5.<com.google.android.material.snackbar.BaseTransientBottomBar$2: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>($r0) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.snackbar.BaseTransientBottomBar$2: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
Edge from $r0 = <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions DEFAULT> in <androidx.core.content.res.CamColor: int toColor(float,float,float)> to <androidx.core.content.res.ViewingConditions: void <clinit>()>
Edge from virtualinvoke $r6.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
Edge from specialinvoke $r0.<androidx.activity.result.ActivityResultLauncher: void <init>()>() in <androidx.activity.result.ActivityResultRegistry$3: void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract)> to <androidx.activity.result.ActivityResultLauncher: void <init>()>
Edge from staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)>($r6, $r7, $r8, $f0, $r0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r1, $r10, $r2, $i0, $i1, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>
Edge from $l2 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>($i0, $i1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.view.ContextThemeWrapper: android.content.Context getBaseContext()>() in <androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>
Edge from $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i0 = virtualinvoke $r3.<android.graphics.Rect: int width()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Rect: int width()>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = staticinvoke <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>($r6) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()>() in <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()> to <androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()>
Edge from $r0 = <androidx.core.content.res.CamUtils: float[] WHITE_POINT_D65> in <androidx.core.content.res.ViewingConditions: void <clinit>()> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $d3 = staticinvoke <java.lang.Math: double sin(double)>(-0.10471975803375244) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from $z0 = staticinvoke <androidx.tracing.Trace: boolean isEnabled()>() in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.tracing.Trace: boolean isEnabled()>
Edge from $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>($r1, $r2, $r5, $r4) in <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal)> to <androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>
Edge from $z1 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean canReverse()>
Edge from $r7 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>($r5, $r6) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>($r0, $r1) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()>
Edge from $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.Float valueOf(float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from staticinvoke <androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()>() in <androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()>
Edge from $z0 = staticinvoke <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)>($r0, $i0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5) in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r1 = virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()> to <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from specialinvoke $r1.<androidx.arch.core.executor.ArchTaskExecutor$2: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()> to <androidx.arch.core.executor.ArchTaskExecutor$2: void <init>()>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)> to <android.graphics.drawable.Drawable: void setDither(boolean)>
Edge from specialinvoke r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentContainer: void <init>()>() in <androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)> to <androidx.fragment.app.FragmentContainer: void <init>()>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: void invalidateSelf()>() in <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE> in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TRACE_TAG_APP") in <androidx.tracing.Trace: boolean isEnabledFallback()> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
Edge from $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)> to <java.lang.Long: java.lang.Long valueOf(long)>
Edge from $z0 = virtualinvoke $r1.<androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($r0) in <androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()> to <androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r6, $r7, $r5) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4, $r5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager has not been attached to a host.") in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $z0 = virtualinvoke $r5.<android.animation.AnimatorSet: boolean isStarted()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.animation.AnimatorSet: boolean isStarted()>
Edge from $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)> to <androidx.appcompat.widget.VectorEnabledTintResources: boolean getBoolean(int)>
Edge from $r8 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from $r10 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r10, $r11, $r12) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewUtils", "Could not find method makeOptionalFitsSystemWindows. Oh well...") in <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>($r3) in <androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> to <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>
Edge from $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("computeFitSystemWindows", $r2) in <androidx.appcompat.widget.ViewUtils: void <clinit>()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
Edge from specialinvoke $r5.<androidx.fragment.app.Fragment: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.Fragment: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void pause()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)>
Edge from $r8 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r3) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>
Edge from staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <android.text.TextUtils: void <clinit>()>
Edge from <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> = $r0 in <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()> to <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()>
Edge from specialinvoke $r1.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()> to <android.graphics.Matrix: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void <init>(android.app.Activity)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: void <init>()>
Edge from $f7 = staticinvoke <java.lang.Math: float abs(float)>($f7) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <java.lang.Math: float abs(float)>
Edge from $r4 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>($r2, $i1, $l0) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)>
Edge from specialinvoke $r11.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r8) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declared target fragment ") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = staticinvoke <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)>(null, $r2, $r0, $i0) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: void <clinit>()>
Edge from $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.Collections: void <clinit>()>
Edge from $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()>() in <androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()>() in <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()> to <android.app.Activity: android.view.Window getWindow()>
Edge from $r15 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)>($r14, $i1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void <init>()> to <java.lang.Object: void <init>()>
Edge from <androidx.collection.LongSparseArray: java.lang.Object DELETED> = $r0 in <androidx.collection.LongSparseArray: void <clinit>()> to <androidx.collection.LongSparseArray: void <clinit>()>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)>($i0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)>($r3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)>
Edge from virtualinvoke $r6.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r3, $r4, $r0, $r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r1) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>()> to <java.lang.Object: void <init>()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegate: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null) in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)> to <kotlin.sequences.FilteringSequence: java.util.Iterator iterator()>
Edge from $z0 = staticinvoke <androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)>($r0) in <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)> to <androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)>
Edge from specialinvoke $r6.<androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: void <init>(android.content.res.ColorStateList,android.content.res.Configuration)>($r0, $r8) in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: void <init>(android.content.res.ColorStateList,android.content.res.Configuration)>
Edge from specialinvoke r24.<androidx.appcompat.app.AppCompatDelegateImpl$5: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl$5: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestFocus: Saved focused view ") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r6) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
Edge from r26 = new androidx.fragment.app.FragmentManagerViewModel in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentStore: void dispatchStateChange(int)>($i0) in <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)> to <androidx.fragment.app.FragmentStore: void dispatchStateChange(int)>
Edge from specialinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>(1) in <androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)> to <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>
Edge from $f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlY1", 1, 0.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $i0 = virtualinvoke $r6.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r7.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.ToolbarActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
Edge from $r5 = specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>($r1) in <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)> to <androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve getLayoutDirection() method", $r4) in <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>
Edge from specialinvoke $r1.<androidx.activity.contextaware.ContextAwareHelper: void <init>()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.contextaware.ContextAwareHelper: void <init>()>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityResultRegistry", $r7) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.BackStackRecordState$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)>($r0) in <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)>
Edge from $r7 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <android.graphics.Matrix: void <clinit>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)>($r2, $r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)> to <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>($f0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>
Edge from $r9 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path$FillType: void <clinit>()>
Edge from specialinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()>
Edge from $i1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "startColor", $i1, 0) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from virtualinvoke $r4.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($i0, $r1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no event down from ") in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("LifecycleOwner of this LifecycleRegistry is alreadygarbage collected. It is too late to change lifecycle state.") in <androidx.lifecycle.LifecycleRegistry: void sync()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>") in <androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r1.<androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)>($r6) in <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)> to <androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)>
Edge from $r3 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() in <androidx.fragment.app.Fragment: void initState()> to <java.util.UUID: java.util.UUID randomUUID()>
Edge from virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r14) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r4, $r5, $r1, $r2) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke r11.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.AccelerateDecelerateInterpolator: void <init>()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>($i0) in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>
Edge from $r2 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from interfaceinvoke $r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r6) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$7: void onActivityResult(java.lang.Object)>
Edge from $r8 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $r8 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>
Edge from $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)> to <android.graphics.Paint$Join: void <clinit>()>
Edge from specialinvoke $r4.<android.content.res.Configuration: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)> to <android.content.res.Configuration: void <init>()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r4, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>
Edge from specialinvoke $r8.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>(10) in <androidx.collection.SparseArrayCompat: void <init>(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from <androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod> = $r0 in <androidx.core.view.ViewConfigurationCompat: void <clinit>()> to <androidx.core.view.ViewConfigurationCompat: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)> to <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)>
Edge from virtualinvoke $r1.<java.util.HashMap: void clear()>() in <androidx.fragment.app.FragmentStore: void resetActiveFragments()> to <java.util.HashMap: void clear()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()>
Edge from $r5 = virtualinvoke r14.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from $r5 = virtualinvoke $r3.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r6) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from $r3 = staticinvoke <com.google.android.material.snackbar.Snackbar: android.view.ViewGroup findSuitableParent(android.view.View)>($r2) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: void <clinit>()>
Edge from $r5 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostResume()>
Edge from $r11 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <android.view.KeyCharacterMap: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>
Edge from virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setBounds(android.graphics.Rect)>($r9) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "fragment") in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $i0 = virtualinvoke $r7.<androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegateImpl: int getLocalNightMode()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>
Edge from $r2 = <androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap> in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentFactory: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.LiveData: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("animated-selector", $r3) in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppCompat does not support the current theme features: { windowActionBar: ") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)>($r0, $r1) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)>
Edge from <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat> = $r0 in <androidx.appcompat.resources.R$styleable: void <clinit>()> to <androidx.appcompat.resources.R$styleable: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from $r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)> to <android.graphics.Paint$Cap: void <clinit>()>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()>() in <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()>
Edge from $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r5.<kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: void <init>(java.lang.Object)>($r1) in <kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)> to <kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: void <init>(java.lang.Object)>
Edge from $r4 = interfaceinvoke $r3.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)> to <androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $r8 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>() in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.util.HashMap: java.util.Set entrySet()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>($r1, $r0, $i0, $i1, $r2) in <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)> to <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>
Edge from $r5 = virtualinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void onStart()>() in <androidx.appcompat.app.AppCompatActivity: void onStart()> to <androidx.appcompat.app.AppCompatDelegateImpl: void onStart()>
Edge from $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4) in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <androidx.navigation.Navigation$findViewNavController$1: java.lang.Object invoke(java.lang.Object)>
Edge from specialinvoke $r0.<android.app.IntentService: void <init>(java.lang.String)>("MyService") in <com.example.compatibilitytest.MyService: void <init>()> to <android.app.IntentService: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onDestroyView()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.fragment.app.Fragment: void onDestroyView()>
Edge from $r1 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type T of kotlin.sequences.GeneratorSequence") in <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from $r6 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r5, $r3, $r4, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <clinit>()>
Edge from <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX> = $r0 in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.ArraySet: int indexOf(java.lang.Object,int)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performDetach()> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicInteger: int get()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.concurrent.atomic.AtomicInteger: int get()>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.Collections: void <clinit>()>
Edge from $r8 = virtualinvoke $r6.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r5) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean isEmpty()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])> to <java.lang.Object: void <init>()>
Edge from $d0 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double max(double,double)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
Edge from $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r0) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from staticinvoke <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>($r2, $r3, $i1) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()>
Edge from $r2 = staticinvoke <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>($r1) in <androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "nextFunction") in <kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r2.<androidx.appcompat.widget.TintTypedArray: void recycle()>() in <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: void recycle()>
Edge from $r6 = virtualinvoke $r13.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: java.lang.String getPathName()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r7.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performResume()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() in <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void <init>(android.app.Activity)> to <java.lang.Object: int hashCode()>
Edge from specialinvoke $r0.<androidx.fragment.app.strictmode.Violation: void <init>(androidx.fragment.app.Fragment,java.lang.String)>($r1, $r3) in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.Violation: void <init>(androidx.fragment.app.Fragment,java.lang.String)>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onPause()>() in <androidx.fragment.app.FragmentActivity: void onPause()> to <android.app.Activity: void onPause()>
Edge from $i0 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8) in <androidx.lifecycle.LifecycleRegistry: void sync()> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from <com.google.android.material.snackbar.Snackbar: int[] SNACKBAR_BUTTON_STYLE_ATTR> = $r0 in <com.google.android.material.snackbar.Snackbar: void <clinit>()> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from specialinvoke $r1.<java.util.Random: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.Random: void <init>()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl$2: void run()> to <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)>
Edge from $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r2.<android.animation.Animator: void setTarget(java.lang.Object)>($r3) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <android.animation.Animator: void setTarget(java.lang.Object)>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)> to <kotlin.sequences.EmptySequence: java.util.Iterator iterator()>
Edge from $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)> to <java.util.ArrayList: int size()>
Edge from specialinvoke $r4.<androidx.collection.SparseArrayCompat: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SparseArrayCompat: void <init>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r10.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r15) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void dispatchStart()>() in <androidx.fragment.app.FragmentActivity: void onStart()> to <androidx.fragment.app.FragmentController: void dispatchStart()>
Edge from $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
Edge from virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4) in <androidx.collection.LruCache: void trimToSize(int)> to <java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.fragment.app.FragmentActivity: void onStart()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.Canvas: void restore()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Canvas: void restore()>
Edge from virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5) in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.savedstate.SavedStateRegistry: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r3.<androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)>($r1, $r4) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)> to <androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)>
Edge from specialinvoke $r3.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_PAUSE", 3) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from $r14 = virtualinvoke $r13.<android.animation.Animator: android.animation.Animator clone()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <android.animation.ValueAnimator: android.animation.Animator clone()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.fragment.app.Fragment: void performStop()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)> to <kotlin.sequences.FilteringSequence: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)>
Edge from $r7 = <androidx.core.R$styleable: int[] GradientColorItem> in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.R$styleable: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void start()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>("Startup") in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <androidx.tracing.Trace: void beginSection(java.lang.String)>
Edge from $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.lang.Boolean: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r6 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>($r6) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>
Edge from $r1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r0, $i0) in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from virtualinvoke $r3.<androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)>($l0, $d0, $d1) in <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)> to <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>") in <kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: java.util.ArrayList getAllSavedState()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentStore: java.util.ArrayList getAllSavedState()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r1, $r13) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
Edge from specialinvoke $r2.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()>
Edge from $r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>() in <androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>") in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r0 = <androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue> in <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)>($r1, 1) in <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)>
Edge from $i0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("config_showMenuShortcutsWhenKeyboardPresent", "bool", "android") in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.collections.EmptyIterator: boolean hasNext()>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentManager: void dispatchOnAttachFragment(androidx.fragment.app.Fragment)>($r0) in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.FragmentManager: void dispatchOnAttachFragment(androidx.fragment.app.Fragment)>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>
Edge from $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>
Edge from $r3 = new android.content.Intent in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <android.content.Intent: void <clinit>()>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)> to <java.lang.Object: int hashCode()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable") in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r8.<androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void addCompletionListener(java.lang.Runnable)>($r11) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation: void addCompletionListener(java.lang.Runnable)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>
Edge from specialinvoke $r0.<android.app.Fragment: void <init>()>() in <androidx.lifecycle.ReportFragment: void <init>()> to <android.app.Fragment: void <init>()>
Edge from specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<android.content.IntentFilter: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void <init>()>
Edge from specialinvoke $r13.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)>($r2, $r1) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void onPostResume()>() in <androidx.appcompat.app.AppCompatActivity: void onPostResume()> to <androidx.fragment.app.FragmentActivity: void onPostResume()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.SnackbarManager: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r1 = new androidx.loader.app.LoaderManagerImpl in <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)> to <androidx.loader.app.LoaderManagerImpl: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0) in <androidx.fragment.app.FragmentManager: void noteStateNotSaved()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from $f4 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getC()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getC()>
Edge from $r6 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)> to <androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()>
Edge from $i0 = virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from $r7 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r6) in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>($r3) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>
Edge from $r2 = virtualinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object frameworkGet(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)> to <androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)>
Edge from <java.lang.Boolean: java.lang.Boolean FALSE> = null in <java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $r2 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>()> to <android.graphics.Paint$Join: void <clinit>()>
Edge from $r1 = virtualinvoke $r0.<androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>($r2) in <androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)> to <androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i2, $i1) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>
Edge from specialinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void <init>()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void <init>()>
Edge from $r2 = <kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence INSTANCE> in <kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)> to <kotlin.sequences.EmptySequence: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostResume()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performResume()>() in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.Fragment: void performResume()>
Edge from $z0 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1) in <androidx.fragment.app.FragmentController: boolean execPendingActions()> to <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>
Edge from $r10 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)>($r7) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>") in <kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void start()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r9, $r4, $r2, $i0, $i1, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>
Edge from specialinvoke $r7.<android.util.TypedValue: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <android.util.TypedValue: void <init>()>
Edge from specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: void <init>()> to <androidx.activity.result.contract.ActivityResultContract: void <init>()>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>() in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>
Edge from specialinvoke $r3.<androidx.collection.ArrayMap: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <androidx.collection.ArrayMap: void <init>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve value from Resources#mDrawableCache", $r6) in <androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mFactory2") in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void create()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: void <init>()>
Edge from interfaceinvoke $r1.<java.lang.Runnable: void run()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void run()>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>($r5, $r6, $r1) in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()>
Edge from $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: int hashCode()> to <java.lang.Object: int hashCode()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.NavDestination$Companion: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED> in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r6 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r4) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rMoveTo(float,float)>($f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rMoveTo(float,float)>
Edge from $z0 = staticinvoke <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)>($r0, $i0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $r1 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()> to <android.graphics.Matrix: void <clinit>()>
Edge from specialinvoke $r8.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, $f1, $f2, $f3, $r5, $r9, $r10) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.fragment.app.FragmentActivity: void onPause()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r1.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("KEY_COMPONENT_ACTIVITY_LAUNCHED_KEYS", $r2) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.SnackbarManager$1: void <init>(com.google.android.material.snackbar.SnackbarManager)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean setLevel(int)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void <init>()> to <android.graphics.drawable.Drawable: void <init>()>
Edge from $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3) in <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)> to <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>
Edge from specialinvoke $r0.<androidx.navigation.NavDestination$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null) in <androidx.navigation.NavDestination: void <clinit>()> to <androidx.navigation.NavDestination$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
Edge from $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r4) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>()>
Edge from $f7 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getAw()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getAw()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>
Edge from interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3) in <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r8 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>() in <androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()> to <androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>
Edge from $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>(null) in <androidx.appcompat.graphics.drawable.StateListDrawable: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>
Edge from $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>() in <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
Edge from staticinvoke <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameter specified as non-null is null: method ") in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
Edge from $f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r0, "value", 0, 0.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from specialinvoke $r11.<android.graphics.PathMeasure: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.PathMeasure: void <init>()>
Edge from virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void clear()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <androidx.appcompat.view.menu.MenuBuilder: void clear()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r11) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>
Edge from $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: int size()>
Edge from $r2 = staticinvoke <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>($r1, "Replace with your own action", 0) in <com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from $r1 = <androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock> in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>($r9) in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: boolean containsKey(java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mNextServedView") in <androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from $r1 = new androidx.core.view.AccessibilityDelegateCompat in <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)> to <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()>
Edge from virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6) in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)> to <androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from $r13 = new androidx.fragment.app.FragmentManagerState in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManagerState: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r8) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($r1) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>
Edge from $z1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>() in <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()> to <java.lang.ThreadLocal: java.lang.Object get()>
Edge from specialinvoke $r0.<androidx.lifecycle.ReportFragment: void <init>()>() in <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)> to <androidx.lifecycle.ReportFragment: void <init>()>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)>
Edge from specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Error: void <init>()> to <java.lang.Throwable: void <init>()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $i1 = staticinvoke <android.os.Process: int myUid()>() in <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)> to <android.os.Process: int myUid()>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()>
Edge from $d2 = staticinvoke <java.lang.Math: double asin(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double asin(double)>
Edge from $r7 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)>
Edge from $r2 = new android.os.Bundle in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <android.os.Bundle: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r4 = virtualinvoke $r1.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>() in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>
Edge from $r16 = virtualinvoke $r15.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>($r14) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>
Edge from $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>() in <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()> to <java.util.ArrayList: boolean isEmpty()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>($r1, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>
Edge from $r0 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)> to <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>($i2, 1) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.view.ContextThemeWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>($r2) in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
Edge from specialinvoke $r29.<java.util.ArrayDeque: void <init>(java.util.Collection)>($r4) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayDeque: void <init>(java.util.Collection)>
Edge from staticinvoke <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>($r0, $r1) in <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>
Edge from $r7 = <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_LOG> in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()>
Edge from $r0 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE> in <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from specialinvoke $r0.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>($r3, $r1) in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)> to <androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>($r1) in <androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)> to <androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2) in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: void <init>()>
Edge from $r5 = <androidx.navigation.Navigation$findViewNavController$2: androidx.navigation.Navigation$findViewNavController$2 INSTANCE> in <androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)> to <androidx.navigation.Navigation$findViewNavController$2: void <clinit>()>
Edge from $r5 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $r6 = interfaceinvoke $r5.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setValue") in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()>
Edge from virtualinvoke $r0.<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>($f2, $f3, $f6, $f7, $f8, $f9) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentStrictMode", $r1, $r2) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from <androidx.core.content.ContextCompat: java.lang.Object sLock> = $r0 in <androidx.core.content.ContextCompat: void <clinit>()> to <androidx.core.content.ContextCompat: void <clinit>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0) in <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)> to <java.lang.System: void <clinit>()>
Edge from $r11 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.util.ArrayList: void <init>(int)>
Edge from $r1 = staticinvoke <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)>($r0, $f0, 50.0F, 2.0F, 0) in <androidx.core.content.res.ViewingConditions: void <clinit>()> to <androidx.core.content.res.ViewingConditions: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2) in <androidx.fragment.app.strictmode.Violation: void <init>(androidx.fragment.app.Fragment,java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.") in <androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)> to <android.util.Log: int i(java.lang.String,java.lang.String)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from $r5 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>(0) in <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)> to <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r8 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.42) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have an DrawerToggleDelegate set") in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>($r1) in <androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)> to <androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>
Edge from specialinvoke $r1.<androidx.lifecycle.LiveData$1: void <init>(androidx.lifecycle.LiveData)>($r0) in <androidx.lifecycle.LiveData: void <init>()> to <androidx.lifecycle.LiveData$1: void <init>(androidx.lifecycle.LiveData)>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($r1, $i0, null) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>
Edge from $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean isAutoMirrored()>() in <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()>
Edge from staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
Edge from $f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlY2", 3, 0.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r1 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)>($i0, $r0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)>($r5) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r13) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5) in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.ViewUtils: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r5 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>() in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
Edge from $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: int size()>
Edge from $r1 = <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)> to <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.MapCollections$KeySet: void <init>(androidx.collection.MapCollections)> to <java.lang.Object: void <init>()>
Edge from $r5 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>() in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>($r2, $r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>
Edge from $r14 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r3 = new android.os.Bundle in <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()> to <android.os.Bundle: void <clinit>()>
Edge from $z0 = staticinvoke <android.util.StateSet: boolean stateSetMatches(int[],int[])>($r3, $r2) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])> to <android.util.StateSet: void <clinit>()>
Edge from $r8 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE> in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from $i0 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.resources.R$styleable: void <clinit>()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
Edge from $r1 = <androidx.startup.AppInitializer: androidx.startup.AppInitializer sInstance> in <androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)> to <androidx.startup.AppInitializer: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>() in <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.util.DisplayMetrics getDisplayMetrics()>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r10 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>($i4) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>
Edge from $r2 = specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r1 = virtualinvoke $r0.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)>($r2) in <androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()> to <androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setBounds(android.graphics.Rect)>($r4) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
Edge from $r9 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5) in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <java.lang.Class: java.lang.Class forName(java.lang.String)>
Edge from $i1 = virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: int size()>() in <androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)> to <androidx.appcompat.view.menu.MenuBuilder: int size()>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r3 = <androidx.core.content.res.CamUtils: float[][] CAM16RGB_TO_XYZ> in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $d0 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double max(double,double)>
Edge from $z0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl: void <init>()>() in <androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)> to <androidx.fragment.app.FragmentManagerImpl: void <init>()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0) in <androidx.fragment.app.FragmentManager: void dispatchResume()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.42) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()>
Edge from specialinvoke $r1.<java.util.WeakHashMap: void <init>(int)>(0) in <androidx.appcompat.widget.ResourceManagerInternal: void <init>()> to <java.util.WeakHashMap: void <init>(int)>
Edge from $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>($r4) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int size()>() in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int size()>
Edge from <androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue> = $r0 in <androidx.core.content.res.ResourcesCompat: void <clinit>()> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $r7 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>($r5, $r6) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void onPostResume()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r2, $z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)> to <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)> to <kotlin.sequences.TransformingSequence: java.util.Iterator iterator()>
Edge from $r5 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r14 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)>($r1) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)> to <androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentStore: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentStore: void <init>()>
Edge from specialinvoke $r1.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>()>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: int size()>() in <androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> to <androidx.appcompat.view.menu.MenuBuilder: int size()>
Edge from $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1) in <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)> to <java.lang.Math: int min(int,int)>
Edge from virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2) in <androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()> to <java.lang.ThreadLocal: void set(java.lang.Object)>
Edge from $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.Collections: java.util.Map emptyMap()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performPause()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.380952380952381) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegate: void onPostCreate(android.os.Bundle)>($r1) in <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>($f6, 0.0F) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rLineTo(float,float)>
Edge from $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegate: void setSupportActionBar(androidx.appcompat.widget.Toolbar)>($r1) in <androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)>
Edge from $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from $r10 = virtualinvoke $r2.<androidx.activity.result.ActivityResult: android.content.Intent getData()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.activity.result.ActivityResult: android.content.Intent getData()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)>($r0, $i0, $f0) in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto CREATED: ") in <androidx.fragment.app.FragmentStateManager: void create()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = virtualinvoke $r0.<java.lang.String: int length()>() in <androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)> to <java.lang.String: int length()>
Edge from $r1 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)> to <android.graphics.Paint$Join: void <clinit>()>
Edge from $r3 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>(null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>
Edge from $r3 = staticinvoke <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.ColorStateList getColorStateList(int)>
Edge from $r0 = new androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact in <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)> to <android.graphics.drawable.Drawable: void setDither(boolean)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)>($f0, $f1) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)>
Edge from $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
Edge from $r4 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity3: android.view.View findViewById(int)>(2131230929) in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from specialinvoke r14.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)> to <androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)>
Edge from $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.42) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double pow(double,double)>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i0, $i1) in <androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>
Edge from $f10 = virtualinvoke $r1.<androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)>($r2) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r5.<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>($r17) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()>
Edge from $z0 = staticinvoke <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>($r6) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "sequence") in <kotlin.sequences.FilteringSequence: void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r2 = interfaceinvoke $r3.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>() in <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)> to <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
Edge from $r0 = <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions DEFAULT> in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)> to <androidx.core.content.res.ViewingConditions: void <clinit>()>
Edge from specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ON_ANY must not been send by anybody") in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r1 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, $i1) in <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)> to <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>() in <androidx.appcompat.app.TwilightManager: boolean isNight()> to <java.util.Calendar: java.util.Calendar getInstance()>
Edge from $r1 = staticinvoke <androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>($r1) in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>
Edge from $r8 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(null) in <androidx.fragment.app.FragmentStore: void burpActive()> to <java.util.Collections: void <clinit>()>
Edge from virtualinvoke $r1.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from $i1 = staticinvoke <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>($r1, "android.permission.ACCESS_FINE_LOCATION") in <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()> to <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>
Edge from $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void cancel()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0) in <androidx.fragment.app.FragmentManager: void dispatchAttach()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r17) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfNull()>() in <androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOfNull()>
Edge from $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)>($r5) in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from specialinvoke $r2.<androidx.core.graphics.PathParser$PathDataNode: void <init>(char,float[])>($c0, $r1) in <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])> to <androidx.core.graphics.PathParser$PathDataNode: void <init>(char,float[])>
Edge from specialinvoke $r0.<androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)>($r3, $r12) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We have not been given a Window") in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: int hashCode()> to <java.lang.String: int hashCode()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r9) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Bitmap: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStop()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStop()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)>
Edge from $z0 = virtualinvoke $r2.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)> to <androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void <init>(int,java.lang.Class,int,int)> to <java.lang.Object: void <init>()>
Edge from $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.util.Xml: void <clinit>()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i1, -1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>
Edge from $f5 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFlRoot()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFlRoot()>
Edge from <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue> = $r0 in <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from specialinvoke $r1.<androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.FragmentActivity)>($r0) in <androidx.fragment.app.FragmentActivity: void init()> to <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.FragmentActivity)>
Edge from $r1 = <androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache> in <androidx.collection.ArraySet: void allocArrays(int)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r1, $i0, $i1, $i2, $i3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)> to <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>
Edge from virtualinvoke $r3.<com.example.compatibilitytest.MainActivity: void startActivity(android.content.Intent)>($r2) in <com.example.compatibilitytest.MainActivity$2: void onClick(android.view.View)> to <android.app.Activity: void startActivity(android.content.Intent)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onPause()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onPause()>
Edge from virtualinvoke $r12.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>
Edge from virtualinvoke $r10.<androidx.appcompat.app.ActionBar: void onDestroy()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.ToolbarActionBar: void onDestroy()>
Edge from $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>
Edge from $r2 = staticinvoke <kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence)>($r1) in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence)>
Edge from $r3 = specialinvoke $r2.<androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)>($r1) in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)>
Edge from $r5 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Calling getViewModelStore() before a Fragment reaches onCreate() when using setMaxLifecycle(INITIALIZED) is not supported") in <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()> to <java.lang.Boolean: void <clinit>()>
Edge from $r4 = new android.graphics.Rect in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.graphics.Rect: void <clinit>()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $i2 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>($r6) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>
Edge from specialinvoke $r3.<androidx.core.graphics.PathParser$PathDataNode: void <init>(androidx.core.graphics.PathParser$PathDataNode)>($r0) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])> to <androidx.core.graphics.PathParser$PathDataNode: void <init>(androidx.core.graphics.PathParser$PathDataNode)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStop()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStop()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setAutoMirrored(boolean)>($z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)>
Edge from $z0 = virtualinvoke $r1.<android.content.res.ColorStateList: boolean isStateful()>() in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <android.content.res.ColorStateList: boolean isStateful()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: void <init>()> to <java.lang.Object: void <init>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "valueTo") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from interfaceinvoke $r1.<java.lang.Runnable: void run()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void run()>
Edge from specialinvoke $r4.<androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)>($r5) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void <init>(androidx.arch.core.internal.SafeIterableMap)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>($r18) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("The observer class has some methods that use newer APIs which are not available in the current OS version. Lifecycles cannot access even other methods so you should make sure that your observer classes only access framework classes that are available in your min API level OR use lifecycle:compiler annotation processor.", $r4) in <androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have default constructor in order to be automatically recreated") in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar$2: void <init>(androidx.appcompat.app.ToolbarActionBar)> to <java.lang.Object: void <init>()>
Edge from $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY> = $r0 in <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r0, $r2) in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)> to <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1) in <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <init>()> to <kotlin.jvm.internal.Lambda: void <init>(int)>
Edge from $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: int hashCode()> to <androidx.collection.SimpleArrayMap: int hashCode()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from $r8 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)>($r7) in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)>
Edge from $r3 = virtualinvoke $r2.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r1, $r14) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
Edge from $z0 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 4) in <androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)> to <androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>
Edge from $i2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "centerColor", $i2, 0) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlX2") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r1) in <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])> to <androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
Edge from specialinvoke $r0.<com.example.compatibilitytest.MainActivity2: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <com.example.compatibilitytest.MainActivity2: void <init>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)>($f0, $f1, $f2, $f3) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>($i0, $i1) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>
Edge from $r8 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r3) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>
Edge from $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>($r0, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void <init>()>
Edge from $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME> in <androidx.fragment.app.Fragment: void performResume()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()>
Edge from $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from virtualinvoke $r8.<androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void addCompletionListener(java.lang.Runnable)>($r10) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation: void addCompletionListener(java.lang.Runnable)>
Edge from $r2 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>
Edge from $r7 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r5) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>
Edge from $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)> to <java.lang.Integer: void <clinit>()>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$0$androidx-fragment-app-FragmentManager()>() in <androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0: android.os.Bundle saveState()> to <androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$0$androidx-fragment-app-FragmentManager()>
Edge from $r3 = staticinvoke <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>($r4, $r1, null) in <androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
Edge from specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$2: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegateImpl$2: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from $r0 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock> in <androidx.appcompat.app.AppCompatDelegate: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from specialinvoke $r8.<com.example.compatibilitytest.MainActivity4$1: void <init>(com.example.compatibilitytest.MainActivity4)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <com.example.compatibilitytest.MainActivity4$1: void <init>(com.example.compatibilitytest.MainActivity4)>
Edge from $r0 = staticinvoke <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>($r0) in <androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)> to <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
Edge from $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: boolean isEmpty()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()>() in <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)> to <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
Edge from virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: void recycle()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <androidx.appcompat.widget.TintTypedArray: void recycle()>
Edge from $i0 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from <androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR> = $r0 in <androidx.fragment.app.FragmentManagerState: void <clinit>()> to <androidx.fragment.app.FragmentManagerState: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from $r9 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r1, $r8) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
Edge from $i0 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(2147418112) in <androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()> to <java.util.Random: int nextInt(int)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r9, 0, $i1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown visibility ") in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r9 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r8) in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void activityCreated()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void activityCreated()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>
Edge from $i0 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.Fragment: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1) in <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: void <init>(int)>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewUtils", "Could not find method computeFitSystemWindows. Oh well.") in <androidx.appcompat.widget.ViewUtils: void <clinit>()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>() in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)> to <java.lang.Object: void <init>()>
Edge from $r9 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect getBounds()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", $r7) in <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)> to <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>() in <kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()> to <java.util.NoSuchElementException: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)>($r7, $r0, $r0, $i0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(null) in <androidx.fragment.app.FragmentStore: void burpActive()> to <java.util.Collections: java.util.Set singleton(java.lang.Object)>
Edge from specialinvoke $r2.<android.os.Bundle: void <init>()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <android.os.Bundle: void <init>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.fragment.app.FragmentActivity: void onDestroy()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r5.<androidx.collection.SparseArrayCompat: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)> to <androidx.collection.SparseArrayCompat: void <init>()>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()> to <kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()> to <android.graphics.Matrix: boolean postTranslate(float,float)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.collections.EmptyIterator: java.lang.Object next()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from specialinvoke $r12.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discarding retained Fragment ") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>($i0, $r0, $r3) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($r1, $i0, $z0, $r3) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>
Edge from $r16 = virtualinvoke $r15.<android.content.Context: java.lang.ClassLoader getClassLoader()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
Edge from $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>
Edge from $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r2.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()> to <android.graphics.Matrix: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ViewModel: void <init>()> to <java.lang.Object: void <init>()>
Edge from interfaceinvoke $r4.<androidx.appcompat.widget.DecorToolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>($r1, $r2) in <androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>
Edge from virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from staticinvoke <androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i1, $i0) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <java.lang.Object: void <init>()>
Edge from specialinvoke r26.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>(0) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r2, $r3, "tintMode", 6, -1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $r5 = new androidx.collection.SparseArrayCompat in <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from $z0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean isVisible()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean isVisible()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r5 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>() in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <java.util.HashMap: java.util.Set keySet()>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.ArraySet: int indexOf(java.lang.Object,int)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from $r1 = new android.content.res.Configuration in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <android.content.res.Configuration: void <clinit>()>
Edge from $r6 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void onHiddenChanged(boolean)>($z0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.Fragment: void onHiddenChanged(boolean)>
Edge from $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r6, $r1, $r2, $r4) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegate: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegate: void <init>()>
Edge from $i0 = staticinvoke <java.lang.Math: int round(float)>($f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <java.lang.Math: int round(float)>
Edge from $r3 = virtualinvoke $r2.<com.example.compatibilitytest.MainActivity4: android.content.Context getApplicationContext()>() in <com.example.compatibilitytest.MainActivity4$1: void onClick(android.view.View)> to <android.content.ContextWrapper: android.content.Context getApplicationContext()>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from virtualinvoke $r10.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
Edge from <androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed> = 1 in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r0 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>() in <androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)> to <android.content.ContextWrapper: java.lang.String getOpPackageName()>
Edge from $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double sqrt(double)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "fragment") in <androidx.fragment.app.strictmode.Violation: void <init>(androidx.fragment.app.Fragment,java.lang.String)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $i4 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i4, 0, 255) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from $r1 = virtualinvoke $r0.<androidx.activity.ComponentActivity: android.app.Application getApplication()>() in <androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()> to <android.app.Activity: android.app.Application getApplication()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)>
Edge from $i0 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>(null, null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>
Edge from specialinvoke $r2.<androidx.core.view.ViewCompat$$ExternalSyntheticLambda0: void <init>()>() in <androidx.core.view.ViewCompat: void <clinit>()> to <androidx.core.view.ViewCompat$$ExternalSyntheticLambda0: void <init>()>
Edge from $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)>
Edge from $i1 = staticinvoke <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>($r1, "android.permission.ACCESS_COARSE_LOCATION") in <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()> to <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.Fragment: android.content.Context getContext()> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from specialinvoke $r7.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performPause()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<androidx.collection.MapCollections: int colGetSize()>() in <androidx.collection.MapCollections$ArrayIterator: void <init>(androidx.collection.MapCollections,int)> to <androidx.collection.ArraySet$1: int colGetSize()>
Edge from <androidx.startup.AppInitializer: java.lang.Object sLock> = $r0 in <androidx.startup.AppInitializer: void <clinit>()> to <androidx.startup.AppInitializer: void <clinit>()>
Edge from $r14 = virtualinvoke $r13.<android.animation.Animator: android.animation.Animator clone()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <android.animation.ObjectAnimator: android.animation.Animator clone()>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll") in <androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r10 = virtualinvoke $r9.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer getContainer()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer getContainer()>
Edge from $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isAdded()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <androidx.fragment.app.Fragment: boolean isAdded()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void pause()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.LruCache: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $r6 = virtualinvoke $r2.<androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)>($i1, $r10) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.Object parseResult(int,android.content.Intent)>
Edge from $i0 = specialinvoke $r0.<androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()>() in <androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)> to <androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.Class: java.lang.Class forName(java.lang.String)>
Edge from $i6 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i6, $i3, $i7, $i2, $i4) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>($r1) in <androidx.core.app.ActivityCompat$2: void run()> to <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>
Edge from $i2 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r2, $i2) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>
Edge from $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)>($r2, $i0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $r3 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)>($r0, $r2) in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r3, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.view.ViewCompat$$ExternalSyntheticLambda0: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>
Edge from $r18 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY> in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.lang.Float: java.lang.Float valueOf(float)>
Edge from $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>() in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.String: boolean isEmpty()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$Policy LAX> in <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r6.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown value set for night mode. Please use one of the MODE_NIGHT values from AppCompatDelegate.") in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r16.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($r2, $r11, $r5, 0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>
Edge from $r6 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, $r3, $r4, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void <init>()>() in <androidx.appcompat.graphics.drawable.StateListDrawable: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void <init>()>
Edge from $r2 = staticinvoke <androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()>() in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void dispatchCreate()>() in <androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void dispatchCreate()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0) in <androidx.arch.core.executor.DefaultTaskExecutor$1: void <init>(androidx.arch.core.executor.DefaultTaskExecutor)> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
Edge from specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r7.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void rLineTo(float,float)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)>($r2, null, $r3) in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)>
Edge from $i3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "endColor", $i3, 0) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>($r5, $r3) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>
Edge from $r2 = <android.os.Build: java.lang.String FINGERPRINT> in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <android.os.Build: void <clinit>()>
Edge from $r0 = <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue> in <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from virtualinvoke $r15.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r13) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.LongSparseArray: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from $i0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: int getBackStackEntryCount()>() in <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()> to <androidx.fragment.app.FragmentManager: int getBackStackEntryCount()>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r5) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from specialinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r0) in <androidx.fragment.app.Fragment: void initLifecycle()> to <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>
Edge from $r8 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r4, $r2, $r1, $r6) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke $r1.<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>($r2, $r3) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>
Edge from $r1 = virtualinvoke $r0.<androidx.fragment.app.Fragment: android.content.Context getContext()>() in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <androidx.fragment.app.Fragment: android.content.Context getContext()>
Edge from $i1 = staticinvoke <androidx.core.content.res.CamUtils: int intFromLStar(float)>($f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r0 = staticinvoke <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>($r1) in <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)> to <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>
Edge from $f3 = staticinvoke <androidx.core.content.res.CamUtils: float lerp(float,float,float)>(0.59F, 0.69F, 1.0000002F) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <androidx.core.content.res.CamUtils: float lerp(float,float,float)>
Edge from $r8 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LayoutInflaterCompatHC", $r6, $r4) in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r2.<java.lang.Object: void <init>()>() in <androidx.core.content.res.ResourcesCompat: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not allowed.") in <androidx.startup.InitializationProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r12.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r6) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>
Edge from $r0 = new androidx.lifecycle.ClassesInfoCache in <androidx.lifecycle.ClassesInfoCache: void <clinit>()> to <androidx.lifecycle.ClassesInfoCache: void <clinit>()>
Edge from $z1 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r1) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>
Edge from specialinvoke r15.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Iterator descendingIterator()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()>
Edge from virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r10) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()>
Edge from $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()> to <java.lang.Thread: java.lang.Thread currentThread()>
Edge from virtualinvoke $r13.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("android:support:activity-result", $r14) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>
Edge from $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>($r10) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>
Edge from $r2 = staticinvoke <com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager getInstance()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: void show()> to <com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager getInstance()>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.util.ArrayList: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.GeneratorSequence: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)> to <java.lang.Object: void <init>()>
Edge from $r12 = virtualinvoke $r12.<android.util.SparseArray: android.util.SparseArray clone()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.util.SparseArray: android.util.SparseArray clone()>
Edge from virtualinvoke $r2.<androidx.appcompat.widget.TintTypedArray: void recycle()>() in <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: void recycle()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r7 = new androidx.interpolator.view.animation.FastOutSlowInInterpolator in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <clinit>()>
Edge from specialinvoke $r11.<androidx.activity.result.ActivityResultRegistry$3: void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract)>($r0, $r1, $i0, $r2) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.activity.result.ActivityResultRegistry$3: void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract)>
Edge from $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r1, $r2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from r18 = new android.content.ComponentName in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <android.content.ComponentName: void <clinit>()>
Edge from virtualinvoke $r8.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r9) in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <android.os.Handler: void removeCallbacks(java.lang.Runnable)>
Edge from $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <android.util.Xml: void <clinit>()>
Edge from specialinvoke r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7) in <androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r2 = <com.google.android.material.snackbar.BaseTransientBottomBar: int[] SNACKBAR_STYLE_ATTR> in <com.google.android.material.snackbar.BaseTransientBottomBar: boolean hasSnackbarStyleAttr()> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from $r7 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>($i0) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>
Edge from $r2 = virtualinvoke $r1.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry newest()>() in <androidx.lifecycle.LifecycleRegistry: boolean isSynced()> to <androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r4) in <androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r3.<com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)>
Edge from $r1 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>($f0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)> to <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void <init>()>
Edge from specialinvoke r28.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()> to <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>
Edge from specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5) in <androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.loader.app.LoaderManager: void <init>()>() in <androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)> to <androidx.loader.app.LoaderManager: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from virtualinvoke $r9.<androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.FilteringSequence: void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: void <init>()>
Edge from $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <android.os.SystemClock: long uptimeMillis()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from $r0 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()>() in <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)> to <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declared target fragment ") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>($r15) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.executor.DefaultTaskExecutor$1: void <init>(androidx.arch.core.executor.DefaultTaskExecutor)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)> to <android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.42) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $r16 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.ui.NavigationUI: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(1) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from $r7 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.StringBuilder: void <init>()>
Edge from $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r2, $i1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from specialinvoke $r0.<androidx.collection.SimpleArrayMap: void allocArrays(int)>($i3) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.SimpleArrayMap: void allocArrays(int)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <android.graphics.drawable.Drawable: int getMinimumHeight()>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getLevel()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int getLevel()>
Edge from $r5 = new androidx.fragment.app.FragmentManagerViewModel in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()>
Edge from $i2 = <androidx.core.R$styleable: int ColorStateListItem_android_color> in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.R$styleable: void <clinit>()>
Edge from $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <kotlin.collections.EmptyIterator: boolean hasNext()>
Edge from $d4 = staticinvoke <java.lang.Math: double sin(double)>($d0) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>($i0, $i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)>
Edge from $r1 = staticinvoke <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)>($r0, $r0) in <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()> to <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)>
Edge from virtualinvoke $r8.<com.example.compatibilitytest.MainActivity$2: void onClick(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <com.example.compatibilitytest.MainActivity$2: void onClick(android.view.View)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)> to <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentController: void dispatchResume()>() in <androidx.fragment.app.FragmentActivity: void onResumeFragments()> to <androidx.fragment.app.FragmentController: void dispatchResume()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>(2048, $i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <java.lang.Math: int min(int,int)>
Edge from $r8 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "container") in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>() in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()>
Edge from specialinvoke $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>($r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>
Edge from $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>() in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <android.os.Handler: android.os.Looper getLooper()>
Edge from $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r4, $r2, $r1, $r6) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.IndexOutOfBoundsException: void <init>()> to <java.lang.RuntimeException: void <init>()>
Edge from $r12 = staticinvoke <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()>
Edge from $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = new android.os.Bundle in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <android.os.Bundle: void <clinit>()>
Edge from $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)> to <android.graphics.Bitmap$Config: void <clinit>()>
Edge from $r13 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r12) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r2, $r3) in <androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()> to <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>() in <androidx.lifecycle.ViewModelStore: void clear()> to <java.util.HashMap: java.util.Collection values()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $d0 = staticinvoke <java.lang.Math: double cbrt(double)>($d0) in <androidx.core.content.res.CamUtils: float lStarFromY(float)> to <java.lang.Math: double cbrt(double)>
Edge from $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke r15.<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()>() in <androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()>
Edge from $r5 = new android.os.Bundle in <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)> to <android.os.Bundle: void <clinit>()>
Edge from $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("androidx.lifecycle.ViewModelProvider.DefaultKey:") in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r1, $l0) in <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)> to <androidx.appcompat.app.AppCompatDelegateImpl$2: void run()>
Edge from $f2 = virtualinvoke $r1.<androidx.core.content.res.CamColor: float getAStar()>() in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <androidx.core.content.res.CamColor: float getAStar()>
Edge from specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>("Next event must be ON_CREATE") in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <java.lang.AssertionError: void <init>(java.lang.Object)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentStrictMode", $r8, $r9) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>
Edge from $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke r9.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1) in <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "valueFrom") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke r15.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r4, $r5, $r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from specialinvoke $r0.<androidx.appcompat.app.TwilightCalculator: void <init>()>() in <androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()> to <androidx.appcompat.app.TwilightCalculator: void <init>()>
Edge from $r3 = virtualinvoke $r1.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from $r2 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList getAllSavedState()> to <java.util.HashMap: java.util.Collection values()>
Edge from $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.savedstate.SavedStateRegistryController: void <init>(androidx.savedstate.SavedStateRegistryOwner)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.Fragment: void restoreViewState()>() in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <androidx.fragment.app.Fragment: void restoreViewState()>
Edge from virtualinvoke $r2.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, $z0) in <androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)> to <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void stop()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)>($r1, 0, $i0, $i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)>
Edge from $r9 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>() in <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>
Edge from virtualinvoke $r6.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Matrix: void set(android.graphics.Matrix)>
Edge from $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1) in <androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)> to <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
Edge from virtualinvoke $r1.<androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)>($r2) in <androidx.activity.result.ActivityResultRegistry$3: void unregister()> to <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r2, $r1, $r7) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>
Edge from interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r7) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r3 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $r1 = virtualinvoke $r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android:support:fragments") in <androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)> to <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
Edge from specialinvoke $r9.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r11) in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r11 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.TwilightManager: void <init>(android.content.Context,android.location.LocationManager)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.ArrayList)>($r4) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.ArrayList)>
Edge from $r5 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $f4 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getAw()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getAw()>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void create()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>($r3) in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No activity") in <androidx.fragment.app.FragmentManager: void moveToState(int,boolean)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()>
Edge from staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <android.text.TextUtils: void <clinit>()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpecialEffectsController: Enqueuing remove operation for fragment ") in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentStore: void moveToExpectedState()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onPause()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onPause()>
Edge from $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)> to <java.lang.System: void <clinit>()>
Edge from specialinvoke $r13.<android.graphics.Paint: void <init>(int)>(1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void <init>(int)>
Edge from specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r3, class "Lcom/example/compatibilitytest/MainActivity2;") in <com.example.compatibilitytest.MainActivity$1: void onClick(android.view.View)> to <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto ACTIVITY_CREATED: ") in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r1 = new android.os.Bundle in <androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$0$androidx-fragment-app-FragmentManager()> to <android.os.Bundle: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>() in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>
Edge from $i0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()>
Edge from $l0 = staticinvoke <android.animation.ValueAnimator: long getFrameDelay()>() in <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)> to <android.animation.ValueAnimator: long getFrameDelay()>
Edge from staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>($r0, $r1, $r2, $r3, $r4, $r6, $i2, $f0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r1, $r3) in <androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r5 = virtualinvoke $r0.<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>($r3) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>
Edge from specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ID does not reference a View inside this Activity") in <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto STARTED: ") in <androidx.fragment.app.FragmentStateManager: void start()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>() in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.util.ConcurrentModificationException: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void dispatchPause()>() in <androidx.fragment.app.FragmentActivity: void onPause()> to <androidx.fragment.app.FragmentController: void dispatchPause()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r1, "centerColor") in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from virtualinvoke $r3.<java.util.ArrayDeque: boolean remove(java.lang.Object)>($r1) in <androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()> to <java.util.ArrayDeque: boolean remove(java.lang.Object)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r5, $i0, $i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1) in <androidx.fragment.app.SpecialEffectsController$Operation: void addCompletionListener(java.lang.Runnable)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)> to <android.content.ContextWrapper: android.content.Context getApplicationContext()>
Edge from $i0 = staticinvoke <android.os.Process: int myPid()>() in <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)> to <android.os.Process: int myPid()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()>() in <androidx.appcompat.app.ToolbarActionBar$1: void run()> to <androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4, $r5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r1) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from $r6 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)>($r4) in <androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)> to <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r2 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity4: android.view.View findViewById(int)>(2131230824) in <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>") in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 0, $r0) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void onStop()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $r1 = new android.os.Bundle in <androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()> to <android.os.Bundle: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>($i0, $r1) in <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.Object parseResult(int,android.content.Intent)> to <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>
Edge from specialinvoke $r2.<java.lang.Object: void <init>()>() in <androidx.lifecycle.LiveData: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r12.<androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void <init>(java.lang.String,androidx.fragment.app.strictmode.Violation)>($r5, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void <init>(java.lang.String,androidx.fragment.app.strictmode.Violation)>
Edge from $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Float: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(null) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>
Edge from specialinvoke $r1.<androidx.appcompat.app.TwilightManager: void <init>(android.content.Context,android.location.LocationManager)>($r0, $r3) in <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)> to <androidx.appcompat.app.TwilightManager: void <init>(android.content.Context,android.location.LocationManager)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper$1: void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper)> to <java.lang.Object: void <init>()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 3.0) in <androidx.core.content.res.CamUtils: float yFromLStar(float)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>
Edge from virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f0, $f1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void lineTo(float,float)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()>
Edge from $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r9) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r4 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <android.content.ContextWrapper: android.content.Context getApplicationContext()>
Edge from $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>() in <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)> to <java.util.ArrayList: int size()>
Edge from specialinvoke $r2.<android.graphics.Paint: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)> to <android.graphics.Paint: void <init>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ViewModel: void onCleared()>() in <androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()>
Edge from $r1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentStateManager$1: void <init>(androidx.fragment.app.FragmentStateManager,android.view.View)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve value from Resources#mDrawableCache", $r6) in <androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r10.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)>
Edge from specialinvoke $r0.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>($r3, $r1) in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)> to <androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.Integer: java.lang.String toHexString(int)>
Edge from virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animator name: ") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from $f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "endY", $i0, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from specialinvoke $r6.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r3, $r4, $r5) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>
Edge from $r7 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>($r5, $r6) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpecialEffectsController: Enqueuing hide operation for fragment ") in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.Collections: java.util.Map emptyMap()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>() in <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()> to <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>
Edge from $r5 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.StringBuilder: void <init>()>
Edge from $r5 = virtualinvoke $r4.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)>($r3, $r0, $i0) in <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean checkForMenus()>() in <androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean checkForMenus()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>() in <androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()> to <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void forcePostponedTransactions()> to <java.util.HashSet: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<androidx.collection.SparseArrayCompat: void <init>(int)>(10) in <androidx.collection.SparseArrayCompat: void <init>()> to <androidx.collection.SparseArrayCompat: void <init>(int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void createView()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void createView()>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()> to <java.lang.StringBuilder: void <init>()>
Edge from $d2 = staticinvoke <java.lang.Math: double cos(double)>($d1) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double cos(double)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()>
Edge from $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.fragment.app.Fragment$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r1.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, 1.0F, 1.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)> to <android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r2.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <android.graphics.Matrix: void <init>()>
Edge from virtualinvoke $r3.<androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)>($r0) in <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)> to <androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)>
Edge from $r1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r0) in <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double cos(double)>
Edge from $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performAttach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchActivityCreated()>() in <androidx.fragment.app.FragmentController: void dispatchActivityCreated()> to <androidx.fragment.app.FragmentManager: void dispatchActivityCreated()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving view state for fragment ") in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r14.<androidx.core.app.ActivityRecreator$2: void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)>($r9, $r0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$2: void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void addViewToContainer()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentStateManager: void addViewToContainer()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from <java.lang.Float: java.lang.Class TYPE> = null in <java.lang.Float: void <clinit>()> to <java.lang.Float: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)>($r6) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <android.graphics.drawable.LayerDrawable: void jumpToCurrentState()>
Edge from $r1 = staticinvoke <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)>(null, $r2, $r0, $i0) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()>
Edge from $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.Integer: void <clinit>()>
Edge from $i1 = staticinvoke <java.lang.Math: int min(int,int)>(3000, $i1) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.Math: int min(int,int)>
Edge from specialinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.concurrent.CopyOnWriteArrayList: void <init>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()>
Edge from virtualinvoke $r3.<androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)>($l1, $d0, $d1) in <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)> to <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
Edge from $r8 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>
Edge from $r2 = virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>() in <androidx.fragment.app.FragmentActivity: void markFragmentsCreated()> to <androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>
Edge from virtualinvoke $r16.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>($r7, $r1, $r2, $r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>
Edge from $z1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "autoMirrored") in <androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)>($r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)>
Edge from specialinvoke $r0.<kotlin.sequences.FilteringSequence$iterator$1: void calcNext()>() in <kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()> to <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()>
Edge from $z1 = staticinvoke <kotlin.sequences.FilteringSequence: boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence)>($r3) in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.FilteringSequence: boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence)>
Edge from $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.content.res.ThemedResourceCache") in <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)> to <java.lang.Class: java.lang.Class forName(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)>($r2) in <androidx.appcompat.app.TwilightManager: boolean isNight()> to <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)>
Edge from specialinvoke $r3.<androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)>($r0) in <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)> to <androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r2, 0, $i2) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>($i0) in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>
Edge from $z1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from $z0 = virtualinvoke $r2.<androidx.fragment.app.Fragment: boolean isAdded()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.Fragment: boolean isAdded()>
Edge from $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.String: int hashCode()>
Edge from virtualinvoke $r4.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()> to <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>
Edge from specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not on back stack") in <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r5.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_DESTROY", 5) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r9 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r9, $i5) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.util.StateSet: void <clinit>()>
Edge from $d12 = staticinvoke <java.lang.Math: double cos(double)>($d7) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double cos(double)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)>($r5) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)>
Edge from $i2 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfNull()>() in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.SimpleArrayMap: int indexOfNull()>
Edge from specialinvoke $r0.<androidx.arch.core.executor.ArchTaskExecutor$1: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()> to <androidx.arch.core.executor.ArchTaskExecutor$1: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $f3 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getNcb()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getNcb()>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode ADD> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0) in <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void restoreViewState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlX2", 2, 0.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>
Edge from $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r2, $r1) in <com.google.android.material.snackbar.SnackbarManager: void <init>()> to <android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>
Edge from $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isTagEnabled", $r4) in <androidx.tracing.Trace: boolean isEnabledFallback()> to <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
Edge from $i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class name exists, is public, and has an empty constructor that is public") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()>() in <androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()> to <androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()>
Edge from $f0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getHue()>() in <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)> to <androidx.core.content.res.CamColor: float getHue()>
Edge from $r5 = <androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.fragment.app.FragmentStateManager$2: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.startup.InitializationProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(null, null, "", $r7) in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <androidx.startup.InitializationProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
Edge from virtualinvoke $r2.<androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)>($r1) in <androidx.activity.ComponentActivity$6: android.os.Bundle saveState()> to <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)>
Edge from $r2 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>
Edge from specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null") in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from $f3 = staticinvoke <java.lang.Math: float abs(float)>($f1) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from $r2 = <androidx.navigation.Navigation$findViewNavController$1: androidx.navigation.Navigation$findViewNavController$1 INSTANCE> in <androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)> to <androidx.navigation.Navigation$findViewNavController$1: void <clinit>()>
Edge from $r8 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>($z0) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>
Edge from $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: void frameworkSet(android.view.View,java.lang.Object)>($r1, $r2) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Object)>
Edge from virtualinvoke $r8.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r9) in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <android.os.Handler: void removeCallbacks(java.lang.Runnable)>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r1.<androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)>($r0) in <androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()> to <androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)> to <java.util.HashMap: java.util.Collection values()>
Edge from specialinvoke $r6.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.HashMap: void <init>()>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $r3 = new androidx.core.content.res.ViewingConditions in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <androidx.core.content.res.ViewingConditions: void <clinit>()>
Edge from specialinvoke $r1.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <android.graphics.Matrix: void <init>()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)> to <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)>
Edge from $r18 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r3, $r4, $r5, $r1, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void setContentView(int)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:target_state", $r4) in <androidx.fragment.app.FragmentStateManager: void saveState()> to <android.os.Bundle: void putString(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r7.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.ActionBar: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r11.<androidx.activity.ComponentActivity$5: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$5: void <init>(androidx.activity.ComponentActivity)>
Edge from specialinvoke $r0.<kotlin.collections.EmptyMap: void <init>()>() in <kotlin.collections.EmptyMap: void <clinit>()> to <kotlin.collections.EmptyMap: void <init>()>
Edge from interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)>($r2) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ") in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performViewCreated()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment: void performViewCreated()>
Edge from $z1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlY2") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>($r5) in <androidx.fragment.app.FragmentStateManager: void create()> to <androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>
Edge from specialinvoke $r4.<android.os.Bundle: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <android.os.Bundle: void <init>()>
Edge from $f5 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFlRoot()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFlRoot()>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityResultRegistry", $r7) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from specialinvoke $r2.<androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>($r1, $r0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.lifecycle.ViewModel: void <init>()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()> to <androidx.lifecycle.ViewModel: void <init>()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()>() in <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)> to <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()>
Edge from virtualinvoke $r3.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>($r1, $r2, $r4) in <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>
Edge from $i1 = staticinvoke <android.graphics.Color: int green(int)>($i0) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <android.graphics.Color: int green(int)>
Edge from virtualinvoke $r13.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r15) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
Edge from virtualinvoke $r4.<androidx.activity.ComponentActivity: void ensureViewModelStore()>() in <androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity: void ensureViewModelStore()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()>() in <androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()> to <androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.lang.Float: void <clinit>()>
Edge from $r8 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r3) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $i0 = interfaceinvoke $r2.<java.util.List: int size()>() in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: int size()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already declared with different @OnLifecycleEvent value: previous value ") in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r10.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r15) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performDestroyView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $r1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r12.<androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>($r16) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>
Edge from virtualinvoke $r7.<android.os.Bundle: void putAll(android.os.Bundle)>($r1) in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: void putAll(android.os.Bundle)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i1) in <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)> to <androidx.core.content.res.CamUtils: float linearized(int)>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.util.HashMap: java.util.Collection values()>
Edge from $r1 = staticinvoke <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>($r0, 2131231032) in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke r8.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)>($r5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)>
Edge from specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>() in <androidx.core.graphics.ColorUtils: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring re-entrant call to moveToExpectedState() for ") in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <java.lang.Long: void <clinit>()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power") in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0) in <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)>
Edge from $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sin(double)>
Edge from $i0 = virtualinvoke $r2.<android.content.IntentFilter: int countActions()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()> to <android.content.IntentFilter: int countActions()>
Edge from specialinvoke $r5.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)>($r0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)>
Edge from $i0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r6 = <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING> in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from $f2 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getNbb()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getNbb()>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.ViewModelStore: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()>() in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()> to <androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameter type. Must be one and instanceof LifecycleOwner") in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r1 = staticinvoke <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)>($i0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: float[] xyzFromInt(int)>
Edge from specialinvoke $r0.<androidx.fragment.app.Fragment: void initLifecycle()>() in <androidx.fragment.app.Fragment: void <init>()> to <androidx.fragment.app.Fragment: void initLifecycle()>
Edge from specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r3) in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)> to <java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from $r9 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r9, $i5) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.util.StateSet: int[] trimStateSet(int[],int)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performStop()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r1, $z0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)> to <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>
Edge from $r9 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)>($r2, $r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>($r3) in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>
Edge from $i1 = staticinvoke <androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)>
Edge from $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.lang.Boolean: void <clinit>()>
Edge from specialinvoke $r4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()> to <android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
Edge from $i0 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8) in <androidx.lifecycle.LifecycleRegistry: void sync()> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from specialinvoke $r2.<com.example.compatibilitytest.MainActivity2$1: void <init>(com.example.compatibilitytest.MainActivity2)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <com.example.compatibilitytest.MainActivity2$1: void <init>(com.example.compatibilitytest.MainActivity2)>
Edge from $i1 = staticinvoke <androidx.core.content.res.CamUtils: int intFromLStar(float)>($f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: int intFromLStar(float)>
Edge from virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>
Edge from $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()> to <android.util.SparseArray: java.lang.Object valueAt(int)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r2) in <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)> to <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r2, 0, $i2) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $r9 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED> in <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)>($r1, 0, $i4) in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)>
Edge from specialinvoke r27.<androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.FragmentManager)>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 6) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from $i0 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>($r6) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>
Edge from $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>($i0) in <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)> to <android.content.res.Resources: boolean getBoolean(int)>
Edge from virtualinvoke $r3.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r6) in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r1) in <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
Edge from $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window") in <androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $l1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>($r7) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>($r2, $r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int hashCode()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r5 = virtualinvoke $r1.<androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)>($r2) in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)>
Edge from $r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)> to <android.graphics.Paint$Cap: void <clinit>()>
Edge from $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <java.lang.Math: float abs(float)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>
Edge from $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <clinit>()> to <kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()>
Edge from $r13 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2) in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.FragmentStateManager: void createView()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $r8 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r3, $r0, $r5, $r7) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)> to <java.lang.Object: void <init>()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r6) in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <java.util.HashSet: boolean add(java.lang.Object)>
Edge from $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>() in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <java.lang.Class: java.lang.String getName()>
Edge from $f3 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getJ()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: float getJ()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void onPostResume()>() in <androidx.appcompat.app.AppCompatActivity: void onPostResume()> to <androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()>
Edge from $r13 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r12) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <android.util.Xml: void <clinit>()>
Edge from $r2 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)> to <androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()>
Edge from virtualinvoke $r2.<android.animation.AnimatorSet: void playTogether(java.util.Collection)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()> to <android.animation.AnimatorSet: void playTogether(java.util.Collection)>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>
Edge from $r1 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()>() in <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r2) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>
Edge from $r1 = staticinvoke <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)>($r2) in <androidx.fragment.app.FragmentActivity: void <init>()> to <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void wait()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0) in <androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)> to <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1) in <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)> to <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>
Edge from $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager$2: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2) in <androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from $r9 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)>($r4, $r12, $r13, $r1) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>
Edge from $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()> to <android.graphics.drawable.Drawable: int getMinimumWidth()>
Edge from $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <java.util.ArrayList: int size()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not find ThemedResourceCache class", $r2) in <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r5.<java.util.ArrayDeque: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayDeque: void <init>()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.2) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double pow(double,double)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r3, 0, $i2) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $f1 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getJ()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: float getJ()>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)> to <kotlin.sequences.TransformingSequence: java.util.Iterator iterator()>
Edge from $z0 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)>($r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor$2: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r6, 0, $i3) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r2.<android.util.TypedValue: void <init>()>() in <androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()> to <android.util.TypedValue: void <init>()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "saveAllState: no fragments!") in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r1, $r0) in <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)> to <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.LiveData: void <init>()> to <java.lang.Object: void <init>()>
Edge from $d0 = staticinvoke <java.lang.Math: double acos(double)>($d0) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double acos(double)>
Edge from specialinvoke $r0.<androidx.collection.LongSparseArray: void gc()>() in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <androidx.collection.LongSparseArray: void gc()>
Edge from $r14 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r2) in <androidx.fragment.app.Fragment: void restoreViewState()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()>() in <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()> to <android.app.Activity: android.view.Window getWindow()>
Edge from staticinvoke <androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)>($r4, 1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> to <androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)>
Edge from $r7 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>($r5, null, $r6) in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpecialEffectsController: Enqueuing add operation for fragment ") in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$7: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()> to <androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealByteArraySize(int)>($i0) in <androidx.collection.ContainerHelpers: int idealIntArraySize(int)> to <androidx.collection.ContainerHelpers: int idealByteArraySize(int)>
Edge from specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("android:menu:expandedactionview") in <androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>
Edge from $z0 = <androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed> in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE> in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()>
Edge from $i4 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(4) in <androidx.fragment.app.FragmentManager: void dispatchActivityCreated()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from $z1 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)>($i2, $i3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.collections.EmptyIterator: boolean hasNext()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke r16.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r17) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>
Edge from $r8 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double cos(double)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatActivity$1: void <init>(androidx.appcompat.app.AppCompatActivity)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i0) in <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void pause()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($r1, $i0, 0, $r4) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>($r3) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentStore: void moveToExpectedState()>() in <androidx.fragment.app.FragmentManager: void moveToState(int,boolean)> to <androidx.fragment.app.FragmentStore: void moveToExpectedState()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void setTheme(int)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from specialinvoke $r0.<androidx.lifecycle.Lifecycle: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)> to <androidx.lifecycle.Lifecycle: void <init>()>
Edge from $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r0.<android.view.View$AccessibilityDelegate: void <init>()>() in <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>
Edge from r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY> in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $r4 = <androidx.collection.SparseArrayCompat: java.lang.Object DELETED> in <androidx.collection.SparseArrayCompat: void gc()> to <androidx.collection.SparseArrayCompat: void <clinit>()>
Edge from $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME> in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r4.<androidx.collection.LongSparseArray: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)> to <androidx.collection.LongSparseArray: void <init>()>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r2, $r1, "fillType", 13, $i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $r2 = new android.content.Intent in <com.example.compatibilitytest.MainActivity$2: void onClick(android.view.View)> to <android.content.Intent: void <clinit>()>
Edge from $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.app.ActivityRecreator$1: void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; inflation may have unexpected results.") in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)> to <androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)>
Edge from specialinvoke $r1.<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void <init>(androidx.arch.core.internal.SafeIterableMap)>($r0) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void <init>(androidx.arch.core.internal.SafeIterableMap)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r2.<kotlin.sequences.FilteringSequence: void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)>($r0, 0, $r1) in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.sequences.FilteringSequence: void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)>
Edge from specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0") in <androidx.collection.LruCache: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r2.<android.animation.Animator: void setTarget(java.lang.Object)>($r3) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <android.animation.ObjectAnimator: void setTarget(java.lang.Object)>
Edge from $r1 = <androidx.core.app.ActivityRecreator: android.os.Handler mainHandler> in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator: void <clinit>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void onDestroy()>() in <androidx.appcompat.app.AppCompatActivity: void onDestroy()> to <androidx.fragment.app.FragmentActivity: void onDestroy()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from $f2 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getBStar()>() in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <androidx.core.content.res.CamColor: float getBStar()>
Edge from $z0 = staticinvoke <android.util.StateSet: boolean stateSetMatches(int[],int[])>($r3, $r2) in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])> to <android.util.StateSet: boolean stateSetMatches(int[],int[])>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()>
Edge from specialinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: void <init>()>
Edge from $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($r2, $l1, $r10) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>
Edge from $r5 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($r4) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>
Edge from $r6 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry eldest()>() in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>() in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <android.content.res.ColorStateList: int getDefaultColor()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatActivity$2: void <init>(androidx.appcompat.app.AppCompatActivity)> to <java.lang.Object: void <init>()>
Edge from $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performDestroy()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.Fragment: void performDestroy()>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void create()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void create()>
Edge from $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>
Edge from $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.Math: float abs(float)>
Edge from virtualinvoke $r5.<androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)>($r4) in <androidx.activity.ComponentActivity$7: void onContextAvailable(android.content.Context)> to <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from staticinvoke <androidx.tracing.Trace: void endSection()>() in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <androidx.tracing.Trace: void endSection()>
Edge from specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r0, $r3) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()> to <android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>
Edge from specialinvoke $r2.<androidx.appcompat.widget.VectorEnabledTintResources: void <init>(android.content.Context,android.content.res.Resources)>($r0, $r1) in <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()> to <androidx.appcompat.widget.VectorEnabledTintResources: void <init>(android.content.Context,android.content.res.Resources)>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)> to <android.text.TextUtils: void <clinit>()>
Edge from $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <java.lang.String: char charAt(int)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative size: ") in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r10 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r5, $r3, $r2, $r9) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r3, $r1, 0) in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "pathData") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r3.<androidx.arch.core.internal.SafeIterableMap: void <init>()>() in <androidx.lifecycle.LiveData: void <init>()> to <androidx.arch.core.internal.SafeIterableMap: void <init>()>
Edge from $r4 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_GROUP> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $r9 = interfaceinvoke $r14.<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r12, $r13, $r15) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r15 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>("addObserver") in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>
Edge from $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performPause()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from specialinvoke $r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)> to <android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)>($r1, null, null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)>
Edge from null in <java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i0) in <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r3, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>
Edge from $r0 = <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance> in <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()> to <androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on Fragment ") in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$6: void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.ToolbarActionBar: void onConfigurationChanged(android.content.res.Configuration)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that does not belong to this FragmentManager!") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <androidx.tracing.Trace: boolean isEnabledFallback()> to <java.lang.Long: java.lang.Long valueOf(long)>
Edge from $r7 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>(null) in <androidx.lifecycle.LiveData: void setValue(java.lang.Object)> to <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <java.util.ArrayList: void <init>()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double cos(double)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from <androidx.navigation.NavDestination: androidx.navigation.NavDestination$Companion Companion> = $r0 in <androidx.navigation.NavDestination: void <clinit>()> to <androidx.navigation.NavDestination: void <clinit>()>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from staticinvoke <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])>($r0, $c3, $r3) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()>
Edge from $i1 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i1, 0, 255) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>
Edge from $r4 = virtualinvoke $r3.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>("android:support:activity-result") in <androidx.activity.ComponentActivity$7: void onContextAvailable(android.content.Context)> to <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()>
Edge from specialinvoke $r8.<androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)>($r10) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)>
Edge from $i2 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity$2: void <init>(com.example.compatibilitytest.MainActivity)> to <java.lang.Object: void <init>()>
Edge from $f1 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getAStar()>() in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <androidx.core.content.res.CamColor: float getAStar()>
Edge from specialinvoke $r13.<android.graphics.Paint: void <init>(int)>(1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void <init>(int)>
Edge from $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>($d0, $d1, $d2) in <androidx.core.content.res.CamUtils: int intFromLStar(float)> to <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()>
Edge from $z0 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from $r4 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, $i1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r2 = <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> in <androidx.core.graphics.drawable.WrappedDrawableState: void <init>(androidx.core.graphics.drawable.WrappedDrawableState)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Integer: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity: android.view.View findViewById(int)>(2131230927) in <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, $r2, $r3, $r4, $r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])>($r1) in <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <init>()> to <androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0) in <androidx.fragment.app.FragmentManager: void dispatchStart()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from $i1 = staticinvoke <android.graphics.Color: int blue(int)>($i1) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int blue(int)>
Edge from $z2 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from $r7 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r6) in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.Collections: void <clinit>()>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <java.lang.StringBuilder: void <init>()>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r7 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)>($r7, $i1, $i2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)>
Edge from specialinvoke $r0.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: void <init>()>
Edge from specialinvoke $r7.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r4, $r5, $r6) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()>
Edge from $i1 = staticinvoke <java.lang.Math: int round(float)>($f0) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)> to <java.lang.Math: int round(float)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()>
Edge from $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)> to <java.lang.Long: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ") in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r1, $r3) in <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
Edge from specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not allowed.") in <androidx.startup.InitializationProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "propertyYName", 3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>() in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator: void <clinit>()>
Edge from $r2 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>() in <com.google.android.material.snackbar.SnackbarManager: boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r0) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r2 = new androidx.loader.app.LoaderManagerImpl$LoaderViewModel in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>
Edge from staticinvoke <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)>
Edge from specialinvoke $r3.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.SnackbarManager: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r3.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2) in <androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = virtualinvoke $r1.<android.os.Bundle: boolean isEmpty()>() in <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)> to <android.os.Bundle: boolean isEmpty()>
Edge from staticinvoke <java.lang.Math: int max(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <java.lang.Math: int max(int,int)>
Edge from specialinvoke $r3.<android.graphics.Rect: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()> to <android.graphics.Rect: void <init>()>
Edge from $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>() in <androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r2, $r5, 0) in <androidx.fragment.app.FragmentStateManager: void create()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, $z0) in <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)> to <androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)>
Edge from specialinvoke $r1.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>() in <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)> to <androidx.core.view.AccessibilityDelegateCompat: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry eldest()>() in <androidx.lifecycle.LifecycleRegistry: boolean isSynced()> to <androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void pause()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegate: void installViewFactory()>() in <androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)> to <androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()>
Edge from interfaceinvoke $r1.<android.graphics.drawable.Animatable: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", $r11, $r8) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r2 = staticinvoke <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>($r1, "Replace with your own action", 0) in <com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)> to <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>
Edge from specialinvoke $r3.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($i0, 1) in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
Edge from <androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY> = $r0 in <androidx.core.graphics.ColorUtils: void <clinit>()> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r6 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <kotlin.collections.EmptySet: java.util.Iterator iterator()>
Edge from $r15 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r10) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for a container view with no id") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <clinit>()> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <init>()>
Edge from $r6 = virtualinvoke $r2.<androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)>($i1, $r10) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.Object parseResult(int,android.content.Intent)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$0$androidx-fragment-app-FragmentManager()> to <android.os.Bundle: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()> to <androidx.appcompat.widget.ResourceManagerInternal: void <init>()>
Edge from specialinvoke $r4.<androidx.fragment.app.Fragment: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.Fragment: void <init>()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r10) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator$1: void run()>
Edge from $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "navController") in <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r1 = virtualinvoke $r3.<android.content.ContextWrapper: android.content.Context getBaseContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
Edge from $r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r4, $r0, $r1, $r2) in <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not associated with a fragment manager.") in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r12.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()>
Edge from $r2 = specialinvoke $r0.<androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()>() in <androidx.fragment.app.FragmentStateManager: void saveState()> to <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()>
Edge from $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.strictmode.FragmentStrictMode: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <init>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>($r0) in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>
Edge from $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from $r2 = virtualinvoke $r1.<androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r3, $r4) in <androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)> to <androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Edge from $i0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setConstantSize(boolean)>($z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()>
Edge from specialinvoke $r0.<android.view.animation.AccelerateInterpolator: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <clinit>()> to <android.view.animation.AccelerateInterpolator: void <init>()>
Edge from $r3 = virtualinvoke $r1.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from virtualinvoke $r6.<androidx.collection.LongSparseArray: void put(long,java.lang.Object)>($l0, $r7) in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <androidx.collection.LongSparseArray: void put(long,java.lang.Object)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentManager: void dispatchAttach()>() in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.FragmentManager: void dispatchAttach()>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r5) in <androidx.fragment.app.Fragment: void performStop()> to <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()>
Edge from $r1 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE> in <androidx.appcompat.widget.AppCompatDrawableManager: void preload()> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r2 = staticinvoke <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r5 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from r13 = new androidx.appcompat.view.menu.MenuBuilder in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.menu.MenuBuilder: void <clinit>()>
Edge from $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sin(double)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
Edge from virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)>($r15) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)>
Edge from r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i2, $i0) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added fragment to active set ") in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>() in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
Edge from virtualinvoke $r7.<androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)>($r3, $r1) in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)>
Edge from virtualinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)>($i0, $i2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("vector", $r1) in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1) in <androidx.collection.LruCache: void <init>(int)> to <java.util.LinkedHashMap: void <init>(int,float,boolean)>
Edge from virtualinvoke $r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleSelf(java.lang.Runnable,long)>($r3, $l1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>
Edge from $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = virtualinvoke $r4.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegate: void onSaveInstanceState(android.os.Bundle)>($r1) in <androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()> to <androidx.appcompat.app.AppCompatDelegateImpl: void onSaveInstanceState(android.os.Bundle)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r2) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashSet: boolean contains(java.lang.Object)>
Edge from specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <java.util.ArrayList: void <init>()>
Edge from $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r1 = virtualinvoke $r0.<androidx.navigation.Navigation$findViewNavController$1: android.view.View invoke(android.view.View)>($r1) in <androidx.navigation.Navigation$findViewNavController$1: java.lang.Object invoke(java.lang.Object)> to <androidx.navigation.Navigation$findViewNavController$1: android.view.View invoke(android.view.View)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)>($r2) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)>
Edge from $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform") in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <java.lang.Object: java.lang.Class getClass()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r7.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void performStop()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from $f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "startY", $i0, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void stop()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7) in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i2 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)>($i2, $f0, $f1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <java.util.ArrayList: void <init>()>
Edge from $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, $i1) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)> to <androidx.core.graphics.ColorUtils: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initState called for fragment: ") in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r12 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t access ViewModels from detached fragment") in <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" propertyXName or propertyYName is needed for PathData") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null || value == null") in <androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: void <init>()>
Edge from $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from specialinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r0) in <androidx.core.app.ComponentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>
Edge from virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>() in <androidx.loader.app.LoaderManagerImpl: void markForRedelivery()> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>
Edge from $r2 = new androidx.activity.result.ActivityResult in <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)> to <androidx.activity.result.ActivityResult: void <clinit>()>
Edge from $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from $r1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r0, $i0) in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>
Edge from $i0 = staticinvoke <androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)>($r0) in <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)> to <androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <android.os.Build$VERSION: void <clinit>()>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke setLayoutDirection(int) via reflection", $r8) in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.ClassLoader getClassLoader()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.sequences.EmptySequence: java.util.Iterator iterator()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>($r1, $r6, $r2) in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>
Edge from specialinvoke $r5.<androidx.fragment.app.Fragment: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.Fragment: void <init>()>
Edge from specialinvoke $r6.<android.graphics.Path: void <init>(android.graphics.Path)>($r7) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <android.graphics.Path: void <init>(android.graphics.Path)>
Edge from $r12 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r5, $r11, $r3) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
Edge from interfaceinvoke $r3.<androidx.activity.Cancellable: void cancel()>() in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()> to <androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "translateX", 6, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from specialinvoke $r8.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>()>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.ClassesInfoCache: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = virtualinvoke $r0.<android.app.Activity: android.view.View findViewById(int)>(2131231032) in <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.Class: java.lang.ClassLoader getClassLoader()>
Edge from $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>(0.0F, $f6) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rLineTo(float,float)>
Edge from virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0) in <androidx.lifecycle.LifecycleRegistry: void popParentState()> to <java.util.ArrayList: java.lang.Object remove(int)>
Edge from $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()> to <java.lang.Object: java.lang.Object clone()>
Edge from specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r10) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from $r1 = <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE> in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from specialinvoke $r2.<java.lang.Object: void <init>()>() in <androidx.arch.core.executor.DefaultTaskExecutor: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)> to <android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
Edge from specialinvoke $r13.<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>($r0) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>
Edge from specialinvoke $r3.<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>("STARTED", 3) in <androidx.lifecycle.Lifecycle$State: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)>
Edge from $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentStateManager: boolean isFragmentViewChild(android.view.View)>($r4) in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.FragmentStateManager: boolean isFragmentViewChild(android.view.View)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LayoutInflaterCompatHC", $r6, $r7) in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)>
Edge from $r2 = newarray (java.lang.String)[1] in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <java.lang.String: void <clinit>()>
Edge from specialinvoke $r1.<androidx.fragment.app.Fragment$4: void <init>(androidx.fragment.app.Fragment)>($r0) in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()> to <androidx.fragment.app.Fragment$4: void <init>(androidx.fragment.app.Fragment)>
Edge from specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchCreate()>() in <androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void dispatchCreate()>
Edge from $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888> in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Bitmap$Config: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)> to <java.lang.Object: void <init>()>
Edge from $r5 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.collections.EmptyIterator: java.lang.Object next()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManagerState: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from $f5 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getFl()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFl()>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.app.TwilightManager: boolean isNight()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()> to <androidx.appcompat.app.TwilightManager: boolean isNight()>
Edge from virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7) in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.380952380952381) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from specialinvoke $r6.<com.google.android.material.snackbar.BaseTransientBottomBar$5: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>($r0) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.snackbar.BaseTransientBottomBar$5: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setAlpha(int)>
Edge from staticinvoke <androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)>($r2, $r0) in <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()> to <androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>() in <androidx.fragment.app.FragmentManager: void doPendingDeferredStart()> to <androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation)>($r0, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation)>
Edge from specialinvoke $r4.<android.util.TypedValue: void <init>()>() in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <android.util.TypedValue: void <init>()>
Edge from $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String,int)>("android:target_req_state", 0) in <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)> to <android.os.Bundle: int getInt(java.lang.String,int)>
Edge from $r7 = virtualinvoke $r6.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>("androidx.savedstate.Restarter") in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>
Edge from $z1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r5, 0, $i0) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $z2 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>
Edge from $r1 = virtualinvoke $r3.<androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()>() in <androidx.fragment.app.Fragment: void onAttach(android.content.Context)> to <androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)>(null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)>
Edge from $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int blue(int)>
Edge from $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)>(0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)>
Edge from $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performDetach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$1: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer)> to <java.lang.Object: void <init>()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r2, $i0, $r1) in <androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()>
Edge from specialinvoke $r14.<androidx.activity.ComponentActivity$6: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$6: void <init>(androidx.activity.ComponentActivity)>
Edge from virtualinvoke $r3.<com.example.compatibilitytest.MainActivity: void startActivity(android.content.Intent)>($r2) in <com.example.compatibilitytest.MainActivity$1: void onClick(android.view.View)> to <android.app.Activity: void startActivity(android.content.Intent)>
Edge from specialinvoke r8.<android.view.animation.LinearInterpolator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.LinearInterpolator: void <init>()>
Edge from interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>($r1) in <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float lStarFromY(float)>($f0) in <androidx.core.content.res.CamUtils: float lStarFromInt(int)> to <androidx.core.content.res.CamUtils: float lStarFromY(float)>
Edge from $r2 = new android.os.Bundle in <com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)> to <android.os.Bundle: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
Edge from $r5 = interfaceinvoke $r4.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $r3 = interfaceinvoke $r1.<androidx.fragment.app.SpecialEffectsControllerFactory: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)>($r0) in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)> to <androidx.fragment.app.FragmentManager$3: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)>
Edge from $r0 = new kotlin.collections.EmptySet in <kotlin.collections.EmptySet: void <clinit>()> to <kotlin.collections.EmptySet: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void stop()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void stop()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar$3: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r5.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Matrix: void set(android.graphics.Matrix)>
Edge from $f2 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)>($f2, $f3, $f4, $f5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()>
Edge from $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>() in <androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)> to <java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCleared called for ") in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from virtualinvoke $r4.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r1, null) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.widget.VectorEnabledTintResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.Snackbar$1: void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener)> to <java.lang.Object: void <init>()>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)> to <androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()>
Edge from $r3 = newarray (java.lang.String)[0] in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.String: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i1, $i0) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $r9 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r2, $i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)> to <java.util.HashMap: void <init>()>
Edge from $f0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getChroma()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: float getChroma()>
Edge from $r4 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3) in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r3 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()>() in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()>
Edge from specialinvoke r14.<java.lang.StringBuilder: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.25) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double pow(double,double)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()>
Edge from specialinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>()>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <android.text.TextUtils: void <clinit>()>
Edge from $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED> in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from specialinvoke $r13.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = virtualinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
Edge from $r8 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate") in <kotlin.sequences.FilteringSequence: void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("PENALTY_DEATH", 1) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isProjected", $r3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
Edge from $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>() in <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()> to <java.lang.ThreadLocal: java.lang.Object get()>
Edge from specialinvoke $r13.<android.graphics.Rect: void <init>(int,int,int,int)>($i1, $i2, $i0, $i3) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <android.graphics.Rect: void <init>(int,int,int,int)>
Edge from virtualinvoke $r1.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.Fragment: void performAttach()> to <java.util.ArrayList: void clear()>
Edge from $r3 = new android.graphics.Rect in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()> to <android.graphics.Rect: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()> to <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>
Edge from $r2 = specialinvoke $r0.<androidx.fragment.app.FragmentActivity: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from $r10 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)>($r7) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>() in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: boolean isEmpty()>
Edge from $r6 = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.resources.R$styleable: void <clinit>()>
Edge from $z1 = specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>
Edge from $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: int size()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(1) in <androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()> to <androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)>
Edge from $r2 = new android.content.Intent in <com.example.compatibilitytest.MainActivity3$2: void onClick(android.view.View)> to <android.content.Intent: void <clinit>()>
Edge from staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>() in <kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)> to <kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $f1 = staticinvoke <androidx.core.content.res.CamUtils: float yFromLStar(float)>(50.0F) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <androidx.core.content.res.CamUtils: float yFromLStar(float)>
Edge from $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r4) in <kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)> to <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>
Edge from staticinvoke <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)>($r7) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)>
Edge from $r1 = newarray (java.lang.String)[1] in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <java.lang.String: void <clinit>()>
Edge from $r2 = specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void onDestroy()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)>
Edge from $i0 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r2) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStart()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStart()>
Edge from virtualinvoke $r2.<androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)>($r1) in <androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)>
Edge from $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
Edge from $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>() in <androidx.lifecycle.LifecycleRegistry: void sync()> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SavedStateRegistry was already restored.") in <androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $r8 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>("removeObserver") in <androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>
Edge from $r4 = interfaceinvoke $r5.<androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)>($r2) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)>
Edge from $r8 = virtualinvoke $r7.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
Edge from specialinvoke $r2.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r4) in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
Edge from $r1 = virtualinvoke $r0.<androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>($r2) in <androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)> to <androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
Edge from specialinvoke r28.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = virtualinvoke $r1.<androidx.arch.core.executor.TaskExecutor: boolean isMainThread()>() in <androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()> to <androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()>
Edge from specialinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve Resources#mDrawableCache field", $r3) in <androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>() in <androidx.collection.MapCollections$ArrayIterator: void remove()> to <java.lang.IllegalStateException: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r3) in <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>
Edge from staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r5) in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
Edge from $z1 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>($r1, $i0, $r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>
Edge from $f1 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getFl()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFl()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "flags") in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r2, 0, $i2) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r10.<androidx.appcompat.app.ActionBar: void onDestroy()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.ActionBar: void onDestroy()>
Edge from $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Float: java.lang.Float valueOf(float)>
Edge from $r0 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock> in <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r3, $r4, $r1, $i0, $i1, null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()>
Edge from virtualinvoke $r11.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>($f2, $f3, $r7, 1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArrayIndexOutOfBoundsException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r5 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from virtualinvoke $r1.<androidx.fragment.app.Fragment: void performViewCreated()>() in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <androidx.fragment.app.Fragment: void performViewCreated()>
Edge from $i0 = virtualinvoke $r14.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r2, $r3, $r7, $r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class is a valid subclass of Fragment") in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>() in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <androidx.fragment.app.FragmentManager: void noteStateNotSaved()>
Edge from $r6 = interfaceinvoke $r5.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "fillAlpha", 12, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r0 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r2) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>() in <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()> to <androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i1, $i0) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>
Edge from virtualinvoke $r1.<androidx.startup.InitializationProvider: boolean onCreate()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <androidx.startup.InitializationProvider: boolean onCreate()>
Edge from specialinvoke $r1.<androidx.arch.core.internal.SafeIterableMap$DescendingIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>($r3, $r4) in <androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()> to <androidx.arch.core.internal.SafeIterableMap$DescendingIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>
Edge from $r1 = virtualinvoke $r0.<androidx.startup.InitializationProvider: android.content.Context getContext()>() in <androidx.startup.InitializationProvider: boolean onCreate()> to <android.content.ContentProvider: android.content.Context getContext()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r2.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.util.ArrayList: void clear()>
Edge from specialinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)> to <androidx.arch.core.internal.FastSafeIterableMap: void <init>()>
Edge from $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, null) in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a NavController set on ") in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $d9 = staticinvoke <java.lang.Math: double atan2(double,double)>($d9, $d10) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double atan2(double,double)>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from virtualinvoke $r8.<androidx.loader.app.LoaderManager: void markForRedelivery()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.loader.app.LoaderManagerImpl: void markForRedelivery()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
Edge from staticinvoke <dummyMainClass: com.example.compatibilitytest.MyService dummyMainMethod_com_example_compatibilitytest_MyService(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <dummyMainClass: com.example.compatibilitytest.MyService dummyMainMethod_com_example_compatibilitytest_MyService(android.content.Intent)>
Edge from $i5 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i5, $i3, $i6, $i2, $i4) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)>($r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)>
Edge from $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.ArrayList: int size()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>(100, $i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.lang.Math: int min(int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)> to <java.util.ArrayList: void <init>()>
Edge from $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)> to <java.lang.Long: java.lang.Long valueOf(long)>
Edge from virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f0, $f1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void lineTo(float,float)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(-1) in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>
Edge from $i0 = virtualinvoke $r5.<java.lang.String: int length()>() in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.String: int length()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<android.util.TypedValue: void <init>()>() in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <android.util.TypedValue: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)>($r4) in <androidx.fragment.app.Fragment: void restoreViewState()> to <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)>
Edge from $r12 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r4.<android.graphics.Path: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <android.graphics.Path: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r4) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.startup.InitializationProvider: void <init>()>() in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <androidx.startup.InitializationProvider: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()> to <android.graphics.drawable.Drawable: int getMinimumWidth()>
Edge from specialinvoke $r11.<androidx.collection.ArrayMap: void <init>(int)>($i1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.collection.ArrayMap: void <init>(int)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)>
Edge from specialinvoke $r1.<androidx.core.content.res.CamColor: void <init>(float,float,float,float,float,float,float,float,float)>($f2, $f1, $f0, $f4, $f5, $f6, $f7, $f8, $f3) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: void <init>(float,float,float,float,float,float,float,float,float)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void restoreViewState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>") in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r2 = staticinvoke <androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)>($r1) in <androidx.startup.InitializationProvider: boolean onCreate()> to <androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)>
Edge from $r7 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r2, $r3) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.fragment.app.BackStackRecordState$1: void <init>()>() in <androidx.fragment.app.BackStackRecordState: void <clinit>()> to <androidx.fragment.app.BackStackRecordState$1: void <init>()>
Edge from $z1 = virtualinvoke $r2.<androidx.fragment.app.Fragment: boolean isInBackStack()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.Fragment: boolean isInBackStack()>
Edge from interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from <androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE> = $r0 in <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()> to <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)>($r3) in <androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)> to <androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r2, 0, $i2) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r1.<androidx.collection.ArraySet: java.lang.Object removeAt(int)>($i0) in <androidx.collection.ArraySet$1: void colRemoveAt(int)> to <androidx.collection.ArraySet: java.lang.Object removeAt(int)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r6 = virtualinvoke $r16.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: java.lang.String getPathName()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentLayoutInflaterFactory: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <androidx.collection.ArrayMap: void <init>()>
Edge from $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r6, $r2, $r1, $r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>() in <androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)> to <androidx.fragment.app.FragmentStore: java.util.List getFragments()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<vector> tag requires viewportHeight > 0") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f8 = staticinvoke <java.lang.Math: float abs(float)>($f7) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r12) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $z0 = virtualinvoke $r3.<java.util.WeakHashMap: boolean isEmpty()>() in <androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)> to <java.util.WeakHashMap: boolean isEmpty()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AsldcInflateDelegate", "Exception while inflating <animated-selector>", $r7) in <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r4 = interfaceinvoke $r5.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>($r0, $r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>
Edge from $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r1.<androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>($r0, $r2) in <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)> to <androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>
Edge from $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r2, $i1) in <androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED> in <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r13.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentViewLifecycleOwner: void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)> to <java.lang.Object: void <init>()>
Edge from $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)>($r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()>() in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegate: void <init>()> to <java.lang.Object: void <init>()>
Edge from interfaceinvoke $r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r6) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$7: void onActivityResult(java.lang.Object)>
Edge from virtualinvoke $r7.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>($f2, $r6, null) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1) in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>
Edge from $r9 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from specialinvoke $r7.<androidx.activity.ComponentActivity$2: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$2: void <init>(androidx.activity.ComponentActivity)>
Edge from specialinvoke r5.<java.net.URL: void <init>(java.lang.String)>("http://www.baidu.com") in <com.example.compatibilitytest.MyService: void me3()> to <java.net.URL: void <init>(java.lang.String)>
Edge from $r0 = new kotlin.collections.EmptyMap in <kotlin.collections.EmptyMap: void <clinit>()> to <kotlin.collections.EmptyMap: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void quadTo(float,float,float,float)>($f0, $f1, $f3, $f2) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void quadTo(float,float,float,float)>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.collection.LruCache: void trimToSize(int)> to <java.lang.StringBuilder: void <init>()>
Edge from $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: int size()>() in <androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> to <androidx.appcompat.view.menu.MenuBuilder: int size()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r7.<androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)>
Edge from virtualinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)>($i0, $i2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)>
Edge from $r2 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float[] getRgbD()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float[] getRgbD()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(1) in <androidx.fragment.app.FragmentManager: void dispatchDestroyView()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void dispatchDestroy()>() in <androidx.fragment.app.FragmentActivity: void onDestroy()> to <androidx.fragment.app.FragmentController: void dispatchDestroy()>
Edge from virtualinvoke $r6.<android.graphics.Matrix: boolean postScale(float,float)>($f1, $f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Matrix: boolean postScale(float,float)>
Edge from $r3 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r1.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentManager: void cleanupExec()> to <java.util.ArrayList: void clear()>
Edge from $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0) in <kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: void <init>(java.lang.Object)> to <kotlin.jvm.internal.Lambda: void <init>(int)>
Edge from $r13 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error with the back stack records") in <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from $r14 = virtualinvoke $r13.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r10.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)>(0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)>
Edge from $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean isAutoMirrored()>() in <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()>
Edge from $r10 = virtualinvoke $r8.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r3, $i2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from specialinvoke $r0.<androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)>($r4, $r2) in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)>
Edge from virtualinvoke $r23.<java.io.PrintWriter: void close()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.io.PrintWriter: void close()>
Edge from $i2 = staticinvoke <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>($i2) in <androidx.collection.LongSparseArray: void put(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>
Edge from $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r15 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r0, $r1, $r2, $r3, $r14) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)>($r0) in <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)> to <androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)>
Edge from specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)> to <java.lang.Object: void <init>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()>
Edge from $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LifecycleRegistry: boolean isSynced()> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from interfaceinvoke $r1.<androidx.activity.Cancellable: void cancel()>() in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()> to <android.graphics.Matrix: void <init>()>
Edge from specialinvoke $r3.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.internal.SafeIterableMap: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r3 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6) in <androidx.fragment.app.FragmentStore: void moveToExpectedState()> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void unregisterForLayoutCallback(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)> to <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void unregisterForLayoutCallback(android.view.View)>
Edge from $r12 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>($r0, $r11) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>
Edge from $r5 = <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED> in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i1, 0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onStop()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onStop()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()>
Edge from $z2 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mDrawableCache") in <androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "fragmentManager.strictModePolicy!!") in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>
Edge from $r3 = specialinvoke $r0.<androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)> to <androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void stop()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r6.<androidx.savedstate.Recreator: void <init>(androidx.savedstate.SavedStateRegistryOwner)>($r2) in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.savedstate.Recreator: void <init>(androidx.savedstate.SavedStateRegistryOwner)>
Edge from $r4 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity3: android.view.View findViewById(int)>(2131230823) in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f0, $f1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void lineTo(float,float)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>
Edge from $r5 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>
Edge from $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY> in <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from staticinvoke <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>($r2, $r3, $i1) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>($z0) in <androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()> to <androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>
Edge from $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()>
Edge from $r4 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()>
Edge from $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($r1) in <androidx.fragment.app.FragmentManager: void invalidateMenuForFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: active (") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from $r10 = virtualinvoke $r2.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>($r1) in <androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>
Edge from $r6 = <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING> in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()>
Edge from specialinvoke $r4.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r1, $r6) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.lang.Object: void <init>()>
Edge from $z0 = staticinvoke <android.os.Trace: boolean isEnabled()>() in <androidx.tracing.Trace: boolean isEnabled()> to <android.os.Trace: boolean isEnabled()>
Edge from $r1 = interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()>() in <androidx.appcompat.app.ToolbarActionBar: android.content.Context getThemedContext()> to <androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()>
Edge from $r1 = new android.os.Bundle in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void <clinit>()>
Edge from virtualinvoke $r4.<android.app.Activity: void recreate()>() in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.app.Activity: void recreate()>
Edge from virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5) in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r2) in <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)> to <androidx.core.content.res.ResourcesCompat: void <clinit>()>
Edge from $r11 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>($i0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>
Edge from specialinvoke r16.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r2, r17) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
Edge from $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from <androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache> = $r0 in <androidx.lifecycle.Lifecycling: void <clinit>()> to <androidx.lifecycle.Lifecycling: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlY1") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r1, $r2) in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>
Edge from specialinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableState: void <init>(androidx.core.graphics.drawable.WrappedDrawableState)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()> to <androidx.core.graphics.drawable.WrappedDrawableState: void <init>(androidx.core.graphics.drawable.WrappedDrawableState)>
Edge from virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from $r17 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>
Edge from $i3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r3, $r2, "repeatCount", 3, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>() in <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)> to <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>
Edge from virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()> to <java.lang.ThreadLocal: void set(java.lang.Object)>
Edge from $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>() in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.lang.Class: java.lang.String getSimpleName()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onStop()> to <androidx.appcompat.app.ToolbarActionBar: void setShowHideAnimationEnabled(boolean)>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>($r2) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>
Edge from $r1 = new androidx.fragment.app.strictmode.FragmentStrictMode$Flag in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()>
Edge from virtualinvoke $r7.<android.os.Bundle: void remove(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <android.os.Bundle: void remove(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $i1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getCurrentIndex()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
Edge from $r2 = interfaceinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from $r8 = staticinvoke <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>($r7) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getXml(int)> to <androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($r2, $r1) in <androidx.fragment.app.Fragment: void performViewCreated()> to <androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentStore: void resetActiveFragments()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStore: void resetActiveFragments()>
Edge from staticinvoke <androidx.tracing.Trace: void endSection()>() in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.tracing.Trace: void endSection()>
Edge from $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d15) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double sqrt(double)>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegate: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new value ") in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "declaringFragment.parentFragmentManager") in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r4) in <androidx.fragment.app.Fragment: void performStart()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r1.<androidx.collection.LongSparseArray: void append(long,java.lang.Object)>($l4, $r3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <androidx.collection.LongSparseArray: void append(long,java.lang.Object)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ") in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int getChildCount()>() in <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>
Edge from specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha must be between 0 and 255.") in <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $f1 = staticinvoke <java.lang.Math: float abs(float)>($f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <java.lang.Math: float abs(float)>
Edge from $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable> in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setColor(int)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r4, $i0, $i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP> in <androidx.fragment.app.FragmentActivity: void onStop()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>() in <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()> to <java.lang.Object: java.lang.Object clone()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from specialinvoke r0.<java.lang.Exception: void <init>()>() in <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
Edge from $z1 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()>
Edge from $r9 = virtualinvoke $r8.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>($r1) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>
Edge from $r4 = specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>($r1, null) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)> to <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()>() in <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()> to <android.app.Activity: android.view.Window getWindow()>
Edge from $r1 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r1, null) in <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performPause()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r0) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r2.<android.util.TypedValue: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <android.util.TypedValue: void <init>()>
Edge from $i0 = virtualinvoke $r13.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>($r6, $r9, $i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>
Edge from specialinvoke r28.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r4, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>
Edge from specialinvoke $r3.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r5) in <androidx.fragment.app.Fragment: void performDetach()> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1) in <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>(255) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setAlpha(int)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourceManagerInternal", "Exception while inflating drawable", $r17) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r4 = specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>($r9, $r15) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>
Edge from $r2 = <androidx.appcompat.R$styleable: int[] AppCompatTheme> in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.R$styleable: void <clinit>()>
Edge from $r2 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()> to <android.graphics.Matrix: void <clinit>()>
Edge from virtualinvoke $r2.<com.google.android.material.snackbar.Snackbar: void show()>() in <com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)> to <com.google.android.material.snackbar.Snackbar: void show()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>("setCurrentState") in <androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>
Edge from $r2 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r3 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from specialinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
Edge from virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r0) in <androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r1) in <androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)> to <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>
Edge from specialinvoke $r0.<com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>($r3, $r4, $r1, $r2) in <com.google.android.material.snackbar.Snackbar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x") in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float linearized(int)>($i1) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <androidx.core.content.res.CamUtils: float linearized(int)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0) in <androidx.fragment.app.FragmentManager: void dispatchCreate()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from $z0 = virtualinvoke $r6.<androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)>($r5) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)>
Edge from specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>() in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.util.ConcurrentModificationException: void <init>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r1.<androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()>() in <androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)> to <androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()>
Edge from $r5 = new androidx.fragment.app.Fragment in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r4.<com.example.compatibilitytest.MainActivity4$1: void <init>(com.example.compatibilitytest.MainActivity4)>($r0) in <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity4$1: void <init>(com.example.compatibilitytest.MainActivity4)>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)>
Edge from $r1 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashSet: boolean add(java.lang.Object)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mResourcesImpl") in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from virtualinvoke $r8.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>($r7, $r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
Edge from $r4 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>($r1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void <init>(android.view.ViewGroup)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>($r3, $r1) in <androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> to <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>
Edge from $r0 = <androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY> in <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>($r0, $f0, $f1, $f3, $f2, $f6, $f7, $f8, $z0, $z1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>
Edge from $r11 = virtualinvoke $r10.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState getSavedState(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState getSavedState(java.lang.String)>
Edge from specialinvoke $r3.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)>($r4) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)>
Edge from specialinvoke $r2.<java.util.HashSet: void <init>()>() in <androidx.startup.AppInitializer: void <init>(android.content.Context)> to <java.util.HashSet: void <init>()>
Edge from staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $i1, $f0, $r2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <android.os.Handler: android.os.Looper getLooper()>
Edge from $r14 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f1 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getHue()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: float getHue()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "trimPathOffset", 7, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from virtualinvoke $r4.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>($r3) in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("DETECT_RETAIN_INSTANCE_USAGE", 4) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
Edge from $z0 = virtualinvoke $r1.<com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)>($r2) in <com.google.android.material.snackbar.SnackbarManager: boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r3, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
Edge from virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(null) in <androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from $i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r4, 0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
Edge from specialinvoke $r0.<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>("DESTROYED", 0) in <androidx.lifecycle.Lifecycle$State: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>
Edge from specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r1) in <androidx.fragment.app.FragmentStore: java.util.List getFragments()> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from specialinvoke $r1.<android.graphics.Path: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)> to <android.graphics.Path: void <init>()>
Edge from $r6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r4 = new androidx.fragment.app.Fragment in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r2, $r3, $r1) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)> to <android.graphics.Rect: void <init>(int,int,int,int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from $r4 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>() in <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)>
Edge from virtualinvoke $r5.<java.util.ArrayDeque: void push(java.lang.Object)>($r17) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayDeque: void push(java.lang.Object)>
Edge from virtualinvoke $r1.<android.graphics.Matrix: void mapVectors(float[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <android.graphics.Matrix: void mapVectors(float[])>
Edge from $f0 = staticinvoke <androidx.core.content.res.CamUtils: float yFromInt(int)>($i0) in <androidx.core.content.res.CamUtils: float lStarFromInt(int)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from specialinvoke $r0.<androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)> to <androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>
Edge from $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)> to <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.Fragment$AnimationInfo: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>($r0, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>
Edge from $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
Edge from $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r2.<androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>($r0, $r1) in <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>
Edge from $r2 = virtualinvoke $r1.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r3) in <androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from $r8 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void saveState()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void saveState()>
Edge from specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r5 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>() in <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)> to <android.content.ContextWrapper: android.content.Context getApplicationContext()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()>
Edge from $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void init()>() in <androidx.fragment.app.FragmentActivity: void <init>()> to <androidx.fragment.app.FragmentActivity: void init()>
Edge from $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
Edge from virtualinvoke $r3.<androidx.activity.result.ActivityResultLauncher: void unregister()>() in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.activity.result.ActivityResultRegistry$3: void unregister()>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from $i6 = staticinvoke <android.graphics.Color: int red(int)>($i1) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int red(int)>
Edge from $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: void <clinit>()> to <android.os.Looper: android.os.Looper getMainLooper()>
Edge from specialinvoke $r2.<com.example.compatibilitytest.MainActivity4$2: void <init>(com.example.compatibilitytest.MainActivity4)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <com.example.compatibilitytest.MainActivity4$2: void <init>(com.example.compatibilitytest.MainActivity4)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>($r3, null) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>
Edge from $r4 = interfaceinvoke $r3.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()>
Edge from $r13 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>($r8) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>
Edge from $i2 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>($i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()> to <android.util.SparseArray: int keyAt(int)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android:menu:expandedactionview", $i2) in <androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> to <android.os.Bundle: void putInt(java.lang.String,int)>
Edge from $r13 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>($r6, $i1, $r9) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>
Edge from specialinvoke $r0.<androidx.lifecycle.ViewModel: void onCleared()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()> to <androidx.lifecycle.ViewModel: void onCleared()>
Edge from $r1 = staticinvoke <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)>($r0, $r0) in <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto CREATE_VIEW: ") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>($r4) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <androidx.lifecycle.Lifecycling: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.collection.ArraySet: boolean add(java.lang.Object)>($r2) in <androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)> to <androidx.collection.ArraySet: boolean add(java.lang.Object)>
Edge from $i0 = virtualinvoke $r13.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>($i0, $i1, $r9, $z0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>() in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.lang.Object: int hashCode()>
Edge from $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <java.util.ArrayList: int size()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i0, $r1) in <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>
Edge from $l3 = staticinvoke <java.lang.Math: long round(double)>($d0) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <java.lang.Math: long round(double)>
Edge from specialinvoke $r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: void <init>()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onDestroyView()") in <androidx.fragment.app.Fragment: void performDestroyView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r7.<androidx.collection.ArrayMap: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <androidx.collection.ArrayMap: void <init>()>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)> to <android.util.SparseArray: int size()>
Edge from virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r10) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r3, 0, $i0) in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3) in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $f9 = staticinvoke <java.lang.Math: float abs(float)>($f9) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <java.lang.Math: float abs(float)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r7.<androidx.appcompat.app.ToolbarActionBar$1: void <init>(androidx.appcompat.app.ToolbarActionBar)>($r0) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.app.ToolbarActionBar$1: void <init>(androidx.appcompat.app.ToolbarActionBar)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)> to <androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()> to <kotlin.collections.EmptyIterator: boolean hasNext()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void destroy()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void destroy()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.collections.EmptyIterator: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r7 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>() in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
Edge from $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r2.<android.os.Handler: void <init>()>() in <androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)> to <android.os.Handler: void <init>()>
Edge from virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r2, $i0, $i1, null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)>
Edge from $d17 = staticinvoke <java.lang.Math: double sin(double)>($d17) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double sin(double)>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r5 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from virtualinvoke $r11.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>($z0) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from $r6 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)>($r5) in <androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)> to <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)>
Edge from interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r8) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("TwilightManager", "Failed to get last known location", $r4) in <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)> to <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r10 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)>
Edge from interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r10) in <androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)> to <java.util.HashSet: boolean add(java.lang.Object)>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from $i0 = virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>
Edge from virtualinvoke $r11.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)>
Edge from $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>
Edge from virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r1, $l0) in <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)> to <androidx.appcompat.app.ToolbarActionBar$1: void run()>
Edge from specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "context == null") in <androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)> to <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Activities were started for result for ") in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2) in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1) in <androidx.navigation.NavGraph$Companion$findStartDestination$1: void <init>()> to <kotlin.jvm.internal.Lambda: void <init>(int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.navigation.ui.NavigationUI: void <init>()>() in <androidx.navigation.ui.NavigationUI: void <clinit>()> to <androidx.navigation.ui.NavigationUI: void <init>()>
Edge from $r12 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>($r1) in <androidx.core.app.ActivityCompat$2: void run()> to <androidx.core.app.ActivityRecreator: void <clinit>()>
Edge from specialinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: void <init>(int)>(6) in <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()> to <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: void <init>(int)>
Edge from $i3 = virtualinvoke $r1.<android.graphics.Canvas: int save()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: int save()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onResume()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>") in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(1) in <androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()> to <androidx.appcompat.app.ToolbarActionBar: void setShowHideAnimationEnabled(boolean)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity: void setContentView(int)>(2131427356) in <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)>($r1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)>
Edge from $f6 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getAw()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getAw()>
Edge from $f11 = virtualinvoke $r1.<androidx.core.content.res.CamColor: float getChroma()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: float getChroma()>
Edge from specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called getViewLifecycleOwner() but onCreateView() returned null") in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r10 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.HashSet: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)>($i0, $i2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)>
Edge from $r4 = staticinvoke <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f1, $f2, $f3, $f4, $f0, $f5) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
Edge from $r11 = virtualinvoke $r10.<androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.result.contract.ActivityResultContract: void <init>()> to <java.lang.Object: void <init>()>
Edge from interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $i1 = virtualinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("DETECT_SET_USER_VISIBLE_HINT", 5) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from specialinvoke $r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>($r1) in <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
Edge from $i0 = interfaceinvoke $r1.<java.util.List: int size()>() in <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)> to <java.util.ArrayList: int size()>
Edge from specialinvoke $r0.<androidx.arch.core.executor.TaskExecutor: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor: void <init>()> to <androidx.arch.core.executor.TaskExecutor: void <init>()>
Edge from $i1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r8, $r3, "valueType", 2, 4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r2, $r1, "strokeLineCap", 8, -1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i0) in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>($f0, $i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>
Edge from $r6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3) in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android:support:fragments", $r2) in <androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
Edge from $z0 = specialinvoke $r5.<androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)>($r6, $r8, $r9) in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)>($r1, $r2) in <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.CharSequence)> to <androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)>
Edge from $f0 = virtualinvoke $r3.<android.util.TypedValue: float getFloat()>() in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <android.util.TypedValue: float getFloat()>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VectorDrawableCompat", "parser error", $r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r1 = <androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES> in <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <init>()> to <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <clinit>()>
Edge from specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Transient bottom bar must have non-null content") in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>
Edge from staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)>($r0) in <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)> to <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)>
Edge from $r7 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE> in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not allowed.") in <androidx.startup.InitializationProvider: java.lang.String getType(android.net.Uri)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
Edge from $f7 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getC()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getC()>
Edge from $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() in <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r11 = virtualinvoke $r10.<androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)>($i0) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)>
Edge from specialinvoke $r2.<androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void <init>(androidx.core.view.AccessibilityDelegateCompat)>($r0) in <androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)> to <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void <init>(androidx.core.view.AccessibilityDelegateCompat)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>(255) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setAlpha(int)>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()>() in <androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()> to <androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.graphics.PathParser$ExtractFloatResult: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r0 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()> to <android.graphics.Matrix: void <clinit>()>
Edge from $r8 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r10.<androidx.fragment.app.SpecialEffectsController$1: void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)>($r0, $r8) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$1: void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)>
Edge from $r13 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>($r8) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>
Edge from specialinvoke $r4.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)>($r1, null, $r5, null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)>
Edge from $r2 = virtualinvoke $r1.<android.app.Activity: android.app.FragmentManager getFragmentManager()>() in <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)> to <android.app.Activity: android.app.FragmentManager getFragmentManager()>
Edge from $r1 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Policy violation with PENALTY_DEATH in ", $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation)> to <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)>($r2, $r3, $r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)>
Edge from specialinvoke $r7.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r0, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no event up from ") in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no event up from ") in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: int getDimensionPixelSize(int)>
Edge from specialinvoke r15.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>() in <androidx.activity.OnBackPressedCallback: void <init>(boolean)> to <java.util.concurrent.CopyOnWriteArrayList: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)>
Edge from virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r1) in <androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)> to <java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.Throwable getCause()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r1 = <kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE> in <kotlin.collections.EmptySet: java.util.Iterator iterator()> to <kotlin.collections.EmptyIterator: void <clinit>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2) in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <android.os.Handler: void <init>(android.os.Looper)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ComponentActivity$5: void <init>(androidx.activity.ComponentActivity)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager is already executing transactions") in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from specialinvoke $r2.<androidx.appcompat.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)>($r0, $r3) in <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)> to <androidx.appcompat.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)>
Edge from specialinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r2, $i3, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r0.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)>($i0, $i2, $i1) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)> to <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)>
Edge from interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11) in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)> to <java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <android.graphics.Path: void rLineTo(float,float)>
Edge from specialinvoke $r12.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r14, $r9) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.content.res.ColorStateList: void <init>(int[][],int[])>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initState called for fragment: ") in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $r2 = staticinvoke <kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)>($r1) in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)>
Edge from <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> = $r0 in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <clinit>()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from $i1 = virtualinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r3.<androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: void <init>()>
Edge from $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performResume()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r5) in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
Edge from specialinvoke $r0.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)> to <android.util.AndroidRuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(2) in <androidx.fragment.app.FragmentManager: void dispatchViewCreated()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.ClassesInfoCache: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r4, $r2, $r1, $r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $r6 = virtualinvoke $r2.<androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)>($i1, $r10) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: java.lang.Object parseResult(int,android.content.Intent)>
Edge from $i2 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i1, $i0) in <androidx.collection.ArraySet: int indexOf(java.lang.Object,int)> to <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>
Edge from specialinvoke $r8.<androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal)>($r5, $r1, $r2, $r4) in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal)>
Edge from specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.Error: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from $r5 = virtualinvoke $r4.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SparseArrayCompat: java.lang.Object get(int)>
Edge from $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)> to <java.lang.String: void <clinit>()>
Edge from virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android:user_visible_hint", $z0) in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <android.os.Bundle: void putBoolean(java.lang.String,boolean)>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>
Edge from $r7 = virtualinvoke r14.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from virtualinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto RESTORE_VIEW_STATE: ") in <androidx.fragment.app.Fragment: void restoreViewState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = staticinvoke <android.graphics.Color: int green(int)>($i0) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <android.graphics.Color: int green(int)>
Edge from $r0 = <androidx.core.content.res.CamUtils: float[] WHITE_POINT_D65> in <androidx.core.content.res.CamUtils: int intFromLStar(float)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $r1 = specialinvoke $r2.<androidx.navigation.Navigation: androidx.navigation.NavController getViewNavController(android.view.View)>($r0) in <androidx.navigation.Navigation: androidx.navigation.NavController access$getViewNavController(androidx.navigation.Navigation,android.view.View)> to <androidx.navigation.Navigation: androidx.navigation.NavController getViewNavController(android.view.View)>
Edge from $r1 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4) in <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r1 = staticinvoke <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)> to <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)>
Edge from $r4 = virtualinvoke $r5.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>
Edge from specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()>
Edge from $r8 = virtualinvoke $r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)>
Edge from $i1 = staticinvoke <androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)>($r3, $i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()>
Edge from $d2 = staticinvoke <java.lang.Math: double sin(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from $r5 = <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State GONE> in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from specialinvoke $r0.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)>($i0, $i1) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)> to <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManagerState: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, $r3, $r4, $r1, $r2) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r12.<androidx.activity.ImmLeaksCleaner: void <init>(android.app.Activity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ImmLeaksCleaner: void <init>(android.app.Activity)>
Edge from $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = virtualinvoke $r1.<androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)>($r2, $r3) in <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)> to <androidx.fragment.app.FragmentManager$2: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)>
Edge from $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <android.graphics.Color: int red(int)>
Edge from specialinvoke $r1.<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>($r2, null) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>
Edge from $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <java.lang.Long: java.lang.Long valueOf(long)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)>(1) in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>($r10, 1.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r1 = <androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion> in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <androidx.navigation.NavGraph: void <clinit>()>
Edge from $r1 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)> to <android.graphics.Paint$Join: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
Edge from $r5 = <androidx.appcompat.R$styleable: int[] ActionBar> in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.R$styleable: void <clinit>()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getCurrent()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()> to <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>
Edge from $i2 = virtualinvoke $r12.<android.content.res.ColorStateList: int getDefaultColor()>() in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.content.res.ColorStateList: int getDefaultColor()>
Edge from staticinvoke <com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)>($r1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.internal.ThemeEnforcement: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1) in <androidx.startup.StartupException: void <init>(java.lang.Throwable)> to <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("DETECT_WRONG_FRAGMENT_CONTAINER", 7) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void saveState()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void saveState()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void attach()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void attach()>
Edge from $r3 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3) in <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()> to <androidx.navigation.NavGraph$Companion$findStartDestination$1: java.lang.Object invoke(java.lang.Object)>
Edge from $r1 = virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()> to <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from $r9 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($r2, $l1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>
Edge from $r2 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)>($r3, $r0, $r1, $i0, 1.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl: void <init>()>() in <androidx.fragment.app.Fragment: void <init>()> to <androidx.fragment.app.FragmentManagerImpl: void <init>()>
Edge from <androidx.appcompat.view.menu.MenuBuilder: int[] sCategoryToOrder> = $r0 in <androidx.appcompat.view.menu.MenuBuilder: void <clinit>()> to <androidx.appcompat.view.menu.MenuBuilder: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $i0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()> to <android.graphics.drawable.Drawable: int getChangingConfigurations()>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from $r7 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i0) in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.startup.AppInitializer: void <init>(android.content.Context)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r2.<java.util.HashMap: void <init>()>() in <androidx.activity.result.ActivityResultRegistry: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>() in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.util.ConcurrentModificationException: void <init>()>
Edge from virtualinvoke $r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()>() in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()>
Edge from interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r10) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from staticinvoke <androidx.tracing.Trace: void endSection()>() in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.tracing.Trace: void endSection()>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)> to <kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>($r7) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>
Edge from specialinvoke $r5.<android.graphics.Paint: void <init>(android.graphics.Paint)>($r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.Paint: void <init>(android.graphics.Paint)>
Edge from virtualinvoke $r8.<android.graphics.Path: void reset()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void reset()>
Edge from $r1 = <androidx.collection.ContainerHelpers: int[] EMPTY_INTS> in <androidx.collection.SimpleArrayMap: void <init>(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from specialinvoke $r3.<androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>("INVISIBLE", 3) in <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r0.<android.graphics.Path: void moveTo(float,float)>($f0, $f1) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void moveTo(float,float)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r9, 1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
Edge from $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from $r0 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i0) in <androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
Edge from $r5 = virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object pollFirst()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.util.ArrayDeque: java.lang.Object pollFirst()>
Edge from $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)>
Edge from $z0 = virtualinvoke $r7.<android.graphics.PathMeasure: boolean nextContour()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.graphics.PathMeasure: boolean nextContour()>
Edge from $r7 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <android.os.Looper: android.os.Looper myLooper()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$9: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()>
Edge from $i0 = staticinvoke <androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)>($r3, $r0, $i0, $r2) in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)>
Edge from $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void reportBackStackChanged()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: void reportBackStackChanged()>
Edge from $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml") in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <java.lang.String: boolean endsWith(java.lang.String)>
Edge from specialinvoke r16.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)>($r13) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r1) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "translateY", 7, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>() in <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.Configuration getConfiguration()>
Edge from specialinvoke $r3.<androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)>($i0) in <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)>
Edge from $r2 = virtualinvoke $r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>() in <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
Edge from $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was not found in the set of active Fragments ") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <java.lang.Math: double sqrt(double)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No IntentSenders were started for ") in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r3.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>($i1, $r4) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)> to <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>
Edge from specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $r0 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>() in <androidx.appcompat.widget.AppCompatDrawableManager: void preload()> to <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>
Edge from $i0 = virtualinvoke $r4.<android.content.res.ColorStateList: int getDefaultColor()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <android.content.res.ColorStateList: int getDefaultColor()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r3.<androidx.startup.StartupException: void <init>(java.lang.String)>("Context cannot be null") in <androidx.startup.InitializationProvider: boolean onCreate()> to <androidx.startup.StartupException: void <init>(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.NavGraph$Companion: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>
Edge from $r6 = new android.os.Bundle in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <android.os.Bundle: void <clinit>()>
Edge from virtualinvoke $r7.<androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)>($r0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)> to <androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ComponentActivity$6: void <init>(androidx.activity.ComponentActivity)> to <java.lang.Object: void <init>()>
Edge from $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getLifecycle() returned null in ComponentActivity\'s constructor. Please make sure you are lazily constructing your Lifecycle in the first call to getLifecycle() rather than relying on field initialization.") in <androidx.activity.ComponentActivity: void <init>()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()>
Edge from $r1 = staticinvoke <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>($r0) in <androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()> to <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>($z0, 1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $z0 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r9) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>
Edge from $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0) in <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()>() in <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()>
Edge from virtualinvoke $r2.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("android:support:lifecycle", $r1) in <androidx.fragment.app.FragmentActivity: void init()> to <androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$5: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void <init>()>() in <com.example.compatibilitytest.MainActivity2: void <init>()> to <androidx.appcompat.app.AppCompatActivity: void <init>()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping pending result for request ") in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $l3 = staticinvoke <java.lang.Math: long round(double)>($d1) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <java.lang.Math: long round(double)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentState$1: void <init>()>() in <androidx.fragment.app.FragmentState: void <clinit>()> to <androidx.fragment.app.FragmentState$1: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from specialinvoke $r7.<androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <init>()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onStop()> to <androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)>
Edge from specialinvoke $r5.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "endX", $i0, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke r10.<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
Edge from virtualinvoke $r0.<androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r4, $r2) in <androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()>
Edge from $r6 = new androidx.collection.LongSparseArray in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <androidx.collection.LongSparseArray: void <clinit>()>
Edge from $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <android.graphics.drawable.Drawable: int getChangingConfigurations()>
Edge from $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r4.<androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: void <init>()>
Edge from $r10 = virtualinvoke $r9.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)>($r7) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)>
Edge from $d15 = staticinvoke <java.lang.Math: double cos(double)>($d5) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double cos(double)>
Edge from $f4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "centerX", $i0, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(1) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4) in <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r0.<java.lang.Object: void wait()>() in <androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()> to <java.lang.Object: void wait()>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()>
Edge from $z0 = virtualinvoke $r0.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r1) in <androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)> to <androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>
Edge from $r2 = virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from virtualinvoke $r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("KEY_COMPONENT_ACTIVITY_RANDOM_OBJECT", $r9) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void onStart()> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from specialinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>($z0) in <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>
Edge from staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)>($r11, $f0, $i1, $i2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown interpolator name: ") in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from virtualinvoke $r4.<androidx.appcompat.app.ActionBar: void onDestroy()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.ActionBar: void onDestroy()>
Edge from $z0 = specialinvoke $r0.<com.google.android.material.snackbar.SnackbarManager: boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)>($r2) in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager: boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i1) in <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: added (") in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = staticinvoke <androidx.core.content.res.CamColor: int toColor(float,float,float)>($f0, $f2, $f1) in <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)> to <androidx.core.content.res.CamColor: int toColor(float,float,float)>
Edge from $r1 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)>($i1) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from $r2 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>() in <androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()> to <androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()>
Edge from <androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET> = $r0 in <androidx.appcompat.widget.DrawableUtils: void <clinit>()> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $r0 = <kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE> in <kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()> to <kotlin.collections.EmptySet: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)>($f2, $f0, $f1, $r0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)>
Edge from $r4 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>($r3) in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>
Edge from $r15 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r17) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from <androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR> = $r0 in <androidx.fragment.app.FragmentState: void <clinit>()> to <androidx.fragment.app.FragmentState: void <clinit>()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r1) in <androidx.fragment.app.SpecialEffectsController$Operation: void cancel()> to <java.util.ArrayList: void <init>(java.util.Collection)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)>($r2) in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)>
Edge from specialinvoke r15.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r8) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread of fragment host") in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)>($r3, 5, 6) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)>
Edge from $r5 = <androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.fragment.app.FragmentStateManager$2: void <clinit>()>
Edge from virtualinvoke $r3.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)> to <androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>
Edge from virtualinvoke $r13.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()> to <android.graphics.drawable.Drawable: int getMinimumHeight()>
Edge from $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.SimpleArrayMap: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forceSetFactory2 could not set the Factory2 on LayoutInflater ") in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z1 = interfaceinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback: boolean onPreparePanel(int)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)> to <androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback: boolean onPreparePanel(int)>
Edge from $r7 = virtualinvoke $r0.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()>() in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()>
Edge from $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r3.<androidx.lifecycle.MethodCallsLogger: void <init>()>() in <androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.MethodCallsLogger: void <init>()>
Edge from $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>() in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)> to <java.util.ArrayList: boolean isEmpty()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME> in <androidx.fragment.app.FragmentActivity: void onResumeFragments()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>
Edge from specialinvoke $r5.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $r9 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r3 = interfaceinvoke $r2.<androidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()>() in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>($i0) in <androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> to <androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>
Edge from $r1 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r15 = virtualinvoke $r14.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0$androidx-fragment-app-FragmentActivity()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, $r2) in <androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()> to <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void onStop()>() in <androidx.appcompat.app.AppCompatActivity: void onStop()> to <androidx.fragment.app.FragmentActivity: void onStop()>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <java.lang.StringBuilder: void <init>()>
Edge from $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: boolean checkForMenus()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r5 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>($r0, $r1, $r2, $r4, 1.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>
Edge from $r5 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from specialinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.ViewModel: void <init>()> to <java.util.HashMap: void <init>()>
Edge from specialinvoke $r12.<android.util.SparseArray: void <init>(int)>($i1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.util.SparseArray: void <init>(int)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)>(108) in <androidx.appcompat.app.AppCompatDelegateImpl$2: void run()> to <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()>() in <androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()> to <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()>() in <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>
Edge from $r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>()> to <android.graphics.Paint$Cap: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("animated-vector", $r2) in <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)> to <androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>
Edge from specialinvoke $r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1) in <androidx.navigation.Navigation$findViewNavController$2: void <init>()> to <kotlin.jvm.internal.Lambda: void <init>(int)>
Edge from $r1 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>($r0, $r9, $r11, $r10) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r2 = new androidx.appcompat.app.AppCompatDelegateImpl in <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from $r1 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float[] getRgbD()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float[] getRgbD()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)>($r5) in <androidx.fragment.app.FragmentStateManager: void create()> to <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $z0 = virtualinvoke $r8.<android.app.Activity: boolean isChangingConfigurations()>() in <androidx.fragment.app.FragmentStateManager: void destroy()> to <android.app.Activity: boolean isChangingConfigurations()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>("handleLifecycleEvent") in <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManagerState$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r18) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: boolean addAll(java.util.Collection)>
Edge from specialinvoke $r2.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r4 = staticinvoke <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>
Edge from $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r3, $r4, $r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from $r7 = new android.os.Bundle in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)> to <android.os.Bundle: void <clinit>()>
Edge from $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from specialinvoke $r0.<androidx.collection.ArraySet: void allocArrays(int)>($i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <androidx.collection.ArraySet: void allocArrays(int)>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>($r8) in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>
Edge from interfaceinvoke $r1.<androidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)>($r2) in <androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)> to <androidx.activity.ComponentActivity$7: void onContextAvailable(android.content.Context)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3) in <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r3.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r0, 1) in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r2, $r1, 0) in <androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.9) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()> to <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void pause()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r2) in <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "configuration") in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i1) in <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)> to <java.lang.System: void <clinit>()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $d2 = staticinvoke <java.lang.Math: double sin(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <java.util.ArrayList: void <init>()>
Edge from $r7 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r6) in <androidx.fragment.app.FragmentManager: void <init>()> to <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()>
Edge from $r8 = <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from specialinvoke $r3.<androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void <init>()>() in <androidx.core.view.ViewCompat: void <clinit>()> to <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void <init>()>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)>($r1, $r2) in <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void run()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from specialinvoke $r5.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.Matrix: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)>($r7) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)>
Edge from $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from $r10 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)>($r2) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)>
Edge from $i0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: java.lang.String getResourceName(int)> to <androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)>
Edge from specialinvoke $r23.<java.io.PrintWriter: void <init>(java.io.Writer)>($r22) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.io.PrintWriter: void <init>(java.io.Writer)>
Edge from specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlY1 attribute") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <android.view.InflateException: void <init>(java.lang.String)>
Edge from $r3 = interfaceinvoke $r4.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r15) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void dispatchViewCreated()>() in <androidx.fragment.app.Fragment: void performViewCreated()> to <androidx.fragment.app.FragmentManager: void dispatchViewCreated()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r1) in <androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to add fragment ") in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i4 = virtualinvoke $r3.<android.graphics.Rect: int width()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Rect: int width()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>
Edge from $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $z0 = virtualinvoke $r8.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>() in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>
Edge from virtualinvoke $r8.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>
Edge from $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $r5 = virtualinvoke $r3.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <androidx.tracing.Trace: boolean isEnabledFallback()> to <java.lang.Long: void <clinit>()>
Edge from $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from $r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.TransformingSequence: java.util.Iterator iterator()>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r3, $i2, $i3) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r8 = virtualinvoke $r6.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5) in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from interfaceinvoke $r1.<androidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)>($r2) in <androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)> to <androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)>
Edge from $r7 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>($i0) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)>
Edge from interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($r1) in <androidx.appcompat.app.ToolbarActionBar: void setWindowTitle(java.lang.CharSequence)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)>
Edge from virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: void jumpToCurrentState()>
Edge from specialinvoke $r0.<androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>($r1) in <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)> to <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)>(null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.StateListDrawable: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)>
Edge from specialinvoke $r14.<com.google.android.material.snackbar.BaseTransientBottomBar$3: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>($r0) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.snackbar.BaseTransientBottomBar$3: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
Edge from interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4) in <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r2) in <com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)> to <android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
Edge from $r0 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getScaledScrollFactor", $r3) in <androidx.core.view.ViewConfigurationCompat: void <clinit>()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.contextaware.ContextAwareHelper: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>($f1, $r3, null) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
Edge from $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("FragmentManager", $i0) in <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)> to <android.util.Log: boolean isLoggable(java.lang.String,int)>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
Edge from $d4 = staticinvoke <java.lang.Math: double sin(double)>($d4) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.internal.SafeIterableMap$ListIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)> to <java.lang.Object: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: android.view.View findViewById(int)>($i0) in <androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from $r6 = virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r1 = <androidx.collection.ContainerHelpers: int[] EMPTY_INTS> in <androidx.collection.SparseArrayCompat: void <init>(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $r3 = staticinvoke <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)>($r2) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)>
Edge from $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r5, $r4, "value", 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>($r1, null, $r0) in <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>
Edge from $r0 = <androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE> in <androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r5, 0, $i3) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentLayoutInflaterFactory: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentLayoutInflaterFactory: void <init>(androidx.fragment.app.FragmentManager)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void forcePostponedTransactions()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: void forcePostponedTransactions()>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.graphics.PathParser$PathDataNode: void <init>(androidx.core.graphics.PathParser$PathDataNode)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setLevel(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean setLevel(int)>
Edge from virtualinvoke $r2.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>
Edge from $r1 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()> to <android.graphics.Matrix: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getLayoutDirection()>() in <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int getLayoutDirection()>
Edge from $r0 = staticinvoke <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)> to <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
Edge from $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)> to <android.graphics.Rect: void set(int,int,int,int)>
Edge from $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r3) in <androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>
Edge from $i0 = virtualinvoke $r3.<android.graphics.Rect: int height()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Rect: int height()>
Edge from $i0 = staticinvoke <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)>($r1) in <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)>
Edge from $i0 = specialinvoke $r0.<com.google.android.material.snackbar.BaseTransientBottomBar: int getDuration()>() in <com.google.android.material.snackbar.Snackbar: int getDuration()> to <com.google.android.material.snackbar.BaseTransientBottomBar: int getDuration()>
Edge from interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7) in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r2 = <androidx.lifecycle.LiveData: java.lang.Object NOT_SET> in <androidx.lifecycle.LiveData: void <init>()> to <androidx.lifecycle.LiveData: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity2: android.view.LayoutInflater getLayoutInflater()>() in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()>
Edge from specialinvoke $r0.<kotlin.sequences.EmptySequence: void <init>()>() in <kotlin.sequences.EmptySequence: void <clinit>()> to <kotlin.sequences.EmptySequence: void <init>()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()>
Edge from specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> to <java.lang.Exception: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()>() in <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)> to <androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void checkStateLoss()>() in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <androidx.fragment.app.FragmentManager: void checkStateLoss()>
Edge from $r1 = specialinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0) in <androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableCanonical(int)> to <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealByteArraySize(int)>($i0) in <androidx.collection.ContainerHelpers: int idealLongArraySize(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $r2 = virtualinvoke $r0.<com.example.compatibilitytest.MainActivity4: android.view.View findViewById(int)>(2131230825) in <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
Edge from $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "trimPathEnd", 6, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isAssignableFrom(java.lang.Class)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>() in <androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()> to <java.lang.Object: java.lang.Object clone()>
Edge from $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i0) in <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)> to <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>()>
Edge from $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean isAutoMirrored()>() in <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing non-config state for saved state of Fragment ") in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i2 = staticinvoke <androidx.core.math.MathUtils: int clamp(int,int,int)>($i2, 0, 255) in <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)> to <androidx.core.math.MathUtils: int clamp(int,int,int)>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $r0 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()>() in <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()>
Edge from $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r2) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $f0 = staticinvoke <java.lang.Math: float signum(float)>($f0) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float signum(float)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $z0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()>
Edge from specialinvoke r14.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r8) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
Edge from $i0 = staticinvoke <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)>($f2, $f0, $f1, $r0) in <androidx.core.content.res.CamColor: int toColor(float,float,float)> to <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)>
Edge from $r10 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $z0 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchResume()>() in <androidx.fragment.app.FragmentController: void dispatchResume()> to <androidx.fragment.app.FragmentManager: void dispatchResume()>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r5.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)>($r4) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7) in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <kotlin.collections.EmptySet: boolean contains(java.lang.Object)>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $r4 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>($r3, $i1, 5, 6, "") in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>
Edge from specialinvoke r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: void setRepeatCount(int)>($i3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: void setRepeatCount(int)>
Edge from $r2 = staticinvoke <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>($r1, "Replace with your own action", 0) in <com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)> to <com.google.android.material.snackbar.Snackbar: void <clinit>()>
Edge from <java.lang.Integer: java.lang.Class TYPE> = null in <java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
Edge from $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from virtualinvoke $r1.<androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)>($r0, $r2) in <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up state of never attached fragment: ") in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)>($r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostResume()>
Edge from $r2 = staticinvoke <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>($r1) in <androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)> to <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<java.util.WeakHashMap: void <init>(int)>(0) in <androidx.core.content.res.ResourcesCompat: void <clinit>()> to <java.util.WeakHashMap: void <init>(int)>
Edge from $r4 = new android.content.res.Configuration in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)> to <android.content.res.Configuration: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r1.<androidx.savedstate.SavedStateRegistryController: void <init>(androidx.savedstate.SavedStateRegistryOwner)>($r0) in <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)> to <androidx.savedstate.SavedStateRegistryController: void <init>(androidx.savedstate.SavedStateRegistryOwner)>
Edge from $r2 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <clinit>()>
Edge from $r2 = new androidx.core.graphics.drawable.WrappedDrawableApi14 in <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void <clinit>()>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>($r0) in <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)> to <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>
Edge from $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)> to <java.util.HashSet: java.util.Iterator iterator()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No instantiated fragment for (") in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>($r2, $r3, $r4) in <androidx.appcompat.widget.ResourcesWrapper: void <init>(android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()>
Edge from specialinvoke $r2.<androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>("GONE", 2) in <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <init>(java.lang.String,int)>
Edge from staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)>($r0, $d0, $d2, $d5, $d7, $d4, $d6, $d1, $d8, $d9) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)>
Edge from virtualinvoke $r1.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>($r3) in <com.google.android.material.snackbar.SnackbarManager: boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)> to <android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
Edge from $r3 = <java.lang.Boolean: java.lang.Class TYPE> in <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)> to <java.lang.Boolean: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0: void <init>(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController$Operation: void complete()>() in <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete()> to <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>() in <androidx.fragment.app.FragmentActivity: void onResume()> to <androidx.fragment.app.FragmentController: void noteStateNotSaved()>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from virtualinvoke $r3.<androidx.activity.result.ActivityResultLauncher: void unregister()>() in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.activity.result.ActivityResultRegistry$3: void unregister()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setDither(boolean)>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()> to <androidx.appcompat.app.ToolbarActionBar: android.content.Context getThemedContext()>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r4, $r5, $r1, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r1.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>() in <androidx.activity.contextaware.ContextAwareHelper: void <init>()> to <java.util.concurrent.CopyOnWriteArraySet: void <init>()>
Edge from virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l2) in <com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)> to <android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
Edge from $r10 = staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r4, $r5, $r1, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i2, $i3) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>($f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rLineTo(float,float)>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r3) in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <android.os.Handler: boolean post(java.lang.Runnable)>
Edge from virtualinvoke $r2.<android.animation.Animator: void setTarget(java.lang.Object)>($r3) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <android.animation.AnimatorSet: void setTarget(java.lang.Object)>
Edge from virtualinvoke $r2.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r1) in <androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)> to <java.util.ArrayDeque: boolean add(java.lang.Object)>
Edge from virtualinvoke $r13.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
Edge from $r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)> to <android.util.Xml: void <clinit>()>
Edge from $r5 = virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)> to <androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 1) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void setTheme(int)>($i0) in <androidx.appcompat.app.AppCompatActivity: void setTheme(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)>
Edge from $i0 = virtualinvoke $r5.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)> to <java.lang.Enum: int ordinal()>
Edge from $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, $f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)>($r1, $r3) in <androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)> to <kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)>
Edge from $r2 = staticinvoke <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)> to <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <java.lang.StringBuilder: void <init>()>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r1, $r13) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.os.BuildCompat: boolean isAtLeastS()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r2 = new androidx.core.view.AccessibilityDelegateCompat in <androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)> to <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r3, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from specialinvoke $r0.<androidx.navigation.Navigation$findViewNavController$2: void <init>()>() in <androidx.navigation.Navigation$findViewNavController$2: void <clinit>()> to <androidx.navigation.Navigation$findViewNavController$2: void <init>()>
Edge from $r1 = specialinvoke $r0.<androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>() in <androidx.fragment.app.FragmentManager: void forcePostponedTransactions()> to <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()") in <androidx.fragment.app.Fragment: void performPause()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)> to <java.util.HashMap: void <init>()>
Edge from $r2 = <java.lang.Integer: java.lang.Class TYPE> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)> to <java.lang.Integer: void <clinit>()>
Edge from $r1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()>
Edge from $r6 = staticinvoke <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)>($r0, 2131231032) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)>
Edge from specialinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6) in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i4, $r4, $i2, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ClassesInfoCache: void <init>()> to <java.lang.Object: void <init>()>
Edge from <androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap> = $r0 in <androidx.fragment.app.FragmentFactory: void <clinit>()> to <androidx.fragment.app.FragmentFactory: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from staticinvoke <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>("isTagEnabled", $r9) in <androidx.tracing.Trace: boolean isEnabledFallback()> to <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("taskName", "task1") in <com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)> to <android.os.Bundle: void putString(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r19) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke r22.<androidx.appcompat.app.AppCompatDelegateImpl$3: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl$3: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()>
Edge from $i0 = virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>
Edge from $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MyService: void me2()>() in <com.example.compatibilitytest.MyService: void me1()> to <com.example.compatibilitytest.MyService: void me2()>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)> to <android.text.TextUtils: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<java.util.LinkedHashMap: boolean isEmpty()>() in <androidx.collection.LruCache: void trimToSize(int)> to <java.util.LinkedHashMap: boolean isEmpty()>
Edge from virtualinvoke $r2.<androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>($r1) in <androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)> to <androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()>
Edge from specialinvoke $r0.<com.google.android.material.snackbar.SnackbarManager: void showNextSnackbarLocked()>() in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager: void showNextSnackbarLocked()>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MyService: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: com.example.compatibilitytest.MyService dummyMainMethod_com_example_compatibilitytest_MyService(android.content.Intent)> to <com.example.compatibilitytest.MyService: android.os.IBinder onBind(android.content.Intent)>
Edge from specialinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>
Edge from interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1) in <androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)> to <java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>
Edge from specialinvoke $r1.<androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>("DETECT_TARGET_FRAGMENT_USAGE", 6) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <clinit>()> to <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)>
Edge from specialinvoke $r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r1, $r2) in <androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> to <android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
Edge from $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $r9 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path$FillType: void <clinit>()>
Edge from $r3 = virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)>
Edge from $r3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.core.content.ContextCompat: void <clinit>()>
Edge from $r9 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path$FillType: void <clinit>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (index ") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = virtualinvoke $r3.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android:user_visible_hint", 1) in <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)> to <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)> to <java.util.ArrayList: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i2, $i3) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void create()> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, 0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
Edge from specialinvoke $r0.<androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>($r2) in <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)> to <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>
Edge from $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void detach()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $r16 = virtualinvoke $r15.<android.content.Context: java.lang.ClassLoader getClassLoader()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)>($i0) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping pending result for request ") in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r2.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_RESUME", 2) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.4000000953674316) in <androidx.core.content.res.CamUtils: float linearized(int)> to <java.lang.Math: double pow(double,double)>
Edge from $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)> to <java.lang.Integer: void <clinit>()>
Edge from $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0) in <androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)> to <java.lang.String: char charAt(int)>
Edge from $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)> to <java.lang.Object: java.lang.Class getClass()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r5, $r3, $r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r3.<androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)>($r1) in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performStart()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2) in <androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from $r11 = staticinvoke <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)>($r13) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>() in <androidx.fragment.app.FragmentActivity: void onStop()> to <androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>
Edge from virtualinvoke $r2.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("androidx:appcompat", $r1) in <androidx.appcompat.app.AppCompatActivity: void initDelegate()> to <androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.CamColor: void <init>(float,float,float,float,float,float,float,float,float)> to <java.lang.Object: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)>
Edge from virtualinvoke $r12.<android.graphics.drawable.LayerDrawable: void setId(int,int)>(2, 16908301) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void setId(int,int)>
Edge from specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path should be continuous, can\'t have 2+ contours") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r13) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
Edge from specialinvoke $r1.<android.graphics.Rect: void <init>()>() in <androidx.appcompat.widget.DrawableUtils: void <clinit>()> to <android.graphics.Rect: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchStop()>() in <androidx.fragment.app.Fragment: void performStop()> to <androidx.fragment.app.FragmentManager: void dispatchStop()>
Edge from virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()>
Edge from virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5) in <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity4: void setContentView(int)>(2131427359) in <com.example.compatibilitytest.MainActivity4: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>
Edge from $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mDrawableCache") in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NullPointerException: void <init>()> to <java.lang.RuntimeException: void <init>()>
Edge from $r3 = <java.lang.Integer: java.lang.Class TYPE> in <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)> to <java.lang.Integer: void <clinit>()>
Edge from virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchPause()>() in <androidx.fragment.app.Fragment: void performPause()> to <androidx.fragment.app.FragmentManager: void dispatchPause()>
Edge from $z0 = virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i4, $r4, $i2, $i5) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)> to <java.util.ArrayList: void <init>()>
Edge from interfaceinvoke $r5.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)> to <android.graphics.Paint$Cap: void <clinit>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r1 = staticinvoke <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)>($r1, 0, $i1) in <androidx.core.graphics.PathParser$PathDataNode: void <init>(androidx.core.graphics.PathParser$PathDataNode)> to <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)>
Edge from specialinvoke $r10.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from $r5 = <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance> in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.ClassesInfoCache: void <clinit>()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onDetach()") in <androidx.fragment.app.Fragment: void performDetach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r8 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>() in <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()> to <androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>
Edge from specialinvoke r13.<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>(r14) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>
Edge from $r9 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <androidx.collection.LruCache: void trimToSize(int)> to <java.lang.Object: java.lang.Class getClass()>
Edge from $f0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getChroma()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: float getChroma()>
Edge from $r8 = virtualinvoke $r7.<android.os.Bundle: java.lang.Object clone()>() in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: java.lang.Object clone()>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding fragment (") in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = new android.graphics.Rect in <androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)> to <android.graphics.Rect: void <clinit>()>
Edge from virtualinvoke $r3.<com.example.compatibilitytest.MainActivity3: void startActivity(android.content.Intent)>($r2) in <com.example.compatibilitytest.MainActivity3$2: void onClick(android.view.View)> to <android.app.Activity: void startActivity(android.content.Intent)>
Edge from $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED> in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window") in <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.collection.LruCache: void trimToSize(int)>($i0) in <androidx.collection.LruCache: java.lang.Object get(java.lang.Object)> to <androidx.collection.LruCache: void trimToSize(int)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()>
Edge from $z0 = interfaceinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>($r3, $i0, $r1) in <androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "activity") in <androidx.navigation.ui.NavigationUI: void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r1 = <androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES> in <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <init>()> to <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, $r3, $r4, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()>
Edge from virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $r4 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>
Edge from $r2 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float[] getRgbD()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float[] getRgbD()>
Edge from specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: void <init>()>() in <androidx.lifecycle.ClassesInfoCache: void <clinit>()> to <androidx.lifecycle.ClassesInfoCache: void <init>()>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($r5) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r3, "viewportHeight", 8, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from virtualinvoke $r1.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r0) in <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()> to <androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean isAutoMirrored()>() in <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()>
Edge from virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>() in <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)> to <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>
Edge from specialinvoke r16.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r2, r17) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)> to <androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke r19.<java.util.HashSet: void <init>()>() in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <java.util.HashSet: void <init>()>
Edge from specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>() in <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: void <init>()> to <androidx.activity.result.contract.ActivityResultContract: void <init>()>
Edge from specialinvoke $r11.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r8) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
Edge from $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r2) in <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)> to <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TwilightManager", "Could not get last known location. This is probably because the app does not have any location permissions. Falling back to hardcoded sunrise/sunset values.") in <androidx.appcompat.app.TwilightManager: boolean isNight()> to <android.util.Log: int i(java.lang.String,java.lang.String)>
Edge from $r0 = <kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE> in <kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()> to <kotlin.collections.EmptyMap: void <clinit>()>
Edge from $r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4) in <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>
Edge from $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r4) in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from virtualinvoke $r1.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentManager: void cleanupExec()> to <java.util.ArrayList: void clear()>
Edge from specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r0) in <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
Edge from $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performDestroy()> to <java.lang.StringBuilder: void <init>()>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SCREEN> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from staticinvoke <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>($r0) in <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.String: java.lang.String substring(int)>
Edge from $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.ActivityThread") in <androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()> to <java.lang.Class: java.lang.Class forName(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ") in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.ContextCompat: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r15.<androidx.activity.ComponentActivity$7: void <init>(androidx.activity.ComponentActivity)>($r0) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.activity.ComponentActivity$7: void <init>(androidx.activity.ComponentActivity)>
Edge from $r9 = virtualinvoke $r8.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>($r1) in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2) in <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)> to <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>() in <androidx.fragment.app.FragmentStore: java.util.List getFragments()> to <java.util.Collections: void <clinit>()>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>
Edge from specialinvoke $r0.<kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()>() in <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()> to <kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()>
Edge from virtualinvoke $r17.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>($r7, $r1, $r2, $r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: back stack #") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
Edge from $r7 = virtualinvoke r14.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r1) in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from $r3 = staticinvoke <androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()>() in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void createView()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r8.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>
Edge from $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
Edge from $r24 = virtualinvoke $r20.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r23, r29, r30) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>
Edge from specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r3) in <androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>() in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.lang.Class: java.lang.String getName()>
Edge from $r2 = new androidx.fragment.app.FragmentManagerViewModel in <androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)> to <androidx.fragment.app.FragmentManagerViewModel: void <clinit>()>
Edge from virtualinvoke $r3.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r1) in <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)> to <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)>($r1, $r5) in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)>
Edge from specialinvoke r10.<java.util.ArrayList: void <init>()>() in <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)> to <java.util.ArrayList: void <init>()>
Edge from $r10 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>($r9, $r0) in <androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>
Edge from $r4 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>() in <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>
Edge from $r2 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.activity.OnBackPressedCallback: void remove()> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r0 = staticinvoke <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>($r1, null, 0) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding inflate(android.view.LayoutInflater)> to <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
Edge from virtualinvoke $r9.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
Edge from $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>() in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)> to <java.lang.Class: java.lang.String getCanonicalName()>
Edge from $i0 = staticinvoke <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>($r1, $r0, $r2) in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>
Edge from $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()>
Edge from $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void <init>()>() in <com.example.compatibilitytest.MainActivity4: void <init>()> to <androidx.appcompat.app.AppCompatActivity: void <init>()>
Edge from $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>($r3, $i0, 1) in <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>
Edge from specialinvoke $r0.<androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)> to <androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>
Edge from $i0 = virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()>
Edge from $r6 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE> in <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>() in <androidx.fragment.app.FragmentStore: java.util.List getFragments()> to <java.util.ArrayList: boolean isEmpty()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()> to <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentFactory: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $i0 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <java.lang.Enum: int ordinal()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()>
Edge from $r2 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)>($r3) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)>
Edge from specialinvoke r14.<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
Edge from specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $r1 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() in <androidx.fragment.app.Fragment: void <init>()> to <java.util.UUID: java.util.UUID randomUUID()>
Edge from $i0 = staticinvoke <androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)>($r0) in <androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)> to <androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)>
Edge from virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)>($r3) in <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float)>($f1, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()> to <android.graphics.Matrix: boolean postScale(float,float)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.ActionBar: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.appcompat.app.ActionBar: void <init>()>
Edge from $z2 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()>
Edge from specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)> to <android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)>
Edge from $r0 = new androidx.vectordrawable.graphics.drawable.ArgbEvaluator in <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <clinit>()> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <clinit>()>
Edge from $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED> in <androidx.fragment.app.Fragment: void <init>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>() in <androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()> to <java.lang.ThreadLocal: java.lang.Object get()>
Edge from specialinvoke $r6.<java.util.HashMap: void <init>()>() in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.util.HashMap: void <init>()>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from $f5 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getFl()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getFl()>
Edge from $r2 = virtualinvoke $r2.<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)>("Action", null) in <com.example.compatibilitytest.MainActivity2$1: void onClick(android.view.View)> to <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)>
Edge from virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)>($r2) in <androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)> to <androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)>
Edge from $i1 = staticinvoke <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)>($r0, $i0, $r1, $r2) in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)>
Edge from specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from specialinvoke $r6.<androidx.fragment.app.Fragment: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.fragment.app.Fragment: void <init>()>
Edge from $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>() in <androidx.fragment.app.FragmentManager$2: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from $i2 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i1, $i0) in <androidx.collection.ArraySet: int indexOf(java.lang.Object,int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r1 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.Class: java.lang.ClassLoader getClassLoader()>
Edge from $i2 = virtualinvoke $r3.<android.graphics.Rect: int height()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Rect: int height()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
Edge from specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.collections.EmptyIterator: boolean hasNext()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r4, $i0, $i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void <clinit>()>
Edge from specialinvoke $r7.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r0, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($r1, $r2) in <androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)> to <androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>
Edge from $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r1) in <androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from $r1 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>() in <com.example.compatibilitytest.MyService: void me3()> to <java.net.URL: java.net.URLConnection openConnection()>
Edge from specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <java.util.ArrayList: void <init>()>
Edge from $r2 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
Edge from specialinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r1.<androidx.fragment.app.FragmentManagerImpl: void <init>()>() in <androidx.fragment.app.Fragment: void initState()> to <androidx.fragment.app.FragmentManagerImpl: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(0) in <androidx.fragment.app.FragmentManager: void dispatchAttach()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r0, 1) in <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)> to <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Map getMAllowedViolations$fragment_release()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)> to <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Map getMAllowedViolations$fragment_release()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.startup.AppInitializer: void <clinit>()> to <java.lang.Object: void <init>()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r0, $r2, $r1) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: void <init>()>
Edge from $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>
Edge from $r2 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>() in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)> to <android.content.ContextWrapper: android.content.Context getApplicationContext()>
Edge from virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r3) in <androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: int size()>
Edge from $z0 = interfaceinvoke $r3.<android.view.Window$Callback: boolean onCreatePanelMenu(int,android.view.Menu)>(0, $r1) in <androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()> to <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)>
Edge from $r1 = <androidx.collection.ArraySet: int[] INT> in <androidx.collection.ArraySet: void <init>(int)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <java.lang.Integer: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)> to <java.lang.Object: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i2, $i3) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.System: void <clinit>()>
Edge from specialinvoke $r2.<androidx.fragment.app.DefaultSpecialEffectsController: void <init>(android.view.ViewGroup)>($r1) in <androidx.fragment.app.FragmentManager$3: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)> to <androidx.fragment.app.DefaultSpecialEffectsController: void <init>(android.view.ViewGroup)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity2: void setContentView(android.view.View)>($r4) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)>
Edge from virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6) in <androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.ArrayList)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r4 = specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($r1, $l1) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>
Edge from $r4 = specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)>($r2) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)>
Edge from $z1 = virtualinvoke $r5.<android.app.Activity: boolean isChangingConfigurations()>() in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <android.app.Activity: boolean isChangingConfigurations()>
Edge from $r9 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegate: void onDestroy()>() in <androidx.appcompat.app.AppCompatActivity: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()>
Edge from specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ArithmeticException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void initState()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.Fragment: void initState()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>
Edge from $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Xml: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r2) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i2) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void <clinit>()>
Edge from specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") in <androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<java.util.HashMap: void <init>()>() in <androidx.lifecycle.MethodCallsLogger: void <init>()> to <java.util.HashMap: void <init>()>
Edge from virtualinvoke $r16.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("android:support:fragments", r27) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)>
Edge from $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r0 = new kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1 in <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <clinit>()> to <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: void <clinit>()>
Edge from specialinvoke $r3.<java.util.HashSet: void <init>()>() in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <java.util.HashSet: void <init>()>
Edge from $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r0) in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <kotlin.collections.EmptySet: boolean contains(java.lang.Object)>
Edge from $r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <android.util.Xml: void <clinit>()>
Edge from $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r4) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>
Edge from $z0 = virtualinvoke $r6.<android.os.Bundle: boolean isEmpty()>() in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <android.os.Bundle: boolean isEmpty()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r3) in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <androidx.core.app.ActivityCompat$2: void run()>
Edge from virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>
Edge from $r1 = virtualinvoke $r0.<kotlin.collections.EmptyMap: java.util.Set getEntries()>() in <kotlin.collections.EmptyMap: java.util.Set entrySet()> to <kotlin.collections.EmptyMap: java.util.Set getEntries()>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to instantiate ") in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.SpecialEffectsController$Operation: boolean isCanceled()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void cancel()> to <androidx.fragment.app.SpecialEffectsController$Operation: boolean isCanceled()>
Edge from virtualinvoke $r0.<androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)>($r4, $r9) in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>($r1) in <androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>
Edge from $r14 = virtualinvoke $r13.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "getInitialValue") in <kotlin.sequences.GeneratorSequence: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from specialinvoke $r4.<com.example.compatibilitytest.databinding.ActivityMain2Binding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,androidx.appcompat.widget.Toolbar)>($r5, $r2, $r3) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)> to <com.example.compatibilitytest.databinding.ActivityMain2Binding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,androidx.appcompat.widget.Toolbar)>
Edge from $r0 = <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions DEFAULT> in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)> to <androidx.core.content.res.ViewingConditions: void <clinit>()>
Edge from virtualinvoke $r5.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($i0, $r2) in <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)> to <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>
Edge from virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>($r2, $r2, null) in <androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>
Edge from specialinvoke $r5.<androidx.fragment.app.Fragment$5: void <init>(androidx.fragment.app.Fragment)>($r0) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.fragment.app.Fragment$5: void <init>(androidx.fragment.app.Fragment)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)>($i0) in <androidx.appcompat.widget.VectorEnabledTintResources: int getDimensionPixelSize(int)> to <androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.google.android.material.snackbar.BaseTransientBottomBar$5: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.collection.MapCollections: void <init>()>() in <androidx.collection.ArraySet$1: void <init>(androidx.collection.ArraySet)> to <androidx.collection.MapCollections: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r4.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0) in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r2, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>
Edge from $i4 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i4, 0, 255) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>
Edge from virtualinvoke $r1.<java.util.HashMap: void clear()>() in <androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.ArrayList)> to <java.util.HashMap: void clear()>
Edge from $r1 = specialinvoke $r0.<androidx.fragment.app.FragmentActivity: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from $r2 = staticinvoke <androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)>($r1) in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)>
Edge from specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r13) in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r2.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)> to <android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>
Edge from $i0 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from $r0 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock> in <androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from $r6 = virtualinvoke $r16.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: java.lang.String getPathName()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()>
Edge from <androidx.collection.ContainerHelpers: int[] EMPTY_INTS> = $r0 in <androidx.collection.ContainerHelpers: void <clinit>()> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onResume()>() in <androidx.fragment.app.Fragment: void performResume()> to <androidx.fragment.app.Fragment: void onResume()>
Edge from $r12 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>() in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ClassesInfoCache$MethodReference: void <init>(int,java.lang.reflect.Method)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>
Edge from $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$Event: int ordinal()>() in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>($r1, $r5) in <androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)> to <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>($r6, $r7, $r0) in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r1.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>("KEY_COMPONENT_ACTIVITY_REGISTERED_RCS", $r2) in <androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)> to <android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>
Edge from $r8 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)> to <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
Edge from specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found") in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from specialinvoke r23.<androidx.appcompat.app.AppCompatDelegateImpl$4: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl$4: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performResume()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8) in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from $r13 = staticinvoke <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <clinit>()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r1, $i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid color state list tag ") in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from <androidx.core.content.res.CamUtils: float[][] XYZ_TO_CAM16RGB> = $r0 in <androidx.core.content.res.CamUtils: void <clinit>()> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.42) in <androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r1.<androidx.collection.MapCollections: void colRemoveAt(int)>($i0) in <androidx.collection.MapCollections$ArrayIterator: void remove()> to <androidx.collection.ArraySet$1: void colRemoveAt(int)>
Edge from interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r6) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <java.util.HashMap: void putAll(java.util.Map)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$violation") in <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)>($r1) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)> to <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)>
Edge from $r7 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r4, null, $f0, $r3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)>
Edge from $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7) in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r2) in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>
Edge from $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getXml(int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)> to <android.graphics.drawable.LayerDrawable: void setDither(boolean)>
Edge from $r0 = new kotlin.collections.EmptyIterator in <kotlin.collections.EmptyIterator: void <clinit>()> to <kotlin.collections.EmptyIterator: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<androidx.navigation.ui.AppBarConfiguration: java.util.Set getTopLevelDestinations()>() in <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)> to <androidx.navigation.ui.AppBarConfiguration: java.util.Set getTopLevelDestinations()>
Edge from specialinvoke $r0.<androidx.navigation.NavGraph$Companion$findStartDestination$1: void <init>()>() in <androidx.navigation.NavGraph$Companion$findStartDestination$1: void <clinit>()> to <androidx.navigation.NavGraph$Companion$findStartDestination$1: void <init>()>
Edge from <androidx.core.R$styleable: int[] Capability> = $r0 in <androidx.core.R$styleable: void <clinit>()> to <androidx.core.R$styleable: void <clinit>()>
Edge from specialinvoke r16.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r2, r17) in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
Edge from $r10 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)>($r2) in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.graphics.PathParser$PathDataNode: void <init>(char,float[])> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r11.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(0.0F, $f4, $r7, 1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
Edge from $i1 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r2, $i0, $i1) in <androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from $r13 = interfaceinvoke $r12.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()>
Edge from $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.util.ArrayList: int size()>
Edge from $r14 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()>
Edge from $r1 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.internal.SafeIterableMap$Entry: void <init>(java.lang.Object,java.lang.Object)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r4.<androidx.core.view.ViewCompat$Api21Impl$1: void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r0, $r2) in <androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)> to <androidx.core.view.ViewCompat$Api21Impl$1: void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getCanonicalName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r18.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("no path defined") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/savedstate/SavedStateRegistry$AutoRecreated;") in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = staticinvoke <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)>(null, $r2, $r0, $i0) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)>
Edge from $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>() in <androidx.fragment.app.FragmentStore: void dispatchStateChange(int)> to <java.util.HashMap: java.util.Collection values()>
Edge from $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r3 = virtualinvoke $r1.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
Edge from $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ") in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)>($r0) in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> to <androidx.core.app.ActivityCompat$2: void run()>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <android.util.Log: int v(java.lang.String,java.lang.String)>
Edge from <androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized> = 2 in <androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()> to <androidx.activity.ImmLeaksCleaner: void <clinit>()>
Edge from $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.TransformingSequence$iterator$1: void <init>(kotlin.sequences.TransformingSequence)> to <kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()>
Edge from $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>() in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
Edge from $r0 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)>($r0, $r2) in <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)> to <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i2, $i3) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke r31.<androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: void <init>()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: void <init>()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve ThemedResourceCache#mUnthemedEntries field", $r4) in <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1) in <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)> to <java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
Edge from virtualinvoke $r9.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()> to <java.lang.Integer: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: int size()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()> to <androidx.collection.SparseArrayCompat: int size()>
Edge from $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r8 = new androidx.interpolator.view.animation.LinearOutSlowInInterpolator in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onPause()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onPause()>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)>($r1) in <androidx.appcompat.app.AppCompatDelegate: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)> to <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)>
Edge from specialinvoke $r2.<androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)>("REMOVING", 2) in <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)>
Edge from $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.lang.Float: java.lang.Float valueOf(float)>
Edge from specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not allowed.") in <androidx.startup.InitializationProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r3.<android.app.Activity: java.lang.CharSequence getTitle()>() in <androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()> to <android.app.Activity: java.lang.CharSequence getTitle()>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManager: void dispatchDestroyView()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <androidx.fragment.app.FragmentManager: void dispatchDestroyView()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()>
Edge from $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()> to <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>
Edge from specialinvoke $r4.<com.example.compatibilitytest.MainActivity$1: void <init>(com.example.compatibilitytest.MainActivity)>($r0) in <com.example.compatibilitytest.MainActivity: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.MainActivity$1: void <init>(com.example.compatibilitytest.MainActivity)>
Edge from $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($r4) in <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()> to <androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>
Edge from specialinvoke $r1.<android.os.Bundle: void <init>()>() in <androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()> to <android.os.Bundle: void <init>()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>() in <androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()>
Edge from virtualinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from <com.google.android.material.snackbar.Snackbar: int[] SNACKBAR_BUTTON_STYLE_ATTR> = $r0 in <com.google.android.material.snackbar.Snackbar: void <clinit>()> to <com.google.android.material.snackbar.Snackbar: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <androidx.fragment.app.strictmode.FragmentStrictMode$Flag: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.Fragment: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <java.lang.Object: void <init>()>
Edge from $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double atan2(double,double)>
Edge from virtualinvoke $r1.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>
Edge from $r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for fragment ") in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $r10 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)>($r8, $r9) in <androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)>
Edge from $r1 = new androidx.fragment.app.FragmentState in <androidx.fragment.app.FragmentStateManager: void saveState()> to <androidx.fragment.app.FragmentState: void <clinit>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>() in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>
Edge from $i2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r12, $r3, "ordering", 0, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r0, $i0) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)> to <androidx.appcompat.widget.ThemeUtils: void <clinit>()>
Edge from $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r1 = <androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion> in <androidx.navigation.ui.AppBarConfiguration$Builder: void <init>(androidx.navigation.NavGraph)> to <androidx.navigation.NavDestination: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()>() in <androidx.appcompat.app.AppCompatActivity: void setContentView(int)> to <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()> to <java.lang.StringBuilder: void <init>()>
Edge from $l3 = staticinvoke <java.lang.Math: long round(double)>($d1) in <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)> to <java.lang.Math: long round(double)>
Edge from $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>() in <androidx.fragment.app.FragmentStore: java.util.List getFragments()> to <java.util.Collections: java.util.List emptyList()>
Edge from $r5 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2) in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object)>
Edge from $r6 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r5, $r3, $r4, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r3, class "Lcom/example/compatibilitytest/MainActivity3;") in <com.example.compatibilitytest.MainActivity$2: void onClick(android.view.View)> to <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
Edge from r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>") in <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)> to <java.lang.System: void <clinit>()>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()>
Edge from $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)> to <java.lang.Math: float max(float,float)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r3 = virtualinvoke $r1.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from staticinvoke <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>($r0, $r1) in <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>
Edge from $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <java.lang.Math: float abs(float)>
Edge from specialinvoke $r0.<android.content.ContentProvider: void <init>()>() in <androidx.startup.InitializationProvider: void <init>()> to <android.content.ContentProvider: void <init>()>
Edge from specialinvoke r12.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r14, 0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from staticinvoke <androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>($r4, $r3, $i0) in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>
Edge from specialinvoke $r0.<androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])>($r1) in <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <init>()> to <androidx.interpolator.view.animation.LookupTableInterpolator: void <init>(float[])>
Edge from $r9 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>($r8, $r0) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>
Edge from $r3 = new androidx.core.view.AccessibilityDelegateCompat in <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)> to <androidx.core.view.AccessibilityDelegateCompat: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $r3 = virtualinvoke $r0.<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>($r1, $r2) in <androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> to <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke r9.<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path has a invalid length ") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r5 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>() in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentActivity: void onResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.fragment.app.FragmentActivity: void onResume()>
Edge from staticinvoke <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>($r3) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)> to <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>
Edge from $f1 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getAw()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getAw()>
Edge from $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r0, "interpolator", 1, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r6 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: re-attaching retained ") in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from $f5 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getAw()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getAw()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback: void <init>(androidx.appcompat.app.ToolbarActionBar)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>($i0, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)> to <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>
Edge from $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>() in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>
Edge from $d19 = staticinvoke <java.lang.Math: double cos(double)>($d3) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double cos(double)>
Edge from virtualinvoke $r24.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i1) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.concurrent.atomic.AtomicInteger: void set(int)>
Edge from $r1 = new android.content.IntentFilter in <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()> to <android.content.IntentFilter: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()>
Edge from $r4 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 2) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int max(int,int)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>() in <androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>
Edge from $r2 = new androidx.appcompat.app.AppCompatDelegateImpl in <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from specialinvoke $r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1) in <androidx.navigation.Navigation$findViewNavController$1: void <init>()> to <kotlin.jvm.internal.Lambda: void <init>(int)>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>
Edge from $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r2) in <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)> to <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r1.<java.util.HashMap: void clear()>() in <androidx.lifecycle.ViewModelStore: void clear()> to <java.util.HashMap: void clear()>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>(null) in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>
Edge from $i2 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)> to <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>
Edge from virtualinvoke $r0.<androidx.startup.InitializationProvider: java.lang.String getType(android.net.Uri)>(null) in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <androidx.startup.InitializationProvider: java.lang.String getType(android.net.Uri)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with a compatible window decor layout") in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<com.example.compatibilitytest.MainActivity4: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <com.example.compatibilitytest.MainActivity4: void <init>()>
Edge from $r11 = virtualinvoke $r8.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r10) in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
Edge from $r8 = interfaceinvoke r36.<androidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>() in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <android.graphics.drawable.LayerDrawable: void setAlpha(int)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i2) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>() in <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)> to <java.util.ConcurrentModificationException: void <init>()>
Edge from $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("StrictMode violation in ", $r4) in <androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)> to <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>
Edge from specialinvoke $r5.<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context)>($r0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void <init>(android.content.Context)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from virtualinvoke $r1.<androidx.collection.SparseArrayCompat: void clear()>() in <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()> to <androidx.collection.SparseArrayCompat: void clear()>
Edge from specialinvoke $r4.<androidx.fragment.app.FragmentStore: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.FragmentStore: void <init>()>
Edge from specialinvoke $r0.<androidx.core.view.ViewCompat$2: void <init>(int,java.lang.Class,int,int)>($i0, class "Ljava/lang/CharSequence;", 8, 28) in <androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()> to <androidx.core.view.ViewCompat$2: void <init>(int,java.lang.Class,int,int)>
Edge from $r12 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r4, $r11) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])>
Edge from $r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1) in <androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r2, $r5, 0) in <androidx.fragment.app.FragmentStateManager: void create()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>
Edge from $r1 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>() in <com.google.android.material.snackbar.SnackbarManager: void showNextSnackbarLocked()> to <java.lang.ref.WeakReference: java.lang.Object get()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>() in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>
Edge from $z0 = specialinvoke $r0.<com.google.android.material.snackbar.SnackbarManager: boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)>($r2) in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager: boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)>
Edge from $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()>
Edge from $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <java.lang.String: boolean equals(java.lang.Object)>
Edge from $d0 = staticinvoke <java.lang.Math: double log(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double log(double)>
Edge from $i0 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8) in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.Enum: int compareTo(java.lang.Enum)>
Edge from $i1 = virtualinvoke $r2.<androidx.activity.result.ActivityResult: int getResultCode()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.activity.result.ActivityResult: int getResultCode()>
Edge from specialinvoke $r0.<com.example.compatibilitytest.MainActivity3: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <com.example.compatibilitytest.MainActivity3: void <init>()>
Edge from specialinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()> to <androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>
Edge from $r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)> to <android.graphics.Paint$Cap: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.startup.InitializationProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(null, $r2, "", $r3, "") in <dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)> to <androidx.startup.InitializationProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)> to <java.lang.Object: void <init>()>
Edge from interfaceinvoke $r3.<java.util.Iterator: void remove()>() in <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)> to <androidx.collection.MapCollections$ArrayIterator: void remove()>
Edge from specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1) in <androidx.core.view.ViewCompat: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
Edge from specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r3, $i0, $i3) in <androidx.collection.ArraySet: java.lang.Object removeAt(int)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void dispatchActivityCreated()>() in <androidx.fragment.app.FragmentActivity: void onStart()> to <androidx.fragment.app.FragmentController: void dispatchActivityCreated()>
Edge from specialinvoke $r0.<kotlin.collections.EmptyIterator: void <init>()>() in <kotlin.collections.EmptyIterator: void <clinit>()> to <kotlin.collections.EmptyIterator: void <init>()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentManager: java.util.List getFragments()>() in <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)> to <androidx.fragment.app.FragmentManager: java.util.List getFragments()>
Edge from $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r2.<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>($r0) in <androidx.fragment.app.FragmentActivity: void <init>()> to <androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r0 = new androidx.collection.ArraySet in <androidx.appcompat.app.AppCompatDelegate: void <clinit>()> to <androidx.collection.ArraySet: void <clinit>()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>($r1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>
Edge from virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>($r5, $r6, $r1) in <androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>($f3, $f2, $f6, $f7, $f8, $f9) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>
Edge from specialinvoke $r0.<androidx.arch.core.executor.ArchTaskExecutor: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()> to <androidx.arch.core.executor.ArchTaskExecutor: void <init>()>
Edge from specialinvoke $r0.<com.example.compatibilitytest.MyService: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MyService dummyMainMethod_com_example_compatibilitytest_MyService(android.content.Intent)> to <com.example.compatibilitytest.MyService: void <init>()>
Edge from virtualinvoke $r10.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)>
Edge from specialinvoke $r3.<com.example.compatibilitytest.MainActivity3$1: void <init>(com.example.compatibilitytest.MainActivity3,android.content.Intent)>($r0, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <com.example.compatibilitytest.MainActivity3$1: void <init>(com.example.compatibilitytest.MainActivity3,android.content.Intent)>
Edge from $r7 = virtualinvoke r14.<android.content.Context: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)> to <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
Edge from $r0 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>($r1) in <kotlin.jvm.internal.Intrinsics: void throwJavaNpe()> to <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <java.lang.Object: void <init>()>
Edge from $l4 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>($i2, $i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void ensureViewModelStore()>() in <androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()> to <androidx.activity.ComponentActivity: void ensureViewModelStore()>
Edge from $z0 = virtualinvoke $r5.<android.app.Activity: boolean isChangingConfigurations()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <android.app.Activity: boolean isChangingConfigurations()>
Edge from <androidx.core.app.ActivityRecreator: android.os.Handler mainHandler> = $r0 in <androidx.core.app.ActivityRecreator: void <clinit>()> to <androidx.core.app.ActivityRecreator: void <clinit>()>
Edge from virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1) in <androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r2.<androidx.fragment.app.FragmentManagerImpl: void <init>()>() in <androidx.fragment.app.Fragment: void performDetach()> to <androidx.fragment.app.FragmentManagerImpl: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(10) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MainActivity3: void setContentView(int)>(2131427358) in <com.example.compatibilitytest.MainActivity3: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()>() in <androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()> to <androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <java.lang.StringBuilder: void <init>()>
Edge from $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.util.Set keySet()>() in <androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)> to <java.util.WeakHashMap: java.util.Set keySet()>
Edge from $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()>
Edge from $r4 = new android.content.ComponentName in <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()> to <android.content.ComponentName: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View)>($r1) in <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)> to <androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)>
Edge from virtualinvoke $r8.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>($r7, $r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r9) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)>("network") in <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()> to <androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)>
Edge from $r5 = <androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode INSTANCE> in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>($r13) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)>("NONE", 0) in <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end:") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from interfaceinvoke $r1.<java.lang.Runnable: void run()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void run()>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performStop()> to <java.lang.StringBuilder: void <init>()>
Edge from $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.ArrayList)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r3 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.FilteringSequence: java.util.Iterator iterator()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)> to <android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
Edge from $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2) in <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)> to <java.lang.Math: double sin(double)>
Edge from virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission request result delivered for unknown Fragment ") in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>($r4, $r1) in <androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)> to <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>
Edge from $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <androidx.appcompat.app.TwilightManager: boolean isStateValid()> to <java.lang.System: long currentTimeMillis()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>
Edge from $f3 = virtualinvoke $r1.<androidx.core.content.res.CamColor: float getBStar()>() in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <androidx.core.content.res.CamColor: float getBStar()>
Edge from $i0 = staticinvoke <androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)>($r1, $i0) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)>
Edge from specialinvoke $r5.<android.graphics.Paint: void <init>(android.graphics.Paint)>($r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <android.graphics.Paint: void <init>(android.graphics.Paint)>
Edge from virtualinvoke $r4.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>($r2) in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)>
Edge from $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <java.util.ArrayList: int size()>
Edge from $r11 = specialinvoke $r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>
Edge from $f8 = staticinvoke <java.lang.Math: float abs(float)>($f0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: void <init>()> to <java.lang.Object: void <init>()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r3, $i2, $i3) in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from $r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.EmptySequence: java.util.Iterator iterator()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "value") in <androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r9, $r3, $r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
Edge from specialinvoke $r1.<java.lang.NullPointerException: void <init>()>() in <kotlin.jvm.internal.Intrinsics: void throwJavaNpe()> to <java.lang.NullPointerException: void <init>()>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation)>($r1, $r2) in <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void run()> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from $r6 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.graphics.Shader)>($r10) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.graphics.Shader)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.databinding.ActivityMain2Binding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,androidx.appcompat.widget.Toolbar)> to <java.lang.Object: void <init>()>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>($r1, null, $r0) in <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)> to <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>
Edge from specialinvoke $r11.<androidx.fragment.app.FragmentManager$3: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentManager$3: void <init>(androidx.fragment.app.FragmentManager)>
Edge from $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from $r4 = new android.content.res.ColorStateList in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)> to <android.content.res.ColorStateList: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.Path: void quadTo(float,float,float,float)>($f0, $f1, 1.0F, 1.0F) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)> to <android.graphics.Path: void quadTo(float,float,float,float)>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>() in <androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()> to <java.lang.Object: java.lang.Object clone()>
Edge from specialinvoke $r0.<androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>($r5, $r6, $r1) in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)>
Edge from $r1 = virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>($r2) in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>($i1) in <androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> to <androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", "Exception while getting ActivityInfo", $r7) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()> to <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "fragment.parentFragmentManager.host.handler") in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)> to <java.lang.StringBuilder: void <init>()>
Edge from $z0 = specialinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from virtualinvoke $r12.<android.graphics.drawable.LayerDrawable: void setId(int,int)>(1, 16908303) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: void setId(int,int)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateSelf()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from specialinvoke $r3.<androidx.appcompat.app.TwilightManager$TwilightState: void <init>()>() in <androidx.appcompat.app.TwilightManager: void <init>(android.content.Context,android.location.LocationManager)> to <androidx.appcompat.app.TwilightManager$TwilightState: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from specialinvoke $r7.<java.util.ArrayList: void <init>()>() in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.ArrayList: void <init>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: void destroyFragmentView()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void start()> to <java.lang.StringBuilder: void <init>()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>() in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.util.HashMap: int size()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i1) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from virtualinvoke $r1.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r0, 1) in <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)>
Edge from $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r9) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
Edge from specialinvoke $r4.<androidx.fragment.app.FragmentManager$1: void <init>(androidx.fragment.app.FragmentManager,boolean)>($r0, 0) in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentManager$1: void <init>(androidx.fragment.app.FragmentManager,boolean)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = specialinvoke $r0.<androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r2) in <androidx.appcompat.widget.VectorEnabledTintResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
Edge from virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>($f6, $f7) in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void rLineTo(float,float)>
Edge from $r10 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r4, $r5, $r1, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from specialinvoke $r12.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)>($r13, $r1, $r10, $r8) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)>
Edge from $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <java.lang.Long: java.lang.Long valueOf(long)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void restoreViewState()> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto CREATE_VIEW: ") in <androidx.fragment.app.FragmentStateManager: void ensureInflatedView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>
Edge from specialinvoke $r0.<androidx.lifecycle.ViewModel: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)> to <androidx.lifecycle.ViewModel: void <init>()>
Edge from $r6 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r5, $r3, $r4, $r1) in <androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)>(null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void <init>(android.graphics.drawable.Animatable)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)>
Edge from $r10 = virtualinvoke $r9.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onStart()> to <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r1.<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>("INITIALIZED", 1) in <androidx.lifecycle.Lifecycle$State: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>
Edge from virtualinvoke $r13.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>($r7, $r1, $r2, $r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>
Edge from $r1 = <com.google.android.material.snackbar.Snackbar: int[] SNACKBAR_CONTENT_STYLE_ATTRS> in <com.google.android.material.snackbar.Snackbar: boolean hasSnackbarContentStyleAttrs(android.content.Context)> to <com.google.android.material.snackbar.Snackbar: void <clinit>()>
Edge from $r2 = specialinvoke $r0.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>() in <androidx.fragment.app.Fragment: void setFocusedView(android.view.View)> to <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r15.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r17) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from $i1 = specialinvoke $r0.<androidx.collection.ArraySet: int indexOfNull()>() in <androidx.collection.ArraySet: boolean add(java.lang.Object)> to <androidx.collection.ArraySet: int indexOfNull()>
Edge from $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(null, $r1) in <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
Edge from $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0) in <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
Edge from specialinvoke $r5.<androidx.collection.SparseArrayCompat: void <init>()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)> to <androidx.collection.SparseArrayCompat: void <init>()>
Edge from $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isInBackStack()>() in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.Fragment: boolean isInBackStack()>
Edge from $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()> to <java.lang.Object: java.lang.Object clone()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 4) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)>
Edge from staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("Trace", $r0, $r1) in <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)> to <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2) in <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> to <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r5.<androidx.activity.contextaware.ContextAwareHelper: void clearAvailableContext()>() in <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.contextaware.ContextAwareHelper: void clearAvailableContext()>
Edge from $r5 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>($i0) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>
Edge from specialinvoke $r2.<androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>($i0, $r1) in <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)> to <androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager has been destroyed") in <androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()>
Edge from specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5) in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from staticinvoke <androidx.fragment.app.Fragment$Api19Impl: void cancelPendingInputEvents(android.view.View)>($r5) in <androidx.fragment.app.Fragment$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.fragment.app.Fragment$Api19Impl: void cancelPendingInputEvents(android.view.View)>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>($r1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>
Edge from virtualinvoke $r0.<android.animation.ValueAnimator: void setStartDelay(long)>($l0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ValueAnimator: void setStartDelay(long)>
Edge from interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r4) in <androidx.startup.AppInitializer: void discoverAndInitialize()> to <java.util.HashSet: boolean add(java.lang.Object)>
Edge from $r8 = virtualinvoke $r5.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>($r2) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>
Edge from $r0 = new androidx.navigation.ui.NavigationUI in <androidx.navigation.ui.NavigationUI: void <clinit>()> to <androidx.navigation.ui.NavigationUI: void <clinit>()>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentViewLifecycleOwner: void performRestore(android.os.Bundle)>($r6) in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <androidx.fragment.app.FragmentViewLifecycleOwner: void performRestore(android.os.Bundle)>
Edge from $r3 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <clinit>()>
Edge from $r1 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>($r1) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)> to <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ") in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10) in <androidx.collection.LruCache: void trimToSize(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.core.content.res.CamUtils: int intFromLStar(float)>($f0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamUtils: void <clinit>()>
Edge from $r1 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()>
Edge from $r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r3) in <androidx.navigation.Navigation: androidx.navigation.NavController findViewNavController(android.view.View)> to <kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PathParser", $r2) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
Edge from specialinvoke $r5.<androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)>($r2, $r6, $r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)>
Edge from $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()>
Edge from $r16 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating retained Fragments: Added ") in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0) in <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)>
Edge from $r5 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android:target_state") in <androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)> to <android.os.Bundle: java.lang.String getString(java.lang.String)>
Edge from virtualinvoke $r8.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r12) in <androidx.activity.ComponentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>
Edge from $r0 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()>() in <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)> to <androidx.core.content.res.ColorStateListInflaterCompat: void <clinit>()>
Edge from $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getDefaultColor()>() in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.content.res.ColorStateList)> to <android.content.res.ColorStateList: int getDefaultColor()>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r3, 0, $i2) in <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager$3: void <init>(androidx.fragment.app.FragmentManager)> to <java.lang.Object: void <init>()>
Edge from $f1 = staticinvoke <java.lang.Math: float min(float,float)>(360.0F, $f1) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float min(float,float)>
Edge from $r9 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED> in <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void throwJavaNpe()>() in <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)> to <kotlin.jvm.internal.Intrinsics: void throwJavaNpe()>
Edge from virtualinvoke $r2.<androidx.fragment.app.Fragment: void performPause()>() in <androidx.fragment.app.FragmentStateManager: void pause()> to <androidx.fragment.app.Fragment: void performPause()>
Edge from $r1 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from virtualinvoke $r0.<android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>($r1) in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)> to <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>
Edge from $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
Edge from $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED> in <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r3.<androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1: void <init>(androidx.fragment.app.FragmentActivity)>($r0) in <androidx.fragment.app.FragmentActivity: void init()> to <androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1: void <init>(androidx.fragment.app.FragmentActivity)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void <init>()> to <android.graphics.drawable.Drawable: void <init>()>
Edge from $r7 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>($r9, $r7) in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)> to <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateDensity(android.content.res.Resources)>($r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from r0 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE> in <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()> to <androidx.appcompat.widget.AppCompatDrawableManager: void <clinit>()>
Edge from staticinvoke <android.os.Trace: void beginSection(java.lang.String)>($r0) in <androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)> to <android.os.Trace: void beginSection(java.lang.String)>
Edge from $i1 = virtualinvoke $r2.<androidx.activity.result.ActivityResult: int getResultCode()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <androidx.activity.result.ActivityResult: int getResultCode()>
Edge from $r10 = virtualinvoke $r12.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ") in <androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r10.<android.view.InflateException: void <init>(java.lang.String)>($r1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.view.InflateException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<androidx.appcompat.widget.AppCompatDrawableManager: void <init>()>() in <androidx.appcompat.widget.AppCompatDrawableManager: void preload()> to <androidx.appcompat.widget.AppCompatDrawableManager: void <init>()>
Edge from $r1 = specialinvoke $r0.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>() in <androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)> to <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>
Edge from $r13 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <java.lang.Object: java.lang.Class getClass()>
Edge from $r3 = virtualinvoke $r2.<com.example.compatibilitytest.MainActivity4: android.content.Context getApplicationContext()>() in <com.example.compatibilitytest.MainActivity4$2: void onClick(android.view.View)> to <android.content.ContextWrapper: android.content.Context getApplicationContext()>
Edge from $r0 = new androidx.fragment.app.SpecialEffectsController$Operation$State in <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.Navigation: void <init>()> to <java.lang.Object: void <init>()>
Edge from $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8) in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <java.lang.Object: boolean equals(java.lang.Object)>
Edge from $z0 = virtualinvoke $r3.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>() in <androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void setTheme(int)>($i0) in <androidx.appcompat.app.AppCompatActivity: void setTheme(int)> to <android.app.Activity: void setTheme(int)>
Edge from staticinvoke <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>($r6) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>
Edge from $z0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($i0) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r2, $r1, "trimPathStart", 5, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $i1 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>($r1, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)> to <androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>
Edge from $r1 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r2) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ImmLeaksCleaner: void <init>(android.app.Activity)> to <java.lang.Object: void <init>()>
Edge from $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>() in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
Edge from specialinvoke r20.<android.util.TypedValue: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <android.util.TypedValue: void <init>()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()>
Edge from specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performResume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = specialinvoke $r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)>(0, $r1) in <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)> to <androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)>
Edge from specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performStart()> to <java.lang.StringBuilder: void <init>()>
Edge from $r0 = new androidx.lifecycle.Lifecycle$Event in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>(10) in <androidx.collection.SparseArrayCompat: void <init>(int)> to <androidx.collection.ContainerHelpers: int idealIntArraySize(int)>
Edge from staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>($r2, $r0) in <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()> to <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from specialinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: void <init>()>() in <androidx.fragment.app.Fragment: void <init>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>()>
Edge from $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
Edge from <androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion> = $r0 in <androidx.navigation.NavGraph: void <clinit>()> to <androidx.navigation.NavDestination: void <clinit>()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0) in <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)> to <android.graphics.drawable.LayerDrawable: void setAutoMirrored(boolean)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ") in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>($r4) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>
Edge from specialinvoke $r2.<android.graphics.Path: void <init>()>() in <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)> to <android.graphics.Path: void <init>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()>
Edge from $r0 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mToken") in <androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
Edge from $i0 = virtualinvoke $r0.<androidx.fragment.app.FragmentStateManager: int computeExpectedState()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.FragmentStateManager: int computeExpectedState()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>
Edge from $r4 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR> in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1) in <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()> to <java.lang.Math: int min(int,int)>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performStart()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r4, 0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>
Edge from virtualinvoke $r8.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r11) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>
Edge from $r2 = new android.graphics.Matrix in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)> to <android.graphics.Matrix: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i1, 0) in <androidx.collection.ArraySet: int indexOfNull()> to <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>
Edge from virtualinvoke $r8.<android.os.Bundle: void remove(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <android.os.Bundle: void remove(java.lang.String)>
Edge from $f5 = staticinvoke <java.lang.Math: float abs(float)>($f5) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve value from ThemedResourceCache#mUnthemedEntries", $r6) in <androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>() in <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)> to <androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()>
Edge from $r3 = virtualinvoke $r1.<androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)>($l3, $r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)> to <androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
Edge from $r9 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>($r8, $r0) in <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)> to <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>
Edge from specialinvoke $r6.<com.google.android.material.snackbar.Snackbar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>($r1, $r3, $r5, $r5) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()>() in <androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> to <androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()>
Edge from $z0 = staticinvoke <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>($r0) in <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)> to <androidx.core.app.ActivityRecreator: void <clinit>()>
Edge from virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<vector> tag requires height > 0") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <java.lang.Integer: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>
Edge from virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r2 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>($r0) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>
Edge from specialinvoke $r4.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.util.ArrayList: void <init>()>
Edge from $z0 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r9) in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>
Edge from $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performDestroyView()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> to <java.lang.Exception: void <init>()>
Edge from virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing non-config state for ") in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)> to <java.lang.Object: void <init>()>
Edge from $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>($r2, $r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>
Edge from virtualinvoke $r8.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from $i1 = staticinvoke <androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)>($r3, $r0, $i1, $r2) in <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)> to <androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)>
Edge from virtualinvoke $r7.<androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)>($r0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)>
Edge from $i0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)>($r1) in <androidx.core.content.res.CamColor: int viewedInSrgb()> to <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)>
Edge from $r5 = new androidx.fragment.app.Fragment in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.fragment.app.Fragment: void <clinit>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
Edge from specialinvoke $r2.<androidx.fragment.app.FragmentStore: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <androidx.fragment.app.FragmentStore: void <init>()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)>
Edge from $r8 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $d20 = staticinvoke <java.lang.Math: double tan(double)>($d20) in <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)> to <java.lang.Math: double tan(double)>
Edge from virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r7) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: void <init>(android.graphics.drawable.AnimationDrawable,boolean)>($r2, $z1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: void <init>(android.graphics.drawable.AnimationDrawable,boolean)>
Edge from $r6 = virtualinvoke $r9.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()>
Edge from $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getAnimation(int)>
Edge from $r13 = <androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$1: void <clinit>()>
Edge from interfaceinvoke $r1.<java.lang.Runnable: void run()>() in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1: void run()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>(1) in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener: void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.Object: void <init>()>
Edge from $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $i3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r3, $r2, "repeatMode", 4, 1) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from $r3 = new androidx.appcompat.app.WindowDecorActionBar in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.WindowDecorActionBar: void <clinit>()>
Edge from $r4 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()> to <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>
Edge from $r8 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>($r8, 0.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>
Edge from virtualinvoke $r4.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(null) in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)> to <android.content.res.Configuration: void setTo(android.content.res.Configuration)>
Edge from $r1 = virtualinvoke $r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("KEY_COMPONENT_ACTIVITY_PENDING_RESULT") in <androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)> to <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
Edge from specialinvoke $r0.<androidx.navigation.NavDestination$Companion: void <init>()>() in <androidx.navigation.NavDestination$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)> to <androidx.navigation.NavDestination$Companion: void <init>()>
Edge from $r7 = virtualinvoke $r6.<android.animation.ObjectAnimator: java.lang.String getPropertyName()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)> to <android.animation.ObjectAnimator: java.lang.String getPropertyName()>
Edge from specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires both controlX2 and controlY2 for cubic Beziers.") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <android.view.InflateException: void <init>(java.lang.String)>
Edge from $i0 = specialinvoke $r0.<androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()>() in <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()> to <androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()>
Edge from $r5 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, $i1) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
Edge from $r3 = staticinvoke <androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()>() in <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)> to <androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()>
Edge from specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>($r3) in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r1, $r7) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
Edge from $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE> in <androidx.fragment.app.Fragment: void performPause()> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $f3 = virtualinvoke $r1.<androidx.core.content.res.ViewingConditions: float getC()>() in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getC()>
Edge from virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <java.util.ArrayList: boolean add(java.lang.Object)>
Edge from virtualinvoke $r2.<androidx.startup.AppInitializer: void discoverAndInitialize()>() in <androidx.startup.InitializationProvider: boolean onCreate()> to <androidx.startup.AppInitializer: void discoverAndInitialize()>
Edge from <androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES> = $r0 in <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <clinit>()> to <androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <clinit>()>
Edge from virtualinvoke $r4.<com.example.compatibilitytest.MainActivity3: android.content.ComponentName startService(android.content.Intent)>($r3) in <com.example.compatibilitytest.MainActivity3$1: void onClick(android.view.View)> to <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
Edge from specialinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$1: void <init>(java.lang.Thread$UncaughtExceptionHandler)>($r4) in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <androidx.appcompat.app.AppCompatDelegateImpl$1: void <init>(java.lang.Thread$UncaughtExceptionHandler)>
Edge from specialinvoke $r3.<androidx.appcompat.app.AppCompatActivity$2: void <init>(androidx.appcompat.app.AppCompatActivity)>($r0) in <androidx.appcompat.app.AppCompatActivity: void initDelegate()> to <androidx.appcompat.app.AppCompatActivity$2: void <init>(androidx.appcompat.app.AppCompatActivity)>
Edge from $r6 = virtualinvoke $r17.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()>
Edge from $r3 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0) in <androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $r5 = <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE> in <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent") in <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "rotation", 5, $f0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $z2 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>($i1, $r1) in <androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)> to <androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>
Edge from $r16 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED> in <androidx.lifecycle.Lifecycle$1: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_LifecycleAdapter") in <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: void onStop()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $i0 = virtualinvoke $r6.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManager$7: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.lang.StringBuilder: void <init>()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r0, "fraction", 3, -1.0F) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from $f10 = virtualinvoke $r1.<androidx.core.content.res.CamColor: float getJ()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)> to <androidx.core.content.res.CamColor: float getJ()>
Edge from specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.SpecialEffectsController: void <init>(android.view.ViewGroup)> to <java.util.ArrayList: void <init>()>
Edge from $r8 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>() in <androidx.fragment.app.Fragment: void performAttach()> to <androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: void <init>()>
Edge from $i1 = <androidx.collection.ArraySet: int sBaseCacheSize> in <androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)> to <androidx.collection.ArraySet: void <clinit>()>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: void <init>()>
Edge from $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
Edge from $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r4 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>
Edge from $z0 = virtualinvoke $r1.<java.util.LinkedHashMap: boolean isEmpty()>() in <androidx.collection.LruCache: void trimToSize(int)> to <java.util.LinkedHashMap: boolean isEmpty()>
Edge from $r4 = <androidx.collection.LongSparseArray: java.lang.Object DELETED> in <androidx.collection.LongSparseArray: void gc()> to <androidx.collection.LongSparseArray: void <clinit>()>
Edge from specialinvoke $r8.<com.example.compatibilitytest.MainActivity$2: void <init>(com.example.compatibilitytest.MainActivity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <com.example.compatibilitytest.MainActivity$2: void <init>(com.example.compatibilitytest.MainActivity)>
Edge from virtualinvoke $r2.<androidx.activity.OnBackPressedCallback: void remove()>() in <androidx.fragment.app.FragmentManager: void dispatchDestroy()> to <androidx.activity.OnBackPressedCallback: void remove()>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
Edge from specialinvoke $r1.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_START", 1) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from $r12 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getXml(int)>
Edge from $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r0) in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>($r2) in <androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)> to <androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>
Edge from $r9 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)> to <java.lang.Object: java.lang.Class getClass()>
Edge from virtualinvoke $r3.<androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)>($l5, $d0, $d1) in <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)> to <androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
Edge from $f8 = virtualinvoke $r0.<androidx.core.content.res.ViewingConditions: float getZ()>() in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.ViewingConditions: float getZ()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i0, $i1) in <androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)> to <androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r9 = <androidx.core.R$styleable: int[] ColorStateListItem> in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.R$styleable: void <clinit>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4) in <androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)> to <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>
Edge from $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)>($r0) in <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)> to <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()>
Edge from staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>($r0) in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegate: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.core.app.ActivityCompat$2: void <init>(android.app.Activity)> to <java.lang.Object: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>
Edge from virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5) in <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r0) in <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r6 = virtualinvoke $r4.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>() in <androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>
Edge from $r1 = virtualinvoke $r0.<androidx.activity.ComponentActivity: java.lang.Object getLastNonConfigurationInstance()>() in <androidx.activity.ComponentActivity: void ensureViewModelStore()> to <android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
Edge from $i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>() in <androidx.fragment.app.FragmentStateManager: void saveViewState()> to <android.util.SparseArray: int size()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(5) in <androidx.fragment.app.FragmentManager: void dispatchPause()> to <androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)> to <android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
Edge from $r1 = staticinvoke <androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>($r2) in <androidx.core.view.ViewCompat$2: java.lang.CharSequence frameworkGet(android.view.View)> to <androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>
Edge from $r9 = staticinvoke <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>($r4) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>
Edge from $z0 = specialinvoke $r0.<androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()>() in <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)> to <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()>
Edge from $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <java.util.ArrayList: int size()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <android.os.Build$VERSION: void <clinit>()>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r1, $r0) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void unregisterForLayoutCallback(android.view.View)> to <androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)>
Edge from $r3 = new android.os.Bundle in <androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)> to <android.os.Bundle: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()> to <android.graphics.drawable.Drawable: int getMinimumWidth()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(0.29, $d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double pow(double,double)>
Edge from $r2 = staticinvoke <kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence)>($r1) in <kotlin.sequences.FilteringSequence$iterator$1: void <init>(kotlin.sequences.FilteringSequence)> to <kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence)>
Edge from $r7 = virtualinvoke $r4.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>($r6, $r1, null) in <androidx.fragment.app.FragmentManager$2: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int size()>() in <androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)> to <androidx.collection.SimpleArrayMap: int size()>
Edge from specialinvoke $r0.<androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)>($r4, $r12, $r13, $r1) in <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])> to <androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)> to <android.graphics.drawable.LayerDrawable: void setDither(boolean)>
Edge from specialinvoke $r2.<androidx.savedstate.SavedStateRegistry: void <init>()>() in <androidx.savedstate.SavedStateRegistryController: void <init>(androidx.savedstate.SavedStateRegistryOwner)> to <androidx.savedstate.SavedStateRegistry: void <init>()>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.appcompat.app.AppCompatActivity: void initDelegate()> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4) in <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.util.Xml: void <clinit>()>
Edge from interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> to <androidx.core.app.ActivityRecreator$2: void run()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableDelegate", "Exception while inflating <drawable>", $r14) in <androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found") in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)>($r1) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)> to <androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)>
Edge from specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)>($r4, $z0) in <androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()> to <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)>
Edge from $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1) in <androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r2 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>() in <androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>
Edge from $i0 = staticinvoke <java.lang.Math: int round(float)>($f2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <java.lang.Math: int round(float)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.result.ActivityResult$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)> to <android.os.Handler: boolean post(java.lang.Runnable)>
Edge from virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved state of ") in <androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r1, $r5) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()> to <android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
Edge from $r1 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)>($r1) in <kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)> to <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)>
Edge from $z0 = virtualinvoke $r1.<java.util.HashSet: boolean isEmpty()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void cancel()> to <java.util.HashSet: boolean isEmpty()>
Edge from virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)>(null) in <androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)> to <androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)>
Edge from $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r5 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to container ") in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: void performDestroy()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
Edge from $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)> to <kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()>
Edge from specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Your activity is not yet attached to the Application instance. You can\'t request ViewModel before onCreate call.") in <androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from r3 = <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State GONE> in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from staticinvoke <androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)>($r7, $r5) in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)>
Edge from specialinvoke $r0.<kotlin.sequences.FilteringSequence$iterator$1: void calcNext()>() in <kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()> to <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()>
Edge from $r3 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r0, $r2, $r1) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
Edge from $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>() in <androidx.appcompat.view.menu.MenuBuilder: int size()> to <java.util.ArrayList: int size()>
Edge from specialinvoke $r0.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Index overflow has happened.") in <kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()> to <java.lang.ArithmeticException: void <init>(java.lang.String)>
Edge from $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2) in <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <android.util.Xml: void <clinit>()>
Edge from $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint$Style: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>
Edge from $r0 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE> in <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>
Edge from <androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event> = $r8 in <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()> to <androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)> to <java.lang.Boolean: void <clinit>()>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r1, $r14) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
Edge from virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0) in <androidx.fragment.app.Fragment: void performDetach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void attach()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($r4) in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>
Edge from $z0 = virtualinvoke $r0.<androidx.collection.MapCollections$ArrayIterator: boolean hasNext()>() in <androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()> to <androidx.collection.MapCollections$ArrayIterator: boolean hasNext()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($r1, $l1, $r4) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>
Edge from $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r9 = interfaceinvoke $r14.<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r12, $r13, $r15) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
Edge from interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> in <androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()> to <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>($r1, $i0, $r3) in <androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>
Edge from $r3 = staticinvoke <com.google.android.material.snackbar.Snackbar: android.view.ViewGroup findSuitableParent(android.view.View)>($r2) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)> to <com.google.android.material.snackbar.Snackbar: android.view.ViewGroup findSuitableParent(android.view.View)>
Edge from $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6) in <androidx.fragment.app.FragmentStore: void moveToExpectedState()> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>() in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>
Edge from $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "startX", $i0, 0.0F) in <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
Edge from interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)>($r3) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parameter ") in <kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)> to <java.lang.System: long currentTimeMillis()>
Edge from specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() in <androidx.navigation.ui.ActionBarOnDestinationChangedListener: void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from staticinvoke <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>($r0) in <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)> to <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>
Edge from specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r3, class "Lcom/example/compatibilitytest/MainActivity4;") in <com.example.compatibilitytest.MainActivity3$2: void onClick(android.view.View)> to <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
Edge from $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location") in <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sizeOf() is reporting inconsistent results!") in <androidx.collection.LruCache: void trimToSize(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r0 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0) in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)> to <android.content.res.ColorStateList: void <clinit>()>
Edge from virtualinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()>
Edge from $r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>() in <androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()> to <androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>
Edge from $r2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from specialinvoke r21.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
Edge from $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r3) in <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
Edge from $r2 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>() in <androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)> to <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>
Edge from virtualinvoke $r5.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from $r6 = staticinvoke <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)>($r0, 2131231032) in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <androidx.navigation.Navigation: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void stop()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from specialinvoke $r0.<com.google.android.material.snackbar.SnackbarManager: void <init>()>() in <com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager getInstance()> to <com.google.android.material.snackbar.SnackbarManager: void <init>()>
Edge from $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>
Edge from $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <java.lang.Integer: java.lang.String toHexString(int)>
Edge from $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, "This is button5", 0) in <com.example.compatibilitytest.MainActivity4$2: void onClick(android.view.View)> to <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)>($r0, $i0) in <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)> to <androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)>
Edge from $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void complete()> to <java.util.ArrayList: java.util.Iterator iterator()>
Edge from $r16 = virtualinvoke $r15.<android.content.Context: java.lang.ClassLoader getClassLoader()>() in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
Edge from $d3 = staticinvoke <java.lang.Math: double sin(double)>($d1) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double sin(double)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
Edge from $r4 = interfaceinvoke $r5.<androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)>($r2) in <androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)> to <androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)>
Edge from virtualinvoke $r6.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($r1, $r2, $r3, 1) in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>
Edge from staticinvoke <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)>
Edge from $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Edge from $r1 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>() in <androidx.fragment.app.strictmode.FragmentStrictMode$Policy: void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)> to <kotlin.collections.EmptyMap: java.util.Set entrySet()>
Edge from $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performStop()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>() in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void <init>()>
Edge from virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)> to <androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
Edge from $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)>($r1) in <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)> to <androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)>
Edge from $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1) in <androidx.core.graphics.ColorUtils: int compositeColors(int,int)> to <android.graphics.Color: int alpha(int)>
Edge from specialinvoke $r5.<android.animation.ObjectAnimator: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)> to <android.animation.ObjectAnimator: void <init>()>
Edge from $r4 = virtualinvoke $r3.<com.example.compatibilitytest.databinding.ActivityMain2Binding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>() in <com.example.compatibilitytest.MainActivity2: void onCreate(android.os.Bundle)> to <com.example.compatibilitytest.databinding.ActivityMain2Binding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()>() in <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)> to <androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve Resources#mDrawableCache field", $r3) in <androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from $i3 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addChild(android.graphics.drawable.Drawable)>($r2) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>
Edge from $r0 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.util.DisplayMetrics getDisplayMetrics()>
Edge from specialinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r0) in <androidx.fragment.app.FragmentActivity: void <init>()> to <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>
Edge from $r6 = virtualinvoke $r0.<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>() in <androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void attach()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> to <androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)>
Edge from $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r1) in <androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.tracing.Trace: void beginSection(java.lang.String)> to <android.os.Build$VERSION: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateSelf()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
Edge from $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>() in <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()> to <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>
Edge from virtualinvoke $r7.<android.graphics.PathMeasure: boolean nextContour()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)> to <android.graphics.PathMeasure: boolean nextContour()>
Edge from $r13 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>($r8) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>
Edge from virtualinvoke $r3.<androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)>($r0) in <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)> to <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)>
Edge from $r6 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() in <androidx.fragment.app.FragmentManager$9: void onActivityResult(java.util.Map)> to <java.util.HashMap: java.util.Collection values()>
Edge from virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)> to <androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)> to <java.lang.Object: java.lang.Class getClass()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.appcompat.app.AppCompatDelegateImpl: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
Edge from $r8 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)>($i0, $r8) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)>
Edge from virtualinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>($r3) in <androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path must start at (0,0) and end at (1,1) start: ") in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
Edge from $r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r3) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>
Edge from virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l2) in <com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)> to <android.os.Handler: void handleMessage(android.os.Message)>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)> to <android.graphics.drawable.Drawable: void <init>()>
Edge from $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from specialinvoke $r2.<android.animation.AnimatorSet: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()> to <android.animation.AnimatorSet: void <init>()>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: void <init>()>
Edge from $r2 = <androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET> in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from $z0 = virtualinvoke $r0.<kotlin.collections.EmptySet: boolean contains(java.lang.Void)>($r2) in <kotlin.collections.EmptySet: boolean contains(java.lang.Object)> to <kotlin.collections.EmptySet: boolean contains(java.lang.Void)>
Edge from virtualinvoke $r0.<android.graphics.Path: void close()>() in <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])> to <android.graphics.Path: void close()>
Edge from $r8 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int[] getState()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>() in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()>
Edge from virtualinvoke $r2.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r4) in <androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
Edge from virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()>() in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>
Edge from $r5 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r6, $i0, $r0) in <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)> to <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>
Edge from $i0 = virtualinvoke $r0.<com.google.android.material.snackbar.BaseTransientBottomBar: int getSnackbarBaseLayoutResId()>() in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.snackbar.BaseTransientBottomBar: int getSnackbarBaseLayoutResId()>
Edge from virtualinvoke $r1.<androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>($r0, null) in <dummyMainClass: com.example.compatibilitytest.MainActivity4 dummyMainMethod_com_example_compatibilitytest_MainActivity4(android.content.Intent)> to <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>
Edge from $r4 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() in <androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)> to <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()>
Edge from $r4 = virtualinvoke $r5.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from $l1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>($r7) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0) in <androidx.core.content.res.CamUtils: float yFromInt(int)> to <android.graphics.Color: int blue(int)>
Edge from specialinvoke $r7.<android.graphics.Matrix: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)> to <android.graphics.Matrix: void <init>()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>() in <androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.VectorEnabledTintResources: android.util.DisplayMetrics getDisplayMetrics()>
Edge from virtualinvoke $r0.<androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.CharSequence)>($r1, $r3) in <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.CharSequence)>
Edge from staticinvoke <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])>($r0, $c3, $r3) in <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)> to <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])>
Edge from $z0 = virtualinvoke $r8.<android.os.Bundle: boolean containsKey(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)> to <android.os.Bundle: boolean containsKey(java.lang.String)>
Edge from r3 = <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE> in <androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State 'from'(int)> to <androidx.fragment.app.SpecialEffectsController$Operation$State: void <clinit>()>
Edge from $z0 = virtualinvoke $r1.<android.app.Activity: boolean isFinishing()>() in <androidx.core.app.ActivityCompat$2: void run()> to <android.app.Activity: boolean isFinishing()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.Lifecycle: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r2 = interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>() in <androidx.appcompat.app.ToolbarActionBar: void onDestroy()> to <androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()>
Edge from virtualinvoke $r1.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>($r7) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Canvas: boolean clipPath(android.graphics.Path)>
Edge from $r1 = virtualinvoke $r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("androidx.lifecycle.BundlableSavedStateRegistry.key") in <androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)> to <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
Edge from $z1 = staticinvoke <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>($r1, $r0) in <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)> to <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>
Edge from $i0 = virtualinvoke $r6.<androidx.lifecycle.Lifecycle$State: int ordinal()>() in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <java.lang.Enum: int ordinal()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resulting in focused view ") in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float abs(float)>
Edge from virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r14) in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)> to <android.util.SparseArray: void put(int,java.lang.Object)>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.view.ActionBarPolicy: void <init>(android.content.Context)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: void <init>(android.graphics.drawable.Drawable$ConstantState)> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int[] getState()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllStateInternal()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from specialinvoke $r6.<java.util.HashSet: void <init>()>() in <androidx.fragment.app.SpecialEffectsController$Operation: void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)> to <java.util.HashSet: void <init>()>
Edge from $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.XmlResourceParser getXml(int)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.fragment.app.FragmentManager: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.arch.core.executor.ArchTaskExecutor$1: void <init>()> to <java.lang.Object: void <init>()>
Edge from $f1 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)>($r5) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)>
Edge from specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: void <init>()>
Edge from $i1 = virtualinvoke $r1.<androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)>($r0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r1) in <androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
Edge from specialinvoke $r5.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: void <init>()>
Edge from $r2 = virtualinvoke $r0.<androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>($i0, $r1) in <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: java.lang.Object parseResult(int,android.content.Intent)> to <androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>
Edge from interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0) in <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double sqrt(double)>
Edge from $z0 = virtualinvoke $r4.<android.animation.AnimatorSet: boolean isStarted()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()> to <android.animation.AnimatorSet: boolean isStarted()>
Edge from $r1 = virtualinvoke $r0.<androidx.core.view.ViewCompat$2: java.lang.CharSequence frameworkGet(android.view.View)>($r2) in <androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)> to <androidx.core.view.ViewCompat$2: java.lang.CharSequence frameworkGet(android.view.View)>
Edge from $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 0) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <java.lang.Math: int min(int,int)>
Edge from staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesFlusher", "Could not retrieve Resources#mResourcesImpl field", $r3) in <androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
Edge from specialinvoke r9.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void <init>(android.graphics.drawable.Animatable)>($r6) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void <init>(android.graphics.drawable.Animatable)>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0) in <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)>
Edge from $r1 = <androidx.startup.AppInitializer: java.lang.Object sLock> in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <androidx.startup.AppInitializer: void <clinit>()>
Edge from staticinvoke <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)>($r1, $i0) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)> to <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)>
Edge from $r1 = specialinvoke $r0.<androidx.fragment.app.FragmentActivity: android.content.res.Resources getResources()>() in <androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
Edge from $i0 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()>
Edge from $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.63) in <androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)> to <java.lang.Math: double pow(double,double)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onDestroy()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity3 dummyMainMethod_com_example_compatibilitytest_MainActivity3(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onDestroy()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.ArraySet: void <init>(int)> to <java.lang.Object: void <init>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r1 = new android.os.Bundle in <androidx.activity.ComponentActivity$6: android.os.Bundle saveState()> to <android.os.Bundle: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.loader.app.LoaderManager: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.fragment.app.FragmentActivity: void <init>()>() in <androidx.appcompat.app.AppCompatActivity: void <init>()> to <androidx.fragment.app.FragmentActivity: void <init>()>
Edge from specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
Edge from specialinvoke $r12.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> to <android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>
Edge from $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED> in <androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner,boolean)> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $i1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>($r1, $i0) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>
Edge from specialinvoke r13.<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r5) in <androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>
Edge from virtualinvoke $r0.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0) in <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)>
Edge from virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>
Edge from specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r3.<androidx.arch.core.executor.DefaultTaskExecutor$1: void <init>(androidx.arch.core.executor.DefaultTaskExecutor)>($r0) in <androidx.arch.core.executor.DefaultTaskExecutor: void <init>()> to <androidx.arch.core.executor.DefaultTaskExecutor$1: void <init>(androidx.arch.core.executor.DefaultTaskExecutor)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()> to <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>
Edge from specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
Edge from $r0 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)>($i0) in <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)> to <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)>
Edge from staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r2, $r3) in <androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()> to <androidx.core.view.ViewCompat: void <clinit>()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentStore: void burpActive()>() in <androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)> to <androidx.fragment.app.FragmentStore: void burpActive()>
Edge from $i0 = virtualinvoke $r3.<android.graphics.Rect: int width()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Rect: int width()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>()> to <java.lang.Object: void <init>()>
Edge from staticinvoke <com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)>($r1) in <com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)> to <com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)>
Edge from specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void createView()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(0) in <androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()> to <androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>
Edge from specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)> to <androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>
Edge from $z0 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>
Edge from specialinvoke $r0.<com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)>($r3) in <com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)> to <com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void setContentView(int)>($i0) in <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)> to <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>
Edge from specialinvoke $r7.<com.example.compatibilitytest.MainActivity$1: void <init>(com.example.compatibilitytest.MainActivity)>($r0) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <com.example.compatibilitytest.MainActivity$1: void <init>(com.example.compatibilitytest.MainActivity)>
Edge from specialinvoke r22.<java.lang.StringBuilder: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <java.lang.StringBuilder: void <init>()>
Edge from $d8 = staticinvoke <java.lang.Math: double atan2(double,double)>($d9, $d8) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <java.lang.Math: double atan2(double,double)>
Edge from specialinvoke $r4.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r1, $r3) in <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)> to <androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
Edge from specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentStateManager: void pause()> to <java.lang.StringBuilder: void <init>()>
Edge from $r1 = <kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE> in <kotlin.sequences.EmptySequence: java.util.Iterator iterator()> to <kotlin.collections.EmptyIterator: void <clinit>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.collection.MapCollections: void <init>()> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r0.<androidx.navigation.Navigation$findViewNavController$1: void <init>()>() in <androidx.navigation.Navigation$findViewNavController$1: void <clinit>()> to <androidx.navigation.Navigation$findViewNavController$1: void <init>()>
Edge from specialinvoke $r0.<com.example.compatibilitytest.MainActivity: void <init>()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <com.example.compatibilitytest.MainActivity: void <init>()>
Edge from $i1 = virtualinvoke $r2.<androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)>($r0) in <androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)> to <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)>
Edge from virtualinvoke $r13.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r16) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)> to <android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>
Edge from staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation)>($r0, $r1) in <androidx.fragment.app.strictmode.FragmentStrictMode: void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation)> to <androidx.fragment.app.strictmode.FragmentStrictMode: void <clinit>()>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()>
Edge from $r1 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r2, 0) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>
Edge from $r1 = specialinvoke $r0.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()>() in <androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()> to <androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()>
Edge from virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FragmentManager:") in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r3.<android.util.TypedValue: void <init>()>() in <androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()> to <android.util.TypedValue: void <init>()>
Edge from $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r1, $r2) in <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])> to <androidx.appcompat.widget.VectorEnabledTintResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
Edge from $r4 = staticinvoke <kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence)>($r3) in <kotlin.sequences.FilteringSequence$iterator$1: void calcNext()> to <kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence)>
Edge from r0 = <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance> in <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()> to <androidx.vectordrawable.graphics.drawable.ArgbEvaluator: void <clinit>()>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>(10) in <androidx.collection.LongSparseArray: void <init>(int)> to <androidx.collection.ContainerHelpers: void <clinit>()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
Edge from virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1) in <androidx.fragment.app.FragmentActivity: void onResumeFragments()> to <androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>
Edge from specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4) in <androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
Edge from $i0 = specialinvoke $r0.<androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)>($r1) in <androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)> to <androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)>
Edge from virtualinvoke $r7.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(null) in <androidx.fragment.app.FragmentStateManager: void destroyFragmentView()> to <androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>
Edge from $r2 = <androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET> in <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.DrawableUtils: void <clinit>()>
Edge from virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") in <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r3 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>() in <androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()> to <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
Edge from specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
Edge from $i0 = virtualinvoke $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>
Edge from $r1 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(null) in <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()> to <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from $r1 = virtualinvoke $r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>($r2, $i0, 0) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)>
Edge from $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Error: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from specialinvoke $r1.<androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>(null, $r0, $i0) in <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.content.res.ColorStateList)> to <androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>
Edge from $r0 = <java.lang.Float: java.lang.Class TYPE> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)> to <java.lang.Float: void <clinit>()>
Edge from virtualinvoke $r5.<android.graphics.Matrix: void getValues(float[])>($r6) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)> to <android.graphics.Matrix: void getValues(float[])>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1) in <androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.Fragment: void performDestroy()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>() in <androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>
Edge from virtualinvoke $r1.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r0, 1) in <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)> to <androidx.appcompat.widget.VectorEnabledTintResources: void getValue(int,android.util.TypedValue,boolean)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)>
Edge from virtualinvoke $r13.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setCallback(android.graphics.drawable.Drawable$Callback)>(null) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
Edge from $r9 = virtualinvoke $r4.<android.app.Activity: android.app.Application getApplication()>() in <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)> to <android.app.Activity: android.app.Application getApplication()>
Edge from $r1 = staticinvoke <androidx.viewbinding.ViewBindings: android.view.View findChildViewById(android.view.View,int)>($r0, 2131230911) in <com.example.compatibilitytest.databinding.ActivityMain2Binding: com.example.compatibilitytest.databinding.ActivityMain2Binding bind(android.view.View)> to <androidx.viewbinding.ViewBindings: android.view.View findChildViewById(android.view.View,int)>
Edge from $r2 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <clinit>()>
Edge from staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r3) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
Edge from specialinvoke r15.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2) in <androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
Edge from $r1 = <android.util.StateSet: int[] WILD_CARD> in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])> to <android.util.StateSet: void <clinit>()>
Edge from virtualinvoke $r6.<androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>($r2) in <androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>
Edge from $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>() in <androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)> to <androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()>
Edge from $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) in <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.result.ActivityResultRegistry$CallbackAndContract: void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r5.<java.util.ArrayList: void <init>()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <java.util.ArrayList: void <init>()>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.activity.ComponentActivity$1: void <init>(androidx.activity.ComponentActivity)> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void detach()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onStart()>() in <androidx.fragment.app.Fragment: void performStart()> to <androidx.fragment.app.Fragment: void onStart()>
Edge from virtualinvoke $r6.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
Edge from interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r9) in <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)> to <java.util.ArrayList: boolean addAll(java.util.Collection)>
Edge from staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i1) in <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)> to <java.lang.System: void <clinit>()>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()>
Edge from specialinvoke $r4.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r5, $r1, $r2) in <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>
Edge from staticinvoke <androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r0, $r1) in <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)> to <androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)>($r0) in <androidx.fragment.app.FragmentStateManager: void destroy()> to <androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.widget.ResourceManagerInternal: void <init>()> to <java.lang.Object: void <init>()>
Edge from $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
Edge from specialinvoke $r4.<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>("ON_STOP", 4) in <androidx.lifecycle.Lifecycle$Event: void <clinit>()> to <androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>
Edge from $r1 = specialinvoke $r0.<androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()>() in <androidx.collection.ArraySet: java.util.Iterator iterator()> to <androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()>
Edge from virtualinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)>($r3) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)>
Edge from virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ") in <androidx.fragment.app.Fragment: android.content.Context requireContext()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($r1, null, $r2, $r1) in <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)> to <androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>
Edge from specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>($r2, 0) in <androidx.fragment.app.FragmentStateManager: void start()> to <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>
Edge from $i0 = staticinvoke <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>($i0) in <androidx.collection.LongSparseArray: void append(long,java.lang.Object)> to <androidx.collection.ContainerHelpers: int idealLongArraySize(int)>
Edge from $z0 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()>
Edge from $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY> in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)> to <android.graphics.PorterDuff$Mode: void <clinit>()>
Edge from specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void performAttach()> to <java.lang.StringBuilder: void <init>()>
Edge from specialinvoke $r7.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()>
Edge from $r4 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH> in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)> to <androidx.vectordrawable.graphics.drawable.AndroidResources: void <clinit>()>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()>
Edge from specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4) in <androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Edge from virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.appcompat.app.AppCompatDelegateImpl$3: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)> to <java.lang.Object: void <init>()>
Edge from $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r2, $i1, $i0) in <kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
Edge from $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r3, $r0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
Edge from $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() in <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)> to <kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()>
Edge from $i0 = <android.os.Build$VERSION: int SDK_INT> in <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: boolean isSynced()>() in <androidx.lifecycle.LifecycleRegistry: void sync()> to <androidx.lifecycle.LifecycleRegistry: boolean isSynced()>
Edge from virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forceSetFactory2 Could not find field \'mFactory2\' on class ") in <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $z0 = virtualinvoke $r2.<androidx.fragment.app.Fragment: boolean isInBackStack()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.Fragment: boolean isInBackStack()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>(null) in <androidx.fragment.app.FragmentActivity: void lambda$init$1$androidx-fragment-app-FragmentActivity(android.content.Context)> to <androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>
Edge from $z0 = staticinvoke <kotlin.collections.CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)>($r7, $r3) in <androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)> to <kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostResume()>() in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostResume()>
Edge from specialinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>($r2, $r0, null) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>
Edge from virtualinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>($z1, $z0) in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)>
Edge from staticinvoke <androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>($r1, $r2, $i0) in <androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)> to <androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>
Edge from virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowNoTitle: ") in <androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r4 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3) in <androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <androidx.lifecycle.MethodCallsLogger: void <init>()> to <java.lang.Object: void <init>()>
Edge from virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r14) in <androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>
Edge from $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>($r2) in <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
Edge from virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3) in <androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") in <androidx.fragment.app.FragmentStateManager: void resume()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<com.example.compatibilitytest.MyService: void onHandleIntent(android.content.Intent)>(null) in <dummyMainClass: com.example.compatibilitytest.MyService dummyMainMethod_com_example_compatibilitytest_MyService(android.content.Intent)> to <com.example.compatibilitytest.MyService: void onHandleIntent(android.content.Intent)>
Edge from $r5 = virtualinvoke $r4.<androidx.activity.ComponentActivity: android.view.Window getWindow()>() in <androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <android.app.Activity: android.view.Window getWindow()>
Edge from specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>() in <androidx.core.graphics.drawable.WrappedDrawableState: void <init>(androidx.core.graphics.drawable.WrappedDrawableState)> to <android.graphics.drawable.Drawable$ConstantState: void <init>()>
Edge from $r7 = virtualinvoke $r10.<androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()>
Edge from $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $r5 = staticinvoke <androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity)>($r2) in <androidx.activity.ComponentActivity$7: void onContextAvailable(android.content.Context)> to <androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity)>
Edge from $r1 = <com.google.android.material.internal.ThemeEnforcement: int[] APPCOMPAT_CHECK_ATTRS> in <com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)> to <com.google.android.material.internal.ThemeEnforcement: void <clinit>()>
Edge from virtualinvoke $r2.<androidx.fragment.app.FragmentController: void dispatchStop()>() in <androidx.fragment.app.FragmentActivity: void onStop()> to <androidx.fragment.app.FragmentController: void dispatchStop()>
Edge from virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0) in <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $r9 = virtualinvoke $r8.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("input_method") in <androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
Edge from $z0 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)>($i2, $i3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)>
Edge from $r1 = <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance> in <androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)> to <androidx.lifecycle.ClassesInfoCache: void <clinit>()>
Edge from $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: double cos(double)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0) in <androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
Edge from <androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State> = $r5 in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.fragment.app.FragmentStateManager$2: void <clinit>()>
Edge from specialinvoke $r3.<androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)>($r1, $r2) in <androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)> to <androidx.fragment.app.strictmode.WrongFragmentContainerViolation: void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup)>
Edge from virtualinvoke $r0.<androidx.fragment.app.Fragment: void onDetach()>() in <androidx.fragment.app.Fragment: void performDetach()> to <androidx.fragment.app.Fragment: void onDetach()>
Edge from virtualinvoke $r4.<android.animation.AnimatorSet: void start()>() in <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()> to <android.animation.AnimatorSet: void start()>
Edge from specialinvoke $r0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)>($r1) in <androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)> to <androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0) in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)> to <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)>
Edge from $r6 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>
Edge from specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() in <androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)> to <java.lang.StringBuilder: void <init>()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2) in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
Edge from $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> to <java.util.ArrayList: int size()>
Edge from interfaceinvoke $r6.<androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r2) in <androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)> to <androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r8.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r1) in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>
Edge from $r4 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>() in <androidx.fragment.app.FragmentStateManager$2: void <clinit>()> to <androidx.lifecycle.Lifecycle$State: void <clinit>()>
Edge from $r2 = specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($r1) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>
Edge from $r4 = virtualinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>($i1) in <androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> to <androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>
Edge from virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()>
Edge from virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") in <androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <androidx.fragment.app.FragmentStore: void <init>()> to <java.util.ArrayList: void <init>()>
Edge from staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>($r0, $f0, $f1, $f2, $f3, $f4, $f5, $f6, $z0, $z1) in <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)> to <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>
Edge from virtualinvoke $r3.<androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>($r1) in <androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)> to <androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom CREATED: ") in <androidx.fragment.app.FragmentStateManager: void destroy()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from virtualinvoke $r0.<androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity dummyMainMethod_com_example_compatibilitytest_MainActivity(android.content.Intent)> to <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
Edge from virtualinvoke $r2.<java.util.ArrayList: void clear()>() in <androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)> to <java.util.ArrayList: void clear()>
Edge from $r4 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>($r2, "currentIndex", $r3) in <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>
Edge from virtualinvoke $r9.<androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>($r10) in <androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)> to <androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()>
Edge from $i1 = <android.os.Build$VERSION: int SDK_INT> in <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.Fragment: void restoreViewState()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void activityCreated()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START> in <androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)> to <androidx.lifecycle.Lifecycle$Event: void <clinit>()>
Edge from $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
Edge from $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()> to <android.graphics.drawable.Drawable: int getMinimumWidth()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()>() in <androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()> to <androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()>
Edge from specialinvoke $r2.<androidx.collection.ArraySet$1: void <init>(androidx.collection.ArraySet)>($r0) in <androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()> to <androidx.collection.ArraySet$1: void <init>(androidx.collection.ArraySet)>
Edge from staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r2, $i0, $i1, $i2, $i3) in <androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)> to <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>
Edge from $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentManagerViewModel: void onCleared()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3) in <androidx.fragment.app.FragmentStateManager: void resume()> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from virtualinvoke $r0.<androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.example.compatibilitytest.MainActivity2 dummyMainMethod_com_example_compatibilitytest_MainActivity2(android.content.Intent)> to <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>
Edge from $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>() in <androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)> to <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>
Edge from $l1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>($r2) in <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)> to <androidx.appcompat.widget.ResourceManagerInternal: void <clinit>()>
Edge from $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2) in <androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)> to <androidx.fragment.app.FragmentManager: void <clinit>()>
Edge from $r2 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)>($r3) in <androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)> to <androidx.lifecycle.Lifecycling: void <clinit>()>
Edge from $r6 = virtualinvoke $r1.<android.app.Activity: android.view.Window getWindow()>() in <androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)> to <android.app.Activity: android.view.Window getWindow()>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "getNextValue") in <kotlin.sequences.GeneratorSequence: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
Edge from $r7 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r4, $f0, $r3) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)> to <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)>
Edge from $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()>
Edge from specialinvoke $r0.<androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>($z0) in <androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)> to <androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>
Edge from specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from $r5 = virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object pollFirst()>() in <androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)> to <java.util.ArrayDeque: java.lang.Object pollFirst()>
Edge from $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <java.lang.StringBuilder: java.lang.String toString()>
Edge from $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
Edge from specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() in <androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)> to <java.lang.StringBuilder: void <init>()>
Edge from virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom ATTACHED: ") in <androidx.fragment.app.FragmentStateManager: void detach()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Edge from $i1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r3, $r2, "startOffset", 2, 0) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)> to <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
Edge from staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "requireViewById<View>(activity, viewId)") in <androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)> to <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5) in <androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)> to <android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
Edge from specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.example.compatibilitytest.MainActivity4$1: void <init>(com.example.compatibilitytest.MainActivity4)> to <java.lang.Object: void <init>()>
Edge from specialinvoke $r8.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)> to <android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>
Edge from $z0 = virtualinvoke $r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>() in <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)> to <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>
Edge from specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)>($i2, $z1, null) in <androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)> to <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)>
Edge from $r9 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>($r8, $r2) in <androidx.fragment.app.FragmentStateManager: int computeExpectedState()> to <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>
Edge from $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>($r1, $r8, $r9) in <androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)> to <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
Edge from virtualinvoke $r7.<androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)>($r0) in <androidx.fragment.app.FragmentStateManager: void moveToExpectedState()> to <androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)>
Edge from specialinvoke r30.<androidx.fragment.app.FragmentManager$7: void <init>(androidx.fragment.app.FragmentManager)>($r0) in <androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)> to <androidx.fragment.app.FragmentManager$7: void <init>(androidx.fragment.app.FragmentManager)>
Edge from virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()>
Edge from $f1 = staticinvoke <java.lang.Math: float signum(float)>($f1) in <androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)> to <java.lang.Math: float signum(float)>
Edge from specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4) in <androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)> to <androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>
Edge from specialinvoke $r1.<androidx.startup.AppInitializer: void <init>(android.content.Context)>($r0) in <androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)> to <androidx.startup.AppInitializer: void <init>(android.content.Context)>
Edge from $r1 = new android.content.res.Configuration in <androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)> to <android.content.res.Configuration: void <clinit>()>
Edge from $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()> to <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()>
Edge from $r1 = virtualinvoke $r0.<kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Boolean invoke(java.lang.Object)>($r2) in <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object)> to <kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Boolean invoke(java.lang.Object)>
Edge from $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>() in <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)> to <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1) in <androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)> to <android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
Edge from specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
Edge from virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(1) in <androidx.fragment.app.FragmentManager: void dispatchStop()> to <androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>
Edge from virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>() in <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()> to <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()>
